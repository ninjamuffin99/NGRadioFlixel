// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Date
#include <Date.h>
#endif
#ifndef INCLUDED_List
#include <List.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED__List_ListNode
#include <_List/ListNode.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Serializer
#include <haxe/Serializer.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_80055b2442a299a2_101_new,"haxe.Serializer","new",0xcdbbc7ec,"haxe.Serializer.new","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",101,0xfce2327c)
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_117_toString,"haxe.Serializer","toString",0x95bdfda0,"haxe.Serializer.toString","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",117,0xfce2327c)
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_153_serializeString,"haxe.Serializer","serializeString",0xd565bc5d,"haxe.Serializer.serializeString","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",153,0xfce2327c)
static const ::String _hx_array_data_6a6ea1fa_3[] = {
	HX_("R",52,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_4[] = {
	HX_("y",79,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_5[] = {
	HX_(":",3a,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_172_serializeRef,"haxe.Serializer","serializeRef",0x0b8ed647,"haxe.Serializer.serializeRef","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",172,0xfce2327c)
static const ::String _hx_array_data_6a6ea1fa_8[] = {
	HX_("r",72,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_209_serializeFields,"haxe.Serializer","serializeFields",0x44c42205,"haxe.Serializer.serializeFields","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",209,0xfce2327c)
static const ::String _hx_array_data_6a6ea1fa_11[] = {
	HX_("g",67,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_228_serialize,"haxe.Serializer","serialize",0x3cea866c,"haxe.Serializer.serialize","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",228,0xfce2327c)
static const ::String _hx_array_data_6a6ea1fa_22[] = {
	HX_("n",6e,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_23[] = {
	HX_("z",7a,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_24[] = {
	HX_("i",69,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_25[] = {
	HX_("k",6b,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_26[] = {
	HX_("d",64,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_27[] = {
	HX_("B",42,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_28[] = {
	HX_("A",41,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_29[] = {
	HX_("B",42,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_30[] = {
	HX_("o",6f,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_31[] = {
	HX_("a",61,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_32[] = {
	HX_("n",6e,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_33[] = {
	HX_("u",75,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_34[] = {
	HX_("n",6e,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_35[] = {
	HX_("u",75,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_36[] = {
	HX_("h",68,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_37[] = {
	HX_("v",76,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_38[] = {
	HX_("l",6c,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_39[] = {
	HX_("h",68,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_40[] = {
	HX_("q",71,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_41[] = {
	HX_(":",3a,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_42[] = {
	HX_("h",68,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_43[] = {
	HX_("M",4d,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_44[] = {
	HX_("h",68,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_45[] = {
	HX_("b",62,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_46[] = {
	HX_("h",68,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_47[] = {
	HX_("s",73,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_48[] = {
	HX_(":",3a,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_49[] = {
	HX_("C",43,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_50[] = {
	HX_("g",67,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_51[] = {
	HX_("c",63,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_52[] = {
	HX_(":",3a,00,00,00),
};
static const ::String _hx_array_data_6a6ea1fa_53[] = {
	HX_(":",3a,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_556_run,"haxe.Serializer","run",0xcdbeded7,"haxe.Serializer.run","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",556,0xfce2327c)
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_55_boot,"haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",55,0xfce2327c)
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_67_boot,"haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",67,0xfce2327c)
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_69_boot,"haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",69,0xfce2327c)
HX_LOCAL_STACK_FRAME(_hx_pos_80055b2442a299a2_70_boot,"haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",70,0xfce2327c)
namespace haxe{

void Serializer_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_80055b2442a299a2_101_new)
HXLINE( 102)		this->buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 103)		this->cache = ::cpp::VirtualArray_obj::__new();
HXLINE( 104)		this->useCache = ::haxe::Serializer_obj::USE_CACHE;
HXLINE( 105)		this->useEnumIndex = ::haxe::Serializer_obj::USE_ENUM_INDEX;
HXLINE( 106)		this->shash =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 107)		this->scount = (int)0;
            	}

Dynamic Serializer_obj::__CreateEmpty() { return new Serializer_obj; }

void *Serializer_obj::_hx_vtable = 0;

Dynamic Serializer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Serializer_obj > _hx_result = new Serializer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Serializer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0866dbc4;
}

::String Serializer_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_117_toString)
HXDLIN( 117)		return this->buf->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Serializer_obj,toString,return )

void Serializer_obj::serializeString(::String s){
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_153_serializeString)
HXLINE( 154)		 ::Dynamic x = this->shash->get(s);
HXLINE( 155)		if (hx::IsNotNull( x )) {
HXLINE( 156)			{
HXLINE( 156)				 ::StringBuf _this = this->buf;
HXDLIN( 156)				if (hx::IsNotNull( _this->charBuf )) {
HXLINE( 156)					_this->flush();
            				}
HXDLIN( 156)				if (hx::IsNull( _this->b )) {
HXLINE( 156)					_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_3,1);
            				}
            				else {
HXLINE( 156)					_this->b->push(HX_("R",52,00,00,00));
            				}
            			}
HXLINE( 157)			{
HXLINE( 157)				 ::StringBuf _this1 = this->buf;
HXDLIN( 157)				if (hx::IsNotNull( _this1->charBuf )) {
HXLINE( 157)					_this1->flush();
            				}
HXDLIN( 157)				if (hx::IsNull( _this1->b )) {
HXLINE( 157)					_this1->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            				}
            				else {
HXLINE( 157)					::Array< ::String > _this2 = _this1->b;
HXDLIN( 157)					_this2->push(::Std_obj::string(x));
            				}
            			}
HXLINE( 158)			return;
            		}
HXLINE( 160)		 ::haxe::ds::StringMap _hx_tmp = this->shash;
HXDLIN( 160)		_hx_tmp->set(s,this->scount++);
HXLINE( 165)		{
HXLINE( 165)			 ::StringBuf _this3 = this->buf;
HXDLIN( 165)			if (hx::IsNotNull( _this3->charBuf )) {
HXLINE( 165)				_this3->flush();
            			}
HXDLIN( 165)			if (hx::IsNull( _this3->b )) {
HXLINE( 165)				_this3->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_4,1);
            			}
            			else {
HXLINE( 165)				_this3->b->push(HX_("y",79,00,00,00));
            			}
            		}
HXLINE( 166)		s = ::StringTools_obj::urlEncode(s);
HXLINE( 167)		{
HXLINE( 167)			 ::StringBuf _this4 = this->buf;
HXDLIN( 167)			int x1 = s.length;
HXDLIN( 167)			if (hx::IsNotNull( _this4->charBuf )) {
HXLINE( 167)				_this4->flush();
            			}
HXDLIN( 167)			if (hx::IsNull( _this4->b )) {
HXLINE( 167)				_this4->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            			}
            			else {
HXLINE( 167)				::Array< ::String > _this5 = _this4->b;
HXDLIN( 167)				_this5->push(::Std_obj::string(x1));
            			}
            		}
HXLINE( 168)		{
HXLINE( 168)			 ::StringBuf _this6 = this->buf;
HXDLIN( 168)			if (hx::IsNotNull( _this6->charBuf )) {
HXLINE( 168)				_this6->flush();
            			}
HXDLIN( 168)			if (hx::IsNull( _this6->b )) {
HXLINE( 168)				_this6->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_5,1);
            			}
            			else {
HXLINE( 168)				_this6->b->push(HX_(":",3a,00,00,00));
            			}
            		}
HXLINE( 169)		{
HXLINE( 169)			 ::StringBuf _this7 = this->buf;
HXDLIN( 169)			if (hx::IsNotNull( _this7->charBuf )) {
HXLINE( 169)				_this7->flush();
            			}
HXDLIN( 169)			if (hx::IsNull( _this7->b )) {
HXLINE( 169)				_this7->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(s));
            			}
            			else {
HXLINE( 169)				::Array< ::String > _this8 = _this7->b;
HXDLIN( 169)				_this8->push(::Std_obj::string(s));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serializeString,(void))

bool Serializer_obj::serializeRef( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_172_serializeRef)
HXLINE( 176)		{
HXLINE( 176)			int _g1 = (int)0;
HXDLIN( 176)			int _g = this->cache->get_length();
HXDLIN( 176)			while((_g1 < _g)){
HXLINE( 176)				_g1 = (_g1 + (int)1);
HXDLIN( 176)				int i = (_g1 - (int)1);
HXLINE( 181)				if (hx::IsEq( this->cache->__get(i),v )) {
HXLINE( 183)					{
HXLINE( 183)						 ::StringBuf _this = this->buf;
HXDLIN( 183)						if (hx::IsNotNull( _this->charBuf )) {
HXLINE( 183)							_this->flush();
            						}
HXDLIN( 183)						if (hx::IsNull( _this->b )) {
HXLINE( 183)							_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_8,1);
            						}
            						else {
HXLINE( 183)							_this->b->push(HX_("r",72,00,00,00));
            						}
            					}
HXLINE( 184)					{
HXLINE( 184)						 ::StringBuf _this1 = this->buf;
HXDLIN( 184)						if (hx::IsNotNull( _this1->charBuf )) {
HXLINE( 184)							_this1->flush();
            						}
HXDLIN( 184)						if (hx::IsNull( _this1->b )) {
HXLINE( 184)							_this1->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(i));
            						}
            						else {
HXLINE( 184)							::Array< ::String > _this2 = _this1->b;
HXDLIN( 184)							_this2->push(::Std_obj::string(i));
            						}
            					}
HXLINE( 185)					return true;
            				}
            			}
            		}
HXLINE( 188)		this->cache->push(v);
HXLINE( 189)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serializeRef,return )

void Serializer_obj::serializeFields( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_209_serializeFields)
HXLINE( 210)		{
HXLINE( 210)			int _g = (int)0;
HXDLIN( 210)			::Array< ::String > _g1 = ::Reflect_obj::fields(v);
HXDLIN( 210)			while((_g < _g1->length)){
HXLINE( 210)				::String f = _g1->__get(_g);
HXDLIN( 210)				_g = (_g + (int)1);
HXLINE( 211)				this->serializeString(f);
HXLINE( 212)				this->serialize(::Reflect_obj::field(v,f));
            			}
            		}
HXLINE( 214)		{
HXLINE( 214)			 ::StringBuf _this = this->buf;
HXDLIN( 214)			if (hx::IsNotNull( _this->charBuf )) {
HXLINE( 214)				_this->flush();
            			}
HXDLIN( 214)			if (hx::IsNull( _this->b )) {
HXLINE( 214)				_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_11,1);
            			}
            			else {
HXLINE( 214)				_this->b->push(HX_("g",67,00,00,00));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serializeFields,(void))

void Serializer_obj::serialize( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_228_serialize)
HXDLIN( 228)		 ::ValueType _g = ::Type_obj::_hx_typeof(v);
HXDLIN( 228)		switch((int)(_hx_getEnumValueIndex(_g))){
            			case (int)0: {
HXLINE( 230)				 ::StringBuf _this = this->buf;
HXDLIN( 230)				if (hx::IsNotNull( _this->charBuf )) {
HXLINE( 230)					_this->flush();
            				}
HXDLIN( 230)				if (hx::IsNull( _this->b )) {
HXLINE( 230)					_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_22,1);
            				}
            				else {
HXLINE( 230)					_this->b->push(HX_("n",6e,00,00,00));
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 232)				int v1 = ( (int)(v) );
HXLINE( 233)				if ((v1 == (int)0)) {
HXLINE( 234)					{
HXLINE( 234)						 ::StringBuf _this1 = this->buf;
HXDLIN( 234)						if (hx::IsNotNull( _this1->charBuf )) {
HXLINE( 234)							_this1->flush();
            						}
HXDLIN( 234)						if (hx::IsNull( _this1->b )) {
HXLINE( 234)							_this1->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_23,1);
            						}
            						else {
HXLINE( 234)							_this1->b->push(HX_("z",7a,00,00,00));
            						}
            					}
HXLINE( 235)					return;
            				}
HXLINE( 237)				{
HXLINE( 237)					 ::StringBuf _this2 = this->buf;
HXDLIN( 237)					if (hx::IsNotNull( _this2->charBuf )) {
HXLINE( 237)						_this2->flush();
            					}
HXDLIN( 237)					if (hx::IsNull( _this2->b )) {
HXLINE( 237)						_this2->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_24,1);
            					}
            					else {
HXLINE( 237)						_this2->b->push(HX_("i",69,00,00,00));
            					}
            				}
HXLINE( 238)				{
HXLINE( 238)					 ::StringBuf _this3 = this->buf;
HXDLIN( 238)					if (hx::IsNotNull( _this3->charBuf )) {
HXLINE( 238)						_this3->flush();
            					}
HXDLIN( 238)					if (hx::IsNull( _this3->b )) {
HXLINE( 238)						_this3->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(v1));
            					}
            					else {
HXLINE( 238)						::Array< ::String > _this4 = _this3->b;
HXDLIN( 238)						_this4->push(::Std_obj::string(v1));
            					}
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 240)				Float v2 = ( (Float)(v) );
HXLINE( 241)				if (::Math_obj::isNaN(v2)) {
HXLINE( 242)					 ::StringBuf _this5 = this->buf;
HXDLIN( 242)					if (hx::IsNotNull( _this5->charBuf )) {
HXLINE( 242)						_this5->flush();
            					}
HXDLIN( 242)					if (hx::IsNull( _this5->b )) {
HXLINE( 242)						_this5->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_25,1);
            					}
            					else {
HXLINE( 242)						_this5->b->push(HX_("k",6b,00,00,00));
            					}
            				}
            				else {
HXLINE( 243)					if (!(::Math_obj::isFinite(v2))) {
HXLINE( 244)						 ::StringBuf _this6 = this->buf;
HXDLIN( 244)						::String x;
HXDLIN( 244)						if ((v2 < (int)0)) {
HXLINE( 244)							x = HX_("m",6d,00,00,00);
            						}
            						else {
HXLINE( 244)							x = HX_("p",70,00,00,00);
            						}
HXDLIN( 244)						if (hx::IsNotNull( _this6->charBuf )) {
HXLINE( 244)							_this6->flush();
            						}
HXDLIN( 244)						if (hx::IsNull( _this6->b )) {
HXLINE( 244)							_this6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            						}
            						else {
HXLINE( 244)							::Array< ::String > _this7 = _this6->b;
HXDLIN( 244)							_this7->push(::Std_obj::string(x));
            						}
            					}
            					else {
HXLINE( 246)						{
HXLINE( 246)							 ::StringBuf _this8 = this->buf;
HXDLIN( 246)							if (hx::IsNotNull( _this8->charBuf )) {
HXLINE( 246)								_this8->flush();
            							}
HXDLIN( 246)							if (hx::IsNull( _this8->b )) {
HXLINE( 246)								_this8->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_26,1);
            							}
            							else {
HXLINE( 246)								_this8->b->push(HX_("d",64,00,00,00));
            							}
            						}
HXLINE( 247)						{
HXLINE( 247)							 ::StringBuf _this9 = this->buf;
HXDLIN( 247)							if (hx::IsNotNull( _this9->charBuf )) {
HXLINE( 247)								_this9->flush();
            							}
HXDLIN( 247)							if (hx::IsNull( _this9->b )) {
HXLINE( 247)								_this9->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(v2));
            							}
            							else {
HXLINE( 247)								::Array< ::String > _this10 = _this9->b;
HXDLIN( 247)								_this10->push(::Std_obj::string(v2));
            							}
            						}
            					}
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 250)				 ::StringBuf _this11 = this->buf;
HXDLIN( 250)				::String x1;
HXDLIN( 250)				if (( (bool)(v) )) {
HXLINE( 250)					x1 = HX_("t",74,00,00,00);
            				}
            				else {
HXLINE( 250)					x1 = HX_("f",66,00,00,00);
            				}
HXDLIN( 250)				if (hx::IsNotNull( _this11->charBuf )) {
HXLINE( 250)					_this11->flush();
            				}
HXDLIN( 250)				if (hx::IsNull( _this11->b )) {
HXLINE( 250)					_this11->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            				}
            				else {
HXLINE( 250)					::Array< ::String > _this12 = _this11->b;
HXDLIN( 250)					_this12->push(::Std_obj::string(x1));
            				}
            			}
            			break;
            			case (int)4: {
HXLINE( 398)				if (::Std_obj::is(v,hx::ClassOf< ::hx::Class >())) {
HXLINE( 399)					::String className = ::Type_obj::getClassName(v);
HXLINE( 403)					if (hx::IsNotNull( ::Type_obj::resolveEnum(className) )) {
HXLINE( 403)						 ::StringBuf _this13 = this->buf;
HXDLIN( 403)						if (hx::IsNotNull( _this13->charBuf )) {
HXLINE( 403)							_this13->flush();
            						}
HXDLIN( 403)						if (hx::IsNull( _this13->b )) {
HXLINE( 403)							_this13->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_27,1);
            						}
            						else {
HXLINE( 403)							_this13->b->push(HX_("B",42,00,00,00));
            						}
            					}
            					else {
HXLINE( 405)						 ::StringBuf _this14 = this->buf;
HXDLIN( 405)						if (hx::IsNotNull( _this14->charBuf )) {
HXLINE( 405)							_this14->flush();
            						}
HXDLIN( 405)						if (hx::IsNull( _this14->b )) {
HXLINE( 405)							_this14->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_28,1);
            						}
            						else {
HXLINE( 405)							_this14->b->push(HX_("A",41,00,00,00));
            						}
            					}
HXLINE( 406)					this->serializeString(className);
            				}
            				else {
HXLINE( 407)					if (::Std_obj::is(v,hx::ClassOf< ::Enum >())) {
HXLINE( 408)						{
HXLINE( 408)							 ::StringBuf _this15 = this->buf;
HXDLIN( 408)							if (hx::IsNotNull( _this15->charBuf )) {
HXLINE( 408)								_this15->flush();
            							}
HXDLIN( 408)							if (hx::IsNull( _this15->b )) {
HXLINE( 408)								_this15->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_29,1);
            							}
            							else {
HXLINE( 408)								_this15->b->push(HX_("B",42,00,00,00));
            							}
            						}
HXLINE( 409)						this->serializeString(::Type_obj::getEnumName(v));
            					}
            					else {
HXLINE( 411)						bool _hx_tmp;
HXDLIN( 411)						if (this->useCache) {
HXLINE( 411)							_hx_tmp = this->serializeRef(v);
            						}
            						else {
HXLINE( 411)							_hx_tmp = false;
            						}
HXDLIN( 411)						if (_hx_tmp) {
HXLINE( 412)							return;
            						}
HXLINE( 413)						{
HXLINE( 413)							 ::StringBuf _this16 = this->buf;
HXDLIN( 413)							if (hx::IsNotNull( _this16->charBuf )) {
HXLINE( 413)								_this16->flush();
            							}
HXDLIN( 413)							if (hx::IsNull( _this16->b )) {
HXLINE( 413)								_this16->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_30,1);
            							}
            							else {
HXLINE( 413)								_this16->b->push(HX_("o",6f,00,00,00));
            							}
            						}
HXLINE( 414)						this->serializeFields(v);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 518)				HX_STACK_DO_THROW(HX_("Cannot serialize function",35,d8,fc,3d));
            			}
            			break;
            			case (int)6: {
HXLINE( 251)				hx::Class c = _g->_hx_getObject(0).StaticCast< hx::Class >();
HXDLIN( 251)				{
HXLINE( 252)					if (hx::IsEq( c,hx::ClassOf< ::String >() )) {
HXLINE( 253)						this->serializeString(( (::String)(v) ));
HXLINE( 254)						return;
            					}
HXLINE( 256)					bool _hx_tmp1;
HXDLIN( 256)					if (this->useCache) {
HXLINE( 256)						_hx_tmp1 = this->serializeRef(v);
            					}
            					else {
HXLINE( 256)						_hx_tmp1 = false;
            					}
HXDLIN( 256)					if (_hx_tmp1) {
HXLINE( 257)						return;
            					}
HXLINE( 258)					hx::Class _hx_switch_0 = c;
            					if (  (_hx_switch_0==hx::ArrayBase::__mClass) ){
HXLINE( 260)						int ucount = (int)0;
HXLINE( 261)						{
HXLINE( 261)							 ::StringBuf _this17 = this->buf;
HXDLIN( 261)							if (hx::IsNotNull( _this17->charBuf )) {
HXLINE( 261)								_this17->flush();
            							}
HXDLIN( 261)							if (hx::IsNull( _this17->b )) {
HXLINE( 261)								_this17->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_31,1);
            							}
            							else {
HXLINE( 261)								_this17->b->push(HX_("a",61,00,00,00));
            							}
            						}
HXLINE( 265)						int l = ( (int)(v->__length()) );
HXLINE( 266)						{
HXLINE( 266)							int _g1 = (int)0;
HXDLIN( 266)							int _g2 = l;
HXDLIN( 266)							while((_g1 < _g2)){
HXLINE( 266)								_g1 = (_g1 + (int)1);
HXDLIN( 266)								int i = (_g1 - (int)1);
HXLINE( 267)								if (hx::IsNull( v->__GetItem(i) )) {
HXLINE( 268)									ucount = (ucount + (int)1);
            								}
            								else {
HXLINE( 270)									if ((ucount > (int)0)) {
HXLINE( 271)										if ((ucount == (int)1)) {
HXLINE( 272)											 ::StringBuf _this18 = this->buf;
HXDLIN( 272)											if (hx::IsNotNull( _this18->charBuf )) {
HXLINE( 272)												_this18->flush();
            											}
HXDLIN( 272)											if (hx::IsNull( _this18->b )) {
HXLINE( 272)												_this18->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_32,1);
            											}
            											else {
HXLINE( 272)												_this18->b->push(HX_("n",6e,00,00,00));
            											}
            										}
            										else {
HXLINE( 274)											{
HXLINE( 274)												 ::StringBuf _this19 = this->buf;
HXDLIN( 274)												if (hx::IsNotNull( _this19->charBuf )) {
HXLINE( 274)													_this19->flush();
            												}
HXDLIN( 274)												if (hx::IsNull( _this19->b )) {
HXLINE( 274)													_this19->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_33,1);
            												}
            												else {
HXLINE( 274)													_this19->b->push(HX_("u",75,00,00,00));
            												}
            											}
HXLINE( 275)											{
HXLINE( 275)												 ::StringBuf _this20 = this->buf;
HXDLIN( 275)												if (hx::IsNotNull( _this20->charBuf )) {
HXLINE( 275)													_this20->flush();
            												}
HXDLIN( 275)												if (hx::IsNull( _this20->b )) {
HXLINE( 275)													_this20->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(ucount));
            												}
            												else {
HXLINE( 275)													::Array< ::String > _this21 = _this20->b;
HXDLIN( 275)													_this21->push(::Std_obj::string(ucount));
            												}
            											}
            										}
HXLINE( 277)										ucount = (int)0;
            									}
HXLINE( 279)									this->serialize(v->__GetItem(i));
            								}
            							}
            						}
HXLINE( 282)						if ((ucount > (int)0)) {
HXLINE( 283)							if ((ucount == (int)1)) {
HXLINE( 284)								 ::StringBuf _this22 = this->buf;
HXDLIN( 284)								if (hx::IsNotNull( _this22->charBuf )) {
HXLINE( 284)									_this22->flush();
            								}
HXDLIN( 284)								if (hx::IsNull( _this22->b )) {
HXLINE( 284)									_this22->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_34,1);
            								}
            								else {
HXLINE( 284)									_this22->b->push(HX_("n",6e,00,00,00));
            								}
            							}
            							else {
HXLINE( 286)								{
HXLINE( 286)									 ::StringBuf _this23 = this->buf;
HXDLIN( 286)									if (hx::IsNotNull( _this23->charBuf )) {
HXLINE( 286)										_this23->flush();
            									}
HXDLIN( 286)									if (hx::IsNull( _this23->b )) {
HXLINE( 286)										_this23->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_35,1);
            									}
            									else {
HXLINE( 286)										_this23->b->push(HX_("u",75,00,00,00));
            									}
            								}
HXLINE( 287)								{
HXLINE( 287)									 ::StringBuf _this24 = this->buf;
HXDLIN( 287)									if (hx::IsNotNull( _this24->charBuf )) {
HXLINE( 287)										_this24->flush();
            									}
HXDLIN( 287)									if (hx::IsNull( _this24->b )) {
HXLINE( 287)										_this24->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(ucount));
            									}
            									else {
HXLINE( 287)										::Array< ::String > _this25 = _this24->b;
HXDLIN( 287)										_this25->push(::Std_obj::string(ucount));
            									}
            								}
            							}
            						}
HXLINE( 290)						{
HXLINE( 290)							 ::StringBuf _this26 = this->buf;
HXDLIN( 290)							if (hx::IsNotNull( _this26->charBuf )) {
HXLINE( 290)								_this26->flush();
            							}
HXDLIN( 290)							if (hx::IsNull( _this26->b )) {
HXLINE( 290)								_this26->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_36,1);
            							}
            							else {
HXLINE( 290)								_this26->b->push(HX_("h",68,00,00,00));
            							}
            						}
HXLINE( 259)						goto _hx_goto_12;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::Date >()) ){
HXLINE( 298)						 ::Date d = ( ( ::Date)(v) );
HXLINE( 299)						{
HXLINE( 299)							 ::StringBuf _this27 = this->buf;
HXDLIN( 299)							if (hx::IsNotNull( _this27->charBuf )) {
HXLINE( 299)								_this27->flush();
            							}
HXDLIN( 299)							if (hx::IsNull( _this27->b )) {
HXLINE( 299)								_this27->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_37,1);
            							}
            							else {
HXLINE( 299)								_this27->b->push(HX_("v",76,00,00,00));
            							}
            						}
HXLINE( 300)						{
HXLINE( 300)							 ::StringBuf _this28 = this->buf;
HXDLIN( 300)							Float x2 = d->getTime();
HXDLIN( 300)							if (hx::IsNotNull( _this28->charBuf )) {
HXLINE( 300)								_this28->flush();
            							}
HXDLIN( 300)							if (hx::IsNull( _this28->b )) {
HXLINE( 300)								_this28->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            							}
            							else {
HXLINE( 300)								::Array< ::String > _this29 = _this28->b;
HXDLIN( 300)								_this29->push(::Std_obj::string(x2));
            							}
            						}
HXLINE( 297)						goto _hx_goto_12;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::List >()) ){
HXLINE( 292)						{
HXLINE( 292)							 ::StringBuf _this30 = this->buf;
HXDLIN( 292)							if (hx::IsNotNull( _this30->charBuf )) {
HXLINE( 292)								_this30->flush();
            							}
HXDLIN( 292)							if (hx::IsNull( _this30->b )) {
HXLINE( 292)								_this30->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_38,1);
            							}
            							else {
HXLINE( 292)								_this30->b->push(HX_("l",6c,00,00,00));
            							}
            						}
HXLINE( 293)						 ::List v3 = ( ( ::List)(v) );
HXLINE( 294)						{
HXLINE( 294)							 ::_List::ListNode _g_head = v3->h;
HXDLIN( 294)							while(hx::IsNotNull( _g_head )){
HXLINE( 294)								 ::Dynamic val = _g_head->item;
HXDLIN( 294)								_g_head = _g_head->next;
HXDLIN( 294)								 ::Dynamic i1 = val;
HXLINE( 295)								this->serialize(i1);
            							}
            						}
HXLINE( 296)						{
HXLINE( 296)							 ::StringBuf _this31 = this->buf;
HXDLIN( 296)							if (hx::IsNotNull( _this31->charBuf )) {
HXLINE( 296)								_this31->flush();
            							}
HXDLIN( 296)							if (hx::IsNull( _this31->b )) {
HXLINE( 296)								_this31->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_39,1);
            							}
            							else {
HXLINE( 296)								_this31->b->push(HX_("h",68,00,00,00));
            							}
            						}
HXLINE( 291)						goto _hx_goto_12;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::ds::IntMap >()) ){
HXLINE( 310)						{
HXLINE( 310)							 ::StringBuf _this32 = this->buf;
HXDLIN( 310)							if (hx::IsNotNull( _this32->charBuf )) {
HXLINE( 310)								_this32->flush();
            							}
HXDLIN( 310)							if (hx::IsNull( _this32->b )) {
HXLINE( 310)								_this32->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_40,1);
            							}
            							else {
HXLINE( 310)								_this32->b->push(HX_("q",71,00,00,00));
            							}
            						}
HXLINE( 311)						 ::haxe::ds::IntMap v4 = ( ( ::haxe::ds::IntMap)(v) );
HXLINE( 312)						{
HXLINE( 312)							 ::Dynamic k = v4->keys();
HXDLIN( 312)							while(( (bool)(k->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 312)								int k1 = ( (int)(k->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 313)								{
HXLINE( 313)									 ::StringBuf _this33 = this->buf;
HXDLIN( 313)									if (hx::IsNotNull( _this33->charBuf )) {
HXLINE( 313)										_this33->flush();
            									}
HXDLIN( 313)									if (hx::IsNull( _this33->b )) {
HXLINE( 313)										_this33->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_41,1);
            									}
            									else {
HXLINE( 313)										_this33->b->push(HX_(":",3a,00,00,00));
            									}
            								}
HXLINE( 314)								{
HXLINE( 314)									 ::StringBuf _this34 = this->buf;
HXDLIN( 314)									if (hx::IsNotNull( _this34->charBuf )) {
HXLINE( 314)										_this34->flush();
            									}
HXDLIN( 314)									if (hx::IsNull( _this34->b )) {
HXLINE( 314)										_this34->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(k1));
            									}
            									else {
HXLINE( 314)										::Array< ::String > _this35 = _this34->b;
HXDLIN( 314)										_this35->push(::Std_obj::string(k1));
            									}
            								}
HXLINE( 315)								this->serialize(v4->get(k1));
            							}
            						}
HXLINE( 317)						{
HXLINE( 317)							 ::StringBuf _this36 = this->buf;
HXDLIN( 317)							if (hx::IsNotNull( _this36->charBuf )) {
HXLINE( 317)								_this36->flush();
            							}
HXDLIN( 317)							if (hx::IsNull( _this36->b )) {
HXLINE( 317)								_this36->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_42,1);
            							}
            							else {
HXLINE( 317)								_this36->b->push(HX_("h",68,00,00,00));
            							}
            						}
HXLINE( 309)						goto _hx_goto_12;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::ds::ObjectMap >()) ){
HXLINE( 319)						{
HXLINE( 319)							 ::StringBuf _this37 = this->buf;
HXDLIN( 319)							if (hx::IsNotNull( _this37->charBuf )) {
HXLINE( 319)								_this37->flush();
            							}
HXDLIN( 319)							if (hx::IsNull( _this37->b )) {
HXLINE( 319)								_this37->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_43,1);
            							}
            							else {
HXLINE( 319)								_this37->b->push(HX_("M",4d,00,00,00));
            							}
            						}
HXLINE( 320)						 ::haxe::ds::ObjectMap v5 = ( ( ::haxe::ds::ObjectMap)(v) );
HXLINE( 321)						{
HXLINE( 321)							 ::Dynamic k2 = v5->keys();
HXDLIN( 321)							while(( (bool)(k2->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 321)								 ::Dynamic k3 = k2->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)();
HXLINE( 328)								this->serialize(k3);
HXLINE( 330)								this->serialize(v5->get(k3));
            							}
            						}
HXLINE( 332)						{
HXLINE( 332)							 ::StringBuf _this38 = this->buf;
HXDLIN( 332)							if (hx::IsNotNull( _this38->charBuf )) {
HXLINE( 332)								_this38->flush();
            							}
HXDLIN( 332)							if (hx::IsNull( _this38->b )) {
HXLINE( 332)								_this38->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_44,1);
            							}
            							else {
HXLINE( 332)								_this38->b->push(HX_("h",68,00,00,00));
            							}
            						}
HXLINE( 318)						goto _hx_goto_12;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::ds::StringMap >()) ){
HXLINE( 302)						{
HXLINE( 302)							 ::StringBuf _this39 = this->buf;
HXDLIN( 302)							if (hx::IsNotNull( _this39->charBuf )) {
HXLINE( 302)								_this39->flush();
            							}
HXDLIN( 302)							if (hx::IsNull( _this39->b )) {
HXLINE( 302)								_this39->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_45,1);
            							}
            							else {
HXLINE( 302)								_this39->b->push(HX_("b",62,00,00,00));
            							}
            						}
HXLINE( 303)						 ::haxe::ds::StringMap v6 = ( ( ::haxe::ds::StringMap)(v) );
HXLINE( 304)						{
HXLINE( 304)							 ::Dynamic k4 = v6->keys();
HXDLIN( 304)							while(( (bool)(k4->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 304)								::String k5 = ( (::String)(k4->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 305)								this->serializeString(k5);
HXLINE( 306)								this->serialize(v6->get(k5));
            							}
            						}
HXLINE( 308)						{
HXLINE( 308)							 ::StringBuf _this40 = this->buf;
HXDLIN( 308)							if (hx::IsNotNull( _this40->charBuf )) {
HXLINE( 308)								_this40->flush();
            							}
HXDLIN( 308)							if (hx::IsNull( _this40->b )) {
HXLINE( 308)								_this40->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_46,1);
            							}
            							else {
HXLINE( 308)								_this40->b->push(HX_("h",68,00,00,00));
            							}
            						}
HXLINE( 301)						goto _hx_goto_12;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::io::Bytes >()) ){
HXLINE( 334)						 ::haxe::io::Bytes v7 = ( ( ::haxe::io::Bytes)(v) );
HXLINE( 343)						{
HXLINE( 343)							 ::StringBuf _this41 = this->buf;
HXDLIN( 343)							if (hx::IsNotNull( _this41->charBuf )) {
HXLINE( 343)								_this41->flush();
            							}
HXDLIN( 343)							if (hx::IsNull( _this41->b )) {
HXLINE( 343)								_this41->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_47,1);
            							}
            							else {
HXLINE( 343)								_this41->b->push(HX_("s",73,00,00,00));
            							}
            						}
HXLINE( 344)						{
HXLINE( 344)							 ::StringBuf _this42 = this->buf;
HXDLIN( 344)							int x3 = ::Math_obj::ceil(((Float)(v7->length * (int)8) / (Float)(int)6));
HXDLIN( 344)							if (hx::IsNotNull( _this42->charBuf )) {
HXLINE( 344)								_this42->flush();
            							}
HXDLIN( 344)							if (hx::IsNull( _this42->b )) {
HXLINE( 344)								_this42->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
            							}
            							else {
HXLINE( 344)								::Array< ::String > _this43 = _this42->b;
HXDLIN( 344)								_this43->push(::Std_obj::string(x3));
            							}
            						}
HXLINE( 345)						{
HXLINE( 345)							 ::StringBuf _this44 = this->buf;
HXDLIN( 345)							if (hx::IsNotNull( _this44->charBuf )) {
HXLINE( 345)								_this44->flush();
            							}
HXDLIN( 345)							if (hx::IsNull( _this44->b )) {
HXLINE( 345)								_this44->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_48,1);
            							}
            							else {
HXLINE( 345)								_this44->b->push(HX_(":",3a,00,00,00));
            							}
            						}
HXLINE( 347)						int i2 = (int)0;
HXLINE( 348)						int max = (v7->length - (int)2);
HXLINE( 349)						::Array< ::Dynamic> b64 = ::haxe::Serializer_obj::BASE64_CODES;
HXLINE( 350)						if (hx::IsNull( b64 )) {
HXLINE( 351)							::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(::haxe::Serializer_obj::BASE64.length);
HXDLIN( 351)							b64 = this1;
HXLINE( 352)							{
HXLINE( 352)								int _g11 = (int)0;
HXDLIN( 352)								int _g3 = ::haxe::Serializer_obj::BASE64.length;
HXDLIN( 352)								while((_g11 < _g3)){
HXLINE( 352)									_g11 = (_g11 + (int)1);
HXDLIN( 352)									int i3 = (_g11 - (int)1);
HXLINE( 353)									{
HXLINE( 353)										 ::Dynamic val1 = ::haxe::Serializer_obj::BASE64.charCodeAt(i3);
HXDLIN( 353)										b64->__unsafe_set(i3,val1);
            									}
            								}
            							}
HXLINE( 354)							::haxe::Serializer_obj::BASE64_CODES = b64;
            						}
HXLINE( 356)						while((i2 < max)){
HXLINE( 357)							i2 = (i2 + (int)1);
HXDLIN( 357)							int b1 = v7->b->__get((i2 - (int)1));
HXLINE( 358)							i2 = (i2 + (int)1);
HXDLIN( 358)							int b2 = v7->b->__get((i2 - (int)1));
HXLINE( 359)							i2 = (i2 + (int)1);
HXDLIN( 359)							int b3 = v7->b->__get((i2 - (int)1));
HXLINE( 361)							{
HXLINE( 361)								 ::StringBuf _this45 = this->buf;
HXDLIN( 361)								int c1 = ( (int)(_hx_array_unsafe_get(b64,((int)b1 >> (int)(int)2))) );
HXDLIN( 361)								if (hx::IsNull( _this45->charBuf )) {
HXLINE( 361)									_this45->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 361)								_this45->charBuf->push(c1);
            							}
HXLINE( 362)							{
HXLINE( 362)								 ::StringBuf _this46 = this->buf;
HXDLIN( 362)								int c2 = ( (int)(_hx_array_unsafe_get(b64,((int)((int)((int)b1 << (int)(int)4) | (int)((int)b2 >> (int)(int)4)) & (int)(int)63))) );
HXDLIN( 362)								if (hx::IsNull( _this46->charBuf )) {
HXLINE( 362)									_this46->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 362)								_this46->charBuf->push(c2);
            							}
HXLINE( 363)							{
HXLINE( 363)								 ::StringBuf _this47 = this->buf;
HXDLIN( 363)								int c3 = ( (int)(_hx_array_unsafe_get(b64,((int)((int)((int)b2 << (int)(int)2) | (int)((int)b3 >> (int)(int)6)) & (int)(int)63))) );
HXDLIN( 363)								if (hx::IsNull( _this47->charBuf )) {
HXLINE( 363)									_this47->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 363)								_this47->charBuf->push(c3);
            							}
HXLINE( 364)							{
HXLINE( 364)								 ::StringBuf _this48 = this->buf;
HXDLIN( 364)								int c4 = ( (int)(_hx_array_unsafe_get(b64,((int)b3 & (int)(int)63))) );
HXDLIN( 364)								if (hx::IsNull( _this48->charBuf )) {
HXLINE( 364)									_this48->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 364)								_this48->charBuf->push(c4);
            							}
            						}
HXLINE( 366)						if ((i2 == max)) {
HXLINE( 367)							i2 = (i2 + (int)1);
HXDLIN( 367)							int b11 = v7->b->__get((i2 - (int)1));
HXLINE( 368)							i2 = (i2 + (int)1);
HXDLIN( 368)							int b21 = v7->b->__get((i2 - (int)1));
HXLINE( 369)							{
HXLINE( 369)								 ::StringBuf _this49 = this->buf;
HXDLIN( 369)								int c5 = ( (int)(_hx_array_unsafe_get(b64,((int)b11 >> (int)(int)2))) );
HXDLIN( 369)								if (hx::IsNull( _this49->charBuf )) {
HXLINE( 369)									_this49->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 369)								_this49->charBuf->push(c5);
            							}
HXLINE( 370)							{
HXLINE( 370)								 ::StringBuf _this50 = this->buf;
HXDLIN( 370)								int c6 = ( (int)(_hx_array_unsafe_get(b64,((int)((int)((int)b11 << (int)(int)4) | (int)((int)b21 >> (int)(int)4)) & (int)(int)63))) );
HXDLIN( 370)								if (hx::IsNull( _this50->charBuf )) {
HXLINE( 370)									_this50->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 370)								_this50->charBuf->push(c6);
            							}
HXLINE( 371)							{
HXLINE( 371)								 ::StringBuf _this51 = this->buf;
HXDLIN( 371)								int c7 = ( (int)(_hx_array_unsafe_get(b64,((int)((int)b21 << (int)(int)2) & (int)(int)63))) );
HXDLIN( 371)								if (hx::IsNull( _this51->charBuf )) {
HXLINE( 371)									_this51->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 371)								_this51->charBuf->push(c7);
            							}
            						}
            						else {
HXLINE( 372)							if ((i2 == (max + (int)1))) {
HXLINE( 373)								i2 = (i2 + (int)1);
HXDLIN( 373)								int b12 = v7->b->__get((i2 - (int)1));
HXLINE( 374)								{
HXLINE( 374)									 ::StringBuf _this52 = this->buf;
HXDLIN( 374)									int c8 = ( (int)(_hx_array_unsafe_get(b64,((int)b12 >> (int)(int)2))) );
HXDLIN( 374)									if (hx::IsNull( _this52->charBuf )) {
HXLINE( 374)										_this52->charBuf = ::Array_obj< char >::__new();
            									}
HXDLIN( 374)									_this52->charBuf->push(c8);
            								}
HXLINE( 375)								{
HXLINE( 375)									 ::StringBuf _this53 = this->buf;
HXDLIN( 375)									int c9 = ( (int)(_hx_array_unsafe_get(b64,((int)((int)b12 << (int)(int)4) & (int)(int)63))) );
HXDLIN( 375)									if (hx::IsNull( _this53->charBuf )) {
HXLINE( 375)										_this53->charBuf = ::Array_obj< char >::__new();
            									}
HXDLIN( 375)									_this53->charBuf->push(c9);
            								}
            							}
            						}
HXLINE( 333)						goto _hx_goto_12;
            					}
            					/* default */{
HXLINE( 379)						if (this->useCache) {
HXLINE( 379)							this->cache->pop();
            						}
HXLINE( 380)						if (hx::IsNotNull(  ::Dynamic(v->__Field(HX_("hxSerialize",b0,00,09,14),hx::paccDynamic)) )) {
HXLINE( 381)							{
HXLINE( 381)								 ::StringBuf _this54 = this->buf;
HXDLIN( 381)								if (hx::IsNotNull( _this54->charBuf )) {
HXLINE( 381)									_this54->flush();
            								}
HXDLIN( 381)								if (hx::IsNull( _this54->b )) {
HXLINE( 381)									_this54->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_49,1);
            								}
            								else {
HXLINE( 381)									_this54->b->push(HX_("C",43,00,00,00));
            								}
            							}
HXLINE( 382)							this->serializeString(::Type_obj::getClassName(c));
HXLINE( 383)							if (this->useCache) {
HXLINE( 383)								this->cache->push(v);
            							}
HXLINE( 384)							v->__Field(HX_("hxSerialize",b0,00,09,14),hx::paccDynamic)(hx::ObjectPtr<OBJ_>(this));
HXLINE( 385)							{
HXLINE( 385)								 ::StringBuf _this55 = this->buf;
HXDLIN( 385)								if (hx::IsNotNull( _this55->charBuf )) {
HXLINE( 385)									_this55->flush();
            								}
HXDLIN( 385)								if (hx::IsNull( _this55->b )) {
HXLINE( 385)									_this55->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_50,1);
            								}
            								else {
HXLINE( 385)									_this55->b->push(HX_("g",67,00,00,00));
            								}
            							}
            						}
            						else {
HXLINE( 387)							{
HXLINE( 387)								 ::StringBuf _this56 = this->buf;
HXDLIN( 387)								if (hx::IsNotNull( _this56->charBuf )) {
HXLINE( 387)									_this56->flush();
            								}
HXDLIN( 387)								if (hx::IsNull( _this56->b )) {
HXLINE( 387)									_this56->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_51,1);
            								}
            								else {
HXLINE( 387)									_this56->b->push(HX_("c",63,00,00,00));
            								}
            							}
HXLINE( 388)							this->serializeString(::Type_obj::getClassName(c));
HXLINE( 389)							if (this->useCache) {
HXLINE( 389)								this->cache->push(v);
            							}
HXLINE( 393)							this->serializeFields(v);
            						}
            					}
            					_hx_goto_12:;
            				}
            			}
            			break;
            			case (int)7: {
HXLINE( 416)				hx::Class e = _g->_hx_getObject(0).StaticCast< hx::Class >();
HXDLIN( 416)				{
HXLINE( 417)					if (this->useCache) {
HXLINE( 418)						if (this->serializeRef(v)) {
HXLINE( 419)							return;
            						}
HXLINE( 420)						this->cache->pop();
            					}
HXLINE( 422)					{
HXLINE( 422)						 ::StringBuf _this57 = this->buf;
HXDLIN( 422)						::String x4;
HXDLIN( 422)						if (this->useEnumIndex) {
HXLINE( 422)							x4 = HX_("j",6a,00,00,00);
            						}
            						else {
HXLINE( 422)							x4 = HX_("w",77,00,00,00);
            						}
HXDLIN( 422)						if (hx::IsNotNull( _this57->charBuf )) {
HXLINE( 422)							_this57->flush();
            						}
HXDLIN( 422)						if (hx::IsNull( _this57->b )) {
HXLINE( 422)							_this57->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x4));
            						}
            						else {
HXLINE( 422)							::Array< ::String > _this58 = _this57->b;
HXDLIN( 422)							_this58->push(::Std_obj::string(x4));
            						}
            					}
HXLINE( 423)					this->serializeString(::Type_obj::getEnumName(e));
HXLINE( 456)					 hx::EnumBase enumBase = ( ( hx::EnumBase)(v) );
HXLINE( 457)					if (this->useEnumIndex) {
HXLINE( 458)						{
HXLINE( 458)							 ::StringBuf _this59 = this->buf;
HXDLIN( 458)							if (hx::IsNotNull( _this59->charBuf )) {
HXLINE( 458)								_this59->flush();
            							}
HXDLIN( 458)							if (hx::IsNull( _this59->b )) {
HXLINE( 458)								_this59->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_52,1);
            							}
            							else {
HXLINE( 458)								_this59->b->push(HX_(":",3a,00,00,00));
            							}
            						}
HXLINE( 459)						{
HXLINE( 459)							 ::StringBuf _this60 = this->buf;
HXDLIN( 459)							int x5 = enumBase->_hx_getIndex();
HXDLIN( 459)							if (hx::IsNotNull( _this60->charBuf )) {
HXLINE( 459)								_this60->flush();
            							}
HXDLIN( 459)							if (hx::IsNull( _this60->b )) {
HXLINE( 459)								_this60->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x5));
            							}
            							else {
HXLINE( 459)								::Array< ::String > _this61 = _this60->b;
HXDLIN( 459)								_this61->push(::Std_obj::string(x5));
            							}
            						}
            					}
            					else {
HXLINE( 461)						this->serializeString(enumBase->_hx_getTag());
            					}
HXLINE( 462)					{
HXLINE( 462)						 ::StringBuf _this62 = this->buf;
HXDLIN( 462)						if (hx::IsNotNull( _this62->charBuf )) {
HXLINE( 462)							_this62->flush();
            						}
HXDLIN( 462)						if (hx::IsNull( _this62->b )) {
HXLINE( 462)							_this62->b = ::Array_obj< ::String >::fromData( _hx_array_data_6a6ea1fa_53,1);
            						}
            						else {
HXLINE( 462)							_this62->b->push(HX_(":",3a,00,00,00));
            						}
            					}
HXLINE( 463)					int len = enumBase->_hx_getParamCount();
HXLINE( 464)					{
HXLINE( 464)						 ::StringBuf _this63 = this->buf;
HXDLIN( 464)						if (hx::IsNotNull( _this63->charBuf )) {
HXLINE( 464)							_this63->flush();
            						}
HXDLIN( 464)						if (hx::IsNull( _this63->b )) {
HXLINE( 464)							_this63->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(len));
            						}
            						else {
HXLINE( 464)							::Array< ::String > _this64 = _this63->b;
HXDLIN( 464)							_this64->push(::Std_obj::string(len));
            						}
            					}
HXLINE( 465)					{
HXLINE( 465)						int _g12 = (int)0;
HXDLIN( 465)						int _g4 = len;
HXDLIN( 465)						while((_g12 < _g4)){
HXLINE( 465)							_g12 = (_g12 + (int)1);
HXDLIN( 465)							int p = (_g12 - (int)1);
HXLINE( 466)							this->serialize(enumBase->_hx_getParamI(p));
            						}
            					}
HXLINE( 516)					if (this->useCache) {
HXLINE( 516)						this->cache->push(v);
            					}
            				}
            			}
            			break;
            			default:{
HXLINE( 527)				HX_STACK_DO_THROW((HX_("Cannot serialize ",1d,48,c9,ed) + ::Std_obj::string(v)));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serialize,(void))

bool Serializer_obj::USE_CACHE;

bool Serializer_obj::USE_ENUM_INDEX;

::String Serializer_obj::BASE64;

::Array< ::Dynamic> Serializer_obj::BASE64_CODES;

::String Serializer_obj::run( ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_80055b2442a299a2_556_run)
HXLINE( 557)		 ::haxe::Serializer s =  ::haxe::Serializer_obj::__alloc( HX_CTX );
HXLINE( 558)		s->serialize(v);
HXLINE( 559)		return s->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,run,return )


hx::ObjectPtr< Serializer_obj > Serializer_obj::__new() {
	hx::ObjectPtr< Serializer_obj > __this = new Serializer_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Serializer_obj > Serializer_obj::__alloc(hx::Ctx *_hx_ctx) {
	Serializer_obj *__this = (Serializer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Serializer_obj), true, "haxe.Serializer"));
	*(void **)__this = Serializer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Serializer_obj::Serializer_obj()
{
}

void Serializer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Serializer);
	HX_MARK_MEMBER_NAME(buf,"buf");
	HX_MARK_MEMBER_NAME(cache,"cache");
	HX_MARK_MEMBER_NAME(shash,"shash");
	HX_MARK_MEMBER_NAME(scount,"scount");
	HX_MARK_MEMBER_NAME(useCache,"useCache");
	HX_MARK_MEMBER_NAME(useEnumIndex,"useEnumIndex");
	HX_MARK_END_CLASS();
}

void Serializer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(buf,"buf");
	HX_VISIT_MEMBER_NAME(cache,"cache");
	HX_VISIT_MEMBER_NAME(shash,"shash");
	HX_VISIT_MEMBER_NAME(scount,"scount");
	HX_VISIT_MEMBER_NAME(useCache,"useCache");
	HX_VISIT_MEMBER_NAME(useEnumIndex,"useEnumIndex");
}

hx::Val Serializer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"buf") ) { return hx::Val( buf ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { return hx::Val( cache ); }
		if (HX_FIELD_EQ(inName,"shash") ) { return hx::Val( shash ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"scount") ) { return hx::Val( scount ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"useCache") ) { return hx::Val( useCache ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"serialize") ) { return hx::Val( serialize_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"useEnumIndex") ) { return hx::Val( useEnumIndex ); }
		if (HX_FIELD_EQ(inName,"serializeRef") ) { return hx::Val( serializeRef_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"serializeString") ) { return hx::Val( serializeString_dyn() ); }
		if (HX_FIELD_EQ(inName,"serializeFields") ) { return hx::Val( serializeFields_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Serializer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"run") ) { outValue = run_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"BASE64") ) { outValue = ( BASE64 ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"USE_CACHE") ) { outValue = ( USE_CACHE ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"BASE64_CODES") ) { outValue = ( BASE64_CODES ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"USE_ENUM_INDEX") ) { outValue = ( USE_ENUM_INDEX ); return true; }
	}
	return false;
}

hx::Val Serializer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"buf") ) { buf=inValue.Cast<  ::StringBuf >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { cache=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"shash") ) { shash=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"scount") ) { scount=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"useCache") ) { useCache=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"useEnumIndex") ) { useEnumIndex=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Serializer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"BASE64") ) { BASE64=ioValue.Cast< ::String >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"USE_CACHE") ) { USE_CACHE=ioValue.Cast< bool >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"BASE64_CODES") ) { BASE64_CODES=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"USE_ENUM_INDEX") ) { USE_ENUM_INDEX=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

void Serializer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("buf","\x33","\xc3","\x4a","\x00"));
	outFields->push(HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"));
	outFields->push(HX_HCSTRING("shash","\xc1","\xe5","\x1c","\x7c"));
	outFields->push(HX_HCSTRING("scount","\x7c","\xc3","\x6d","\x45"));
	outFields->push(HX_HCSTRING("useCache","\x7b","\xfc","\x7f","\x08"));
	outFields->push(HX_HCSTRING("useEnumIndex","\x0a","\x8f","\xfe","\x23"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Serializer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::StringBuf*/ ,(int)offsetof(Serializer_obj,buf),HX_HCSTRING("buf","\x33","\xc3","\x4a","\x00")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Serializer_obj,cache),HX_HCSTRING("cache","\x42","\x9a","\x14","\x41")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Serializer_obj,shash),HX_HCSTRING("shash","\xc1","\xe5","\x1c","\x7c")},
	{hx::fsInt,(int)offsetof(Serializer_obj,scount),HX_HCSTRING("scount","\x7c","\xc3","\x6d","\x45")},
	{hx::fsBool,(int)offsetof(Serializer_obj,useCache),HX_HCSTRING("useCache","\x7b","\xfc","\x7f","\x08")},
	{hx::fsBool,(int)offsetof(Serializer_obj,useEnumIndex),HX_HCSTRING("useEnumIndex","\x0a","\x8f","\xfe","\x23")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Serializer_obj_sStaticStorageInfo[] = {
	{hx::fsBool,(void *) &Serializer_obj::USE_CACHE,HX_HCSTRING("USE_CACHE","\xca","\xf8","\xb5","\x85")},
	{hx::fsBool,(void *) &Serializer_obj::USE_ENUM_INDEX,HX_HCSTRING("USE_ENUM_INDEX","\x4c","\xbc","\x56","\x9d")},
	{hx::fsString,(void *) &Serializer_obj::BASE64,HX_HCSTRING("BASE64","\x8f","\xc5","\xaa","\x07")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(void *) &Serializer_obj::BASE64_CODES,HX_HCSTRING("BASE64_CODES","\x96","\xb0","\x35","\x26")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Serializer_obj_sMemberFields[] = {
	HX_HCSTRING("buf","\x33","\xc3","\x4a","\x00"),
	HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"),
	HX_HCSTRING("shash","\xc1","\xe5","\x1c","\x7c"),
	HX_HCSTRING("scount","\x7c","\xc3","\x6d","\x45"),
	HX_HCSTRING("useCache","\x7b","\xfc","\x7f","\x08"),
	HX_HCSTRING("useEnumIndex","\x0a","\x8f","\xfe","\x23"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("serializeString","\xd1","\xa2","\x22","\x2b"),
	HX_HCSTRING("serializeRef","\x53","\x1f","\x74","\x3b"),
	HX_HCSTRING("serializeFields","\x79","\x08","\x81","\x9a"),
	HX_HCSTRING("serialize","\xe0","\x5d","\xf2","\xf4"),
	::String(null()) };

static void Serializer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Serializer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Serializer_obj::USE_CACHE,"USE_CACHE");
	HX_MARK_MEMBER_NAME(Serializer_obj::USE_ENUM_INDEX,"USE_ENUM_INDEX");
	HX_MARK_MEMBER_NAME(Serializer_obj::BASE64,"BASE64");
	HX_MARK_MEMBER_NAME(Serializer_obj::BASE64_CODES,"BASE64_CODES");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Serializer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Serializer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Serializer_obj::USE_CACHE,"USE_CACHE");
	HX_VISIT_MEMBER_NAME(Serializer_obj::USE_ENUM_INDEX,"USE_ENUM_INDEX");
	HX_VISIT_MEMBER_NAME(Serializer_obj::BASE64,"BASE64");
	HX_VISIT_MEMBER_NAME(Serializer_obj::BASE64_CODES,"BASE64_CODES");
};

#endif

hx::Class Serializer_obj::__mClass;

static ::String Serializer_obj_sStaticFields[] = {
	HX_HCSTRING("USE_CACHE","\xca","\xf8","\xb5","\x85"),
	HX_HCSTRING("USE_ENUM_INDEX","\x4c","\xbc","\x56","\x9d"),
	HX_HCSTRING("BASE64","\x8f","\xc5","\xaa","\x07"),
	HX_HCSTRING("BASE64_CODES","\x96","\xb0","\x35","\x26"),
	HX_HCSTRING("run","\x4b","\xe7","\x56","\x00"),
	::String(null())
};

void Serializer_obj::__register()
{
	hx::Object *dummy = new Serializer_obj;
	Serializer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.Serializer","\xfa","\xa1","\x6e","\x6a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Serializer_obj::__GetStatic;
	__mClass->mSetStaticField = &Serializer_obj::__SetStatic;
	__mClass->mMarkFunc = Serializer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Serializer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Serializer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Serializer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Serializer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Serializer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Serializer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Serializer_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_55_boot)
HXDLIN(  55)		USE_CACHE = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_67_boot)
HXDLIN(  67)		USE_ENUM_INDEX = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_69_boot)
HXDLIN(  69)		BASE64 = HX_("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:",d4,3b,03,7f);
            	}
{
            	HX_STACKFRAME(&_hx_pos_80055b2442a299a2_70_boot)
HXDLIN(  70)		BASE64_CODES = null();
            	}
}

} // end namespace haxe
