// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimation
#include <flixel/animation/FlxAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxBaseAnimation
#include <flixel/animation/FlxBaseAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxPrerotatedAnimation
#include <flixel/animation/FlxPrerotatedAnimation.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFrame
#include <flixel/graphics/frames/FlxFrame.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_system_debug_log_LogStyle
#include <flixel/system/debug/log/LogStyle.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_LogFrontEnd
#include <flixel/system/frontEnds/LogFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_8_new,"flixel.animation.FlxAnimationController","new",0x0b6477fc,"flixel.animation.FlxAnimationController.new","flixel/animation/FlxAnimationController.hx",8,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_85_update,"flixel.animation.FlxAnimationController","update",0x8fb487ed,"flixel.animation.FlxAnimationController.update","flixel/animation/FlxAnimationController.hx",85,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_96_copyFrom,"flixel.animation.FlxAnimationController","copyFrom",0x9c3f4ea3,"flixel.animation.FlxAnimationController.copyFrom","flixel/animation/FlxAnimationController.hx",96,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_120_createPrerotated,"flixel.animation.FlxAnimationController","createPrerotated",0xc538c8e6,"flixel.animation.FlxAnimationController.createPrerotated","flixel/animation/FlxAnimationController.hx",120,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_128_destroyAnimations,"flixel.animation.FlxAnimationController","destroyAnimations",0x0b136325,"flixel.animation.FlxAnimationController.destroyAnimations","flixel/animation/FlxAnimationController.hx",128,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_134_destroy,"flixel.animation.FlxAnimationController","destroy",0xb4f8d296,"flixel.animation.FlxAnimationController.destroy","flixel/animation/FlxAnimationController.hx",134,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_142_clearPrerotated,"flixel.animation.FlxAnimationController","clearPrerotated",0x8ef9ed6f,"flixel.animation.FlxAnimationController.clearPrerotated","flixel/animation/FlxAnimationController.hx",142,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_151_clearAnimations,"flixel.animation.FlxAnimationController","clearAnimations",0x7ffc9e78,"flixel.animation.FlxAnimationController.clearAnimations","flixel/animation/FlxAnimationController.hx",151,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_180_add,"flixel.animation.FlxAnimationController","add",0x0b5a99bd,"flixel.animation.FlxAnimationController.add","flixel/animation/FlxAnimationController.hx",180,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_214_remove,"flixel.animation.FlxAnimationController","remove",0x0d379e28,"flixel.animation.FlxAnimationController.remove","flixel/animation/FlxAnimationController.hx",214,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_232_append,"flixel.animation.FlxAnimationController","append",0x9882e3be,"flixel.animation.FlxAnimationController.append","flixel/animation/FlxAnimationController.hx",232,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_268_addByNames,"flixel.animation.FlxAnimationController","addByNames",0x17c20e34,"flixel.animation.FlxAnimationController.addByNames","flixel/animation/FlxAnimationController.hx",268,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_290_appendByNames,"flixel.animation.FlxAnimationController","appendByNames",0xcdc97653,"flixel.animation.FlxAnimationController.appendByNames","flixel/animation/FlxAnimationController.hx",290,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_320_addByStringIndices,"flixel.animation.FlxAnimationController","addByStringIndices",0x0f3d3cc2,"flixel.animation.FlxAnimationController.addByStringIndices","flixel/animation/FlxAnimationController.hx",320,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_346_appendByStringIndices,"flixel.animation.FlxAnimationController","appendByStringIndices",0x42285be1,"flixel.animation.FlxAnimationController.appendByStringIndices","flixel/animation/FlxAnimationController.hx",346,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_376_addByIndices,"flixel.animation.FlxAnimationController","addByIndices",0x4dbf3893,"flixel.animation.FlxAnimationController.addByIndices","flixel/animation/FlxAnimationController.hx",376,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_403_appendByIndices,"flixel.animation.FlxAnimationController","appendByIndices",0x22882672,"flixel.animation.FlxAnimationController.appendByIndices","flixel/animation/FlxAnimationController.hx",403,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_425_findSpriteFrame,"flixel.animation.FlxAnimationController","findSpriteFrame",0x746a2bcb,"flixel.animation.FlxAnimationController.findSpriteFrame","flixel/animation/FlxAnimationController.hx",425,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_457_addByPrefix,"flixel.animation.FlxAnimationController","addByPrefix",0x4347f9a6,"flixel.animation.FlxAnimationController.addByPrefix","flixel/animation/FlxAnimationController.hx",457,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_487_appendByPrefix,"flixel.animation.FlxAnimationController","appendByPrefix",0xd3bbaca7,"flixel.animation.FlxAnimationController.appendByPrefix","flixel/animation/FlxAnimationController.hx",487,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_519_play,"flixel.animation.FlxAnimationController","play",0xeddc2ed8,"flixel.animation.FlxAnimationController.play","flixel/animation/FlxAnimationController.hx",519,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_558_reset,"flixel.animation.FlxAnimationController","reset",0x5507106b,"flixel.animation.FlxAnimationController.reset","flixel/animation/FlxAnimationController.hx",558,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_569_finish,"flixel.animation.FlxAnimationController","finish",0x8f2e4237,"flixel.animation.FlxAnimationController.finish","flixel/animation/FlxAnimationController.hx",569,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_580_stop,"flixel.animation.FlxAnimationController","stop",0xefddf0e6,"flixel.animation.FlxAnimationController.stop","flixel/animation/FlxAnimationController.hx",580,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_591_pause,"flixel.animation.FlxAnimationController","pause",0x2b969d92,"flixel.animation.FlxAnimationController.pause","flixel/animation/FlxAnimationController.hx",591,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_602_resume,"flixel.animation.FlxAnimationController","resume",0x11336b91,"flixel.animation.FlxAnimationController.resume","flixel/animation/FlxAnimationController.hx",602,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_613_reverse,"flixel.animation.FlxAnimationController","reverse",0xab6edebe,"flixel.animation.FlxAnimationController.reverse","flixel/animation/FlxAnimationController.hx",613,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_624_getByName,"flixel.animation.FlxAnimationController","getByName",0x1940f994,"flixel.animation.FlxAnimationController.getByName","flixel/animation/FlxAnimationController.hx",624,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_632_randomFrame,"flixel.animation.FlxAnimationController","randomFrame",0x12c43ec6,"flixel.animation.FlxAnimationController.randomFrame","flixel/animation/FlxAnimationController.hx",632,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_643_fireCallback,"flixel.animation.FlxAnimationController","fireCallback",0x1523547f,"flixel.animation.FlxAnimationController.fireCallback","flixel/animation/FlxAnimationController.hx",643,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_654_fireFinishCallback,"flixel.animation.FlxAnimationController","fireFinishCallback",0x96b92372,"flixel.animation.FlxAnimationController.fireFinishCallback","flixel/animation/FlxAnimationController.hx",654,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_662_byNamesHelper,"flixel.animation.FlxAnimationController","byNamesHelper",0x4e6fbd5b,"flixel.animation.FlxAnimationController.byNamesHelper","flixel/animation/FlxAnimationController.hx",662,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_674_byStringIndicesHelper,"flixel.animation.FlxAnimationController","byStringIndicesHelper",0xccff0b69,"flixel.animation.FlxAnimationController.byStringIndicesHelper","flixel/animation/FlxAnimationController.hx",674,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_687_byIndicesHelper,"flixel.animation.FlxAnimationController","byIndicesHelper",0xe757113a,"flixel.animation.FlxAnimationController.byIndicesHelper","flixel/animation/FlxAnimationController.hx",687,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_698_byPrefixHelper,"flixel.animation.FlxAnimationController","byPrefixHelper",0x238152fb,"flixel.animation.FlxAnimationController.byPrefixHelper","flixel/animation/FlxAnimationController.hx",698,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_712_findByPrefix,"flixel.animation.FlxAnimationController","findByPrefix",0x32419106,"flixel.animation.FlxAnimationController.findByPrefix","flixel/animation/FlxAnimationController.hx",712,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_722_set_frameIndex,"flixel.animation.FlxAnimationController","set_frameIndex",0xd769c646,"flixel.animation.FlxAnimationController.set_frameIndex","flixel/animation/FlxAnimationController.hx",722,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_736_get_frameName,"flixel.animation.FlxAnimationController","get_frameName",0x1674c78b,"flixel.animation.FlxAnimationController.get_frameName","flixel/animation/FlxAnimationController.hx",736,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_740_set_frameName,"flixel.animation.FlxAnimationController","set_frameName",0x5b7aa997,"flixel.animation.FlxAnimationController.set_frameName","flixel/animation/FlxAnimationController.hx",740,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_760_get_name,"flixel.animation.FlxAnimationController","get_name",0x9c9870b8,"flixel.animation.FlxAnimationController.get_name","flixel/animation/FlxAnimationController.hx",760,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_770_set_name,"flixel.animation.FlxAnimationController","set_name",0x4af5ca2c,"flixel.animation.FlxAnimationController.set_name","flixel/animation/FlxAnimationController.hx",770,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_777_get_curAnim,"flixel.animation.FlxAnimationController","get_curAnim",0xd32cfb64,"flixel.animation.FlxAnimationController.get_curAnim","flixel/animation/FlxAnimationController.hx",777,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_781_set_curAnim,"flixel.animation.FlxAnimationController","set_curAnim",0xdd9a0270,"flixel.animation.FlxAnimationController.set_curAnim","flixel/animation/FlxAnimationController.hx",781,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_798_get_paused,"flixel.animation.FlxAnimationController","get_paused",0x1a2b745b,"flixel.animation.FlxAnimationController.get_paused","flixel/animation/FlxAnimationController.hx",798,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_808_set_paused,"flixel.animation.FlxAnimationController","set_paused",0x1da912cf,"flixel.animation.FlxAnimationController.set_paused","flixel/animation/FlxAnimationController.hx",808,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_824_get_finished,"flixel.animation.FlxAnimationController","get_finished",0x1eabcc5f,"flixel.animation.FlxAnimationController.get_finished","flixel/animation/FlxAnimationController.hx",824,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_834_set_finished,"flixel.animation.FlxAnimationController","set_finished",0x33a4efd3,"flixel.animation.FlxAnimationController.set_finished","flixel/animation/FlxAnimationController.hx",834,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_844_get_frames,"flixel.animation.FlxAnimationController","get_frames",0xd72ce353,"flixel.animation.FlxAnimationController.get_frames","flixel/animation/FlxAnimationController.hx",844,0xa6f01372)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed655cc53689dfd_855_getFrameIndex,"flixel.animation.FlxAnimationController","getFrameIndex",0x1c3dee77,"flixel.animation.FlxAnimationController.getFrameIndex","flixel/animation/FlxAnimationController.hx",855,0xa6f01372)
namespace flixel{
namespace animation{

void FlxAnimationController_obj::__construct( ::flixel::FlxSprite Sprite){
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_8_new)
HXLINE(  18)		this->frameIndex = (int)-1;
HXLINE(  79)		this->_sprite = Sprite;
HXLINE(  80)		this->_animations =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}

Dynamic FlxAnimationController_obj::__CreateEmpty() { return new FlxAnimationController_obj; }

void *FlxAnimationController_obj::_hx_vtable = 0;

Dynamic FlxAnimationController_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxAnimationController_obj > _hx_result = new FlxAnimationController_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool FlxAnimationController_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x41b9f4d2;
}

static ::flixel::util::IFlxDestroyable_obj _hx_flixel_animation_FlxAnimationController__hx_flixel_util_IFlxDestroyable= {
	( void (hx::Object::*)())&::flixel::animation::FlxAnimationController_obj::destroy,
};

void *FlxAnimationController_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xd4fe2fcd: return &_hx_flixel_animation_FlxAnimationController__hx_flixel_util_IFlxDestroyable;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void FlxAnimationController_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_85_update)
HXDLIN(  85)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE(  87)			this->_curAnim->update(elapsed);
            		}
            		else {
HXLINE(  89)			if (hx::IsNotNull( this->_prerotated )) {
HXLINE(  91)				this->_prerotated->set_angle(this->_sprite->angle);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,update,(void))

 ::flixel::animation::FlxAnimationController FlxAnimationController_obj::copyFrom( ::flixel::animation::FlxAnimationController controller){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_96_copyFrom)
HXLINE(  97)		this->destroyAnimations();
HXLINE(  99)		{
HXLINE(  99)			 ::Dynamic anim = controller->_animations->iterator();
HXDLIN(  99)			while(( (bool)(anim->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  99)				 ::flixel::animation::FlxAnimation anim1 = ( ( ::flixel::animation::FlxAnimation)(anim->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 101)				this->add(anim1->name,anim1->frames,anim1->frameRate,anim1->looped,anim1->flipX,anim1->flipY);
            			}
            		}
HXLINE( 104)		if (hx::IsNotNull( controller->_prerotated )) {
HXLINE( 106)			this->createPrerotated(null());
            		}
HXLINE( 109)		if (hx::IsNotNull( controller->get_name() )) {
HXLINE( 111)			this->set_name(controller->get_name());
            		}
HXLINE( 114)		this->set_frameIndex(controller->frameIndex);
HXLINE( 116)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,copyFrom,return )

void FlxAnimationController_obj::createPrerotated( ::flixel::animation::FlxAnimationController Controller){
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_120_createPrerotated)
HXLINE( 121)		this->destroyAnimations();
HXLINE( 122)		if (hx::IsNotNull( Controller )) {
HXLINE( 122)			Controller = Controller;
            		}
            		else {
HXLINE( 122)			Controller = hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 123)		this->_prerotated =  ::flixel::animation::FlxPrerotatedAnimation_obj::__alloc( HX_CTX ,Controller,Controller->_sprite->bakedRotationAngle);
HXLINE( 124)		this->_prerotated->set_angle(this->_sprite->angle);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,createPrerotated,(void))

void FlxAnimationController_obj::destroyAnimations(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_128_destroyAnimations)
HXLINE( 129)		this->clearAnimations();
HXLINE( 130)		this->clearPrerotated();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,destroyAnimations,(void))

void FlxAnimationController_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_134_destroy)
HXLINE( 135)		this->destroyAnimations();
HXLINE( 136)		this->_animations = null();
HXLINE( 137)		this->callback = null();
HXLINE( 138)		this->_sprite = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,destroy,(void))

void FlxAnimationController_obj::clearPrerotated(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_142_clearPrerotated)
HXLINE( 143)		if (hx::IsNotNull( this->_prerotated )) {
HXLINE( 145)			this->_prerotated->destroy();
            		}
HXLINE( 147)		this->_prerotated = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,clearPrerotated,(void))

void FlxAnimationController_obj::clearAnimations(){
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_151_clearAnimations)
HXLINE( 152)		if (hx::IsNotNull( this->_animations )) {
HXLINE( 154)			 ::flixel::animation::FlxAnimation anim;
HXLINE( 155)			{
HXLINE( 155)				 ::Dynamic key = this->_animations->keys();
HXDLIN( 155)				while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 155)					::String key1 = ( (::String)(key->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 157)					anim = this->_animations->get(key1).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 158)					if (hx::IsNotNull( anim )) {
HXLINE( 160)						anim->destroy();
            					}
            				}
            			}
            		}
HXLINE( 165)		this->_animations =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 166)		this->_curAnim = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,clearAnimations,(void))

void FlxAnimationController_obj::add(::String Name,::Array< int > Frames,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_180_add)
HXLINE( 182)		::Array< int > framesToAdd = Frames;
HXLINE( 183)		int numFrames = (framesToAdd->length - (int)1);
HXLINE( 184)		int i = numFrames;
HXLINE( 185)		while((i >= (int)0)){
HXLINE( 187)			if ((framesToAdd->__get(i) >= this->_sprite->numFrames)) {
HXLINE( 191)				if (hx::IsEq( framesToAdd,Frames )) {
HXLINE( 193)					framesToAdd = Frames->copy();
            				}
HXLINE( 196)				framesToAdd->removeRange(i,(int)1);
            			}
HXLINE( 198)			i = (i - (int)1);
            		}
HXLINE( 201)		if ((framesToAdd->length > (int)0)) {
HXLINE( 203)			 ::flixel::animation::FlxAnimation anim =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,framesToAdd,FrameRate,Looped,FlipX,FlipY);
HXLINE( 204)			this->_animations->set(Name,anim);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxAnimationController_obj,add,(void))

void FlxAnimationController_obj::remove(::String Name){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_214_remove)
HXLINE( 215)		 ::flixel::animation::FlxAnimation anim = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 216)		if (hx::IsNotNull( anim )) {
HXLINE( 218)			this->_animations->remove(Name);
HXLINE( 219)			anim->destroy();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,remove,(void))

void FlxAnimationController_obj::append(::String Name,::Array< int > Frames){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_232_append)
HXLINE( 233)		 ::flixel::animation::FlxAnimation anim = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 234)		if (hx::IsNull( anim )) {
HXLINE( 237)			::flixel::FlxG_obj::log->advanced(((HX_("No animation called \"",ba,9e,0f,3e) + Name) + HX_("\"",22,00,00,00)),::flixel::_hx_system::debug::log::LogStyle_obj::WARNING,true);
HXLINE( 238)			return;
            		}
HXLINE( 242)		int numFrames = (Frames->length - (int)1);
HXLINE( 243)		int i = numFrames;
HXLINE( 244)		while((i >= (int)0)){
HXLINE( 246)			if ((Frames->__get((numFrames - i)) < this->_sprite->numFrames)) {
HXLINE( 249)				::Array< int > anim1 = anim->frames;
HXDLIN( 249)				anim1->push(Frames->__get((numFrames - i)));
            			}
HXLINE( 251)			i = (i - (int)1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,append,(void))

void FlxAnimationController_obj::addByNames(::String Name,::Array< ::String > FrameNames,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_268_addByNames)
HXDLIN( 268)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 270)			::Array< int > indices = ::Array_obj< int >::__new();
HXLINE( 271)			this->byNamesHelper(indices,FrameNames);
HXLINE( 273)			if ((indices->length > (int)0)) {
HXLINE( 275)				 ::flixel::animation::FlxAnimation anim =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,indices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 276)				this->_animations->set(Name,anim);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxAnimationController_obj,addByNames,(void))

void FlxAnimationController_obj::appendByNames(::String Name,::Array< ::String > FrameNames){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_290_appendByNames)
HXLINE( 291)		 ::flixel::animation::FlxAnimation anim = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 292)		if (hx::IsNull( anim )) {
HXLINE( 294)			::flixel::FlxG_obj::log->advanced(((HX_("No animation called \"",ba,9e,0f,3e) + Name) + HX_("\"",22,00,00,00)),::flixel::_hx_system::debug::log::LogStyle_obj::WARNING,true);
HXLINE( 295)			return;
            		}
HXLINE( 298)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 300)			this->byNamesHelper(anim->frames,FrameNames);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,appendByNames,(void))

void FlxAnimationController_obj::addByStringIndices(::String Name,::String Prefix,::Array< ::String > Indices,::String Postfix,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_320_addByStringIndices)
HXDLIN( 320)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 322)			::Array< int > frameIndices = ::Array_obj< int >::__new();
HXLINE( 324)			this->byStringIndicesHelper(frameIndices,Prefix,Indices,Postfix);
HXLINE( 326)			if ((frameIndices->length > (int)0)) {
HXLINE( 328)				 ::flixel::animation::FlxAnimation anim =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,frameIndices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 329)				this->_animations->set(Name,anim);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC8(FlxAnimationController_obj,addByStringIndices,(void))

void FlxAnimationController_obj::appendByStringIndices(::String Name,::String Prefix,::Array< ::String > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_346_appendByStringIndices)
HXLINE( 347)		 ::flixel::animation::FlxAnimation anim = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 348)		if (hx::IsNull( anim )) {
HXLINE( 350)			::flixel::FlxG_obj::log->advanced(((HX_("No animation called \"",ba,9e,0f,3e) + Name) + HX_("\"",22,00,00,00)),::flixel::_hx_system::debug::log::LogStyle_obj::WARNING,true);
HXLINE( 351)			return;
            		}
HXLINE( 354)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 357)			this->byStringIndicesHelper(anim->frames,Prefix,Indices,Postfix);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,appendByStringIndices,(void))

void FlxAnimationController_obj::addByIndices(::String Name,::String Prefix,::Array< int > Indices,::String Postfix,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_376_addByIndices)
HXDLIN( 376)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 378)			::Array< int > frameIndices = ::Array_obj< int >::__new();
HXLINE( 380)			this->byIndicesHelper(frameIndices,Prefix,Indices,Postfix);
HXLINE( 382)			if ((frameIndices->length > (int)0)) {
HXLINE( 384)				 ::flixel::animation::FlxAnimation anim =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,frameIndices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 385)				this->_animations->set(Name,anim);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC8(FlxAnimationController_obj,addByIndices,(void))

void FlxAnimationController_obj::appendByIndices(::String Name,::String Prefix,::Array< int > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_403_appendByIndices)
HXLINE( 404)		 ::flixel::animation::FlxAnimation anim = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 405)		if (hx::IsNull( anim )) {
HXLINE( 407)			::flixel::FlxG_obj::log->advanced(((HX_("No animation called \"",ba,9e,0f,3e) + Name) + HX_("\"",22,00,00,00)),::flixel::_hx_system::debug::log::LogStyle_obj::WARNING,true);
HXLINE( 408)			return;
            		}
HXLINE( 411)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 414)			this->byIndicesHelper(anim->frames,Prefix,Indices,Postfix);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,appendByIndices,(void))

int FlxAnimationController_obj::findSpriteFrame(::String Prefix,int Index,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_425_findSpriteFrame)
HXLINE( 426)		int numFrames = this->_sprite->numFrames;
HXLINE( 427)		::Array< ::Dynamic> flxFrames = this->_sprite->frames->frames;
HXLINE( 428)		{
HXLINE( 428)			int _g1 = (int)0;
HXDLIN( 428)			int _g = numFrames;
HXDLIN( 428)			while((_g1 < _g)){
HXLINE( 428)				_g1 = (_g1 + (int)1);
HXDLIN( 428)				int i = (_g1 - (int)1);
HXLINE( 430)				::String name = flxFrames->__get(i).StaticCast<  ::flixel::graphics::frames::FlxFrame >()->name;
HXLINE( 431)				bool _hx_tmp;
HXDLIN( 431)				if (::StringTools_obj::startsWith(name,Prefix)) {
HXLINE( 431)					_hx_tmp = ::StringTools_obj::endsWith(name,Postfix);
            				}
            				else {
HXLINE( 431)					_hx_tmp = false;
            				}
HXDLIN( 431)				if (_hx_tmp) {
HXLINE( 433)					int Prefix1 = Prefix.length;
HXDLIN( 433)					 ::Dynamic index = ::Std_obj::parseInt(name.substring(Prefix1,(name.length - Postfix.length)));
HXLINE( 434)					bool _hx_tmp1;
HXDLIN( 434)					if (hx::IsNotNull( index )) {
HXLINE( 434)						_hx_tmp1 = hx::IsEq( index,Index );
            					}
            					else {
HXLINE( 434)						_hx_tmp1 = false;
            					}
HXDLIN( 434)					if (_hx_tmp1) {
HXLINE( 436)						return i;
            					}
            				}
            			}
            		}
HXLINE( 441)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxAnimationController_obj,findSpriteFrame,return )

void FlxAnimationController_obj::addByPrefix(::String Name,::String Prefix,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_457_addByPrefix)
HXDLIN( 457)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 459)			::Array< ::Dynamic> animFrames = ::Array_obj< ::Dynamic>::__new();
HXLINE( 460)			this->findByPrefix(animFrames,Prefix);
HXLINE( 462)			if ((animFrames->length > (int)0)) {
HXLINE( 464)				::Array< int > frameIndices = ::Array_obj< int >::__new();
HXLINE( 465)				this->byPrefixHelper(frameIndices,animFrames,Prefix);
HXLINE( 467)				if ((frameIndices->length > (int)0)) {
HXLINE( 469)					 ::flixel::animation::FlxAnimation anim =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,frameIndices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 470)					this->_animations->set(Name,anim);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxAnimationController_obj,addByPrefix,(void))

void FlxAnimationController_obj::appendByPrefix(::String Name,::String Prefix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_487_appendByPrefix)
HXLINE( 488)		 ::flixel::animation::FlxAnimation anim = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 489)		if (hx::IsNull( anim )) {
HXLINE( 491)			::flixel::FlxG_obj::log->advanced(((HX_("No animation called \"",ba,9e,0f,3e) + Name) + HX_("\"",22,00,00,00)),::flixel::_hx_system::debug::log::LogStyle_obj::WARNING,true);
HXLINE( 492)			return;
            		}
HXLINE( 495)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 497)			::Array< ::Dynamic> animFrames = ::Array_obj< ::Dynamic>::__new();
HXLINE( 498)			this->findByPrefix(animFrames,Prefix);
HXLINE( 500)			if ((animFrames->length > (int)0)) {
HXLINE( 503)				this->byPrefixHelper(anim->frames,animFrames,Prefix);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,appendByPrefix,(void))

void FlxAnimationController_obj::play(::String AnimName,hx::Null< bool >  __o_Force,hx::Null< bool >  __o_Reversed,hx::Null< int >  __o_Frame){
bool Force = __o_Force.Default(false);
bool Reversed = __o_Reversed.Default(false);
int Frame = __o_Frame.Default(0);
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_519_play)
HXLINE( 520)		if (hx::IsNull( AnimName )) {
HXLINE( 522)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 524)				this->_curAnim->stop();
            			}
HXLINE( 526)			this->_curAnim = null();
            		}
HXLINE( 529)		bool _hx_tmp;
HXDLIN( 529)		if (hx::IsNotNull( AnimName )) {
HXLINE( 529)			_hx_tmp = hx::IsNull( this->_animations->get(AnimName).StaticCast<  ::flixel::animation::FlxAnimation >() );
            		}
            		else {
HXLINE( 529)			_hx_tmp = true;
            		}
HXDLIN( 529)		if (_hx_tmp) {
HXLINE( 531)			::flixel::FlxG_obj::log->advanced(((HX_("No animation called \"",ba,9e,0f,3e) + AnimName) + HX_("\"",22,00,00,00)),::flixel::_hx_system::debug::log::LogStyle_obj::WARNING,true);
HXLINE( 532)			return;
            		}
HXLINE( 535)		bool oldFlipX = false;
HXLINE( 536)		bool oldFlipY = false;
HXLINE( 538)		bool _hx_tmp1;
HXDLIN( 538)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 538)			_hx_tmp1 = (AnimName != this->_curAnim->name);
            		}
            		else {
HXLINE( 538)			_hx_tmp1 = false;
            		}
HXDLIN( 538)		if (_hx_tmp1) {
HXLINE( 540)			oldFlipX = this->_curAnim->flipX;
HXLINE( 541)			oldFlipY = this->_curAnim->flipY;
HXLINE( 542)			this->_curAnim->stop();
            		}
HXLINE( 544)		this->_curAnim = this->_animations->get(AnimName).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 545)		this->_curAnim->play(Force,Reversed,Frame);
HXLINE( 547)		bool _hx_tmp2;
HXDLIN( 547)		if ((oldFlipX == this->_curAnim->flipX)) {
HXLINE( 547)			_hx_tmp2 = (oldFlipY != this->_curAnim->flipY);
            		}
            		else {
HXLINE( 547)			_hx_tmp2 = true;
            		}
HXDLIN( 547)		if (_hx_tmp2) {
HXLINE( 549)			this->_sprite->dirty = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,play,(void))

void FlxAnimationController_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_558_reset)
HXDLIN( 558)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 560)			this->_curAnim->reset();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,reset,(void))

void FlxAnimationController_obj::finish(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_569_finish)
HXDLIN( 569)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 571)			this->_curAnim->finish();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,finish,(void))

void FlxAnimationController_obj::stop(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_580_stop)
HXDLIN( 580)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 582)			this->_curAnim->stop();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,stop,(void))

void FlxAnimationController_obj::pause(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_591_pause)
HXDLIN( 591)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 593)			this->_curAnim->pause();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,pause,(void))

void FlxAnimationController_obj::resume(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_602_resume)
HXDLIN( 602)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 604)			this->_curAnim->paused = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,resume,(void))

void FlxAnimationController_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_613_reverse)
HXDLIN( 613)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 615)			this->_curAnim->reverse();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,reverse,(void))

 ::flixel::animation::FlxAnimation FlxAnimationController_obj::getByName(::String Name){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_624_getByName)
HXDLIN( 624)		return this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,getByName,return )

void FlxAnimationController_obj::randomFrame(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_632_randomFrame)
HXLINE( 633)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 635)			this->_curAnim->stop();
HXLINE( 636)			this->_curAnim = null();
            		}
HXLINE( 638)		 ::flixel::math::FlxRandom _hx_tmp = ::flixel::FlxG_obj::random;
HXDLIN( 638)		this->set_frameIndex(_hx_tmp->_hx_int((int)0,(this->_sprite->numFrames - (int)1),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,randomFrame,(void))

void FlxAnimationController_obj::fireCallback(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_643_fireCallback)
HXDLIN( 643)		if (hx::IsNotNull( this->callback )) {
HXLINE( 645)			::String name;
HXDLIN( 645)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 645)				name = this->_curAnim->name;
            			}
            			else {
HXLINE( 645)				name = null();
            			}
HXLINE( 646)			int number;
HXDLIN( 646)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 646)				number = this->_curAnim->curFrame;
            			}
            			else {
HXLINE( 646)				number = this->frameIndex;
            			}
HXLINE( 647)			this->callback(name,number,this->frameIndex);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,fireCallback,(void))

void FlxAnimationController_obj::fireFinishCallback(::String name){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_654_fireFinishCallback)
HXDLIN( 654)		if (hx::IsNotNull( this->finishCallback )) {
HXLINE( 656)			this->finishCallback(name);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,fireFinishCallback,(void))

void FlxAnimationController_obj::byNamesHelper(::Array< int > AddTo,::Array< ::String > FrameNames){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_662_byNamesHelper)
HXDLIN( 662)		int _g = (int)0;
HXDLIN( 662)		while((_g < FrameNames->length)){
HXDLIN( 662)			::String frameName = FrameNames->__get(_g);
HXDLIN( 662)			_g = (_g + (int)1);
HXLINE( 664)			if (this->_sprite->frames->framesHash->exists(frameName)) {
HXLINE( 666)				 ::flixel::graphics::frames::FlxFrame frameToAdd = this->_sprite->frames->framesHash->get(frameName).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXLINE( 667)				AddTo->push(this->_sprite->frames->frames->indexOf(frameToAdd,null()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,byNamesHelper,(void))

void FlxAnimationController_obj::byStringIndicesHelper(::Array< int > AddTo,::String Prefix,::Array< ::String > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_674_byStringIndicesHelper)
HXDLIN( 674)		int _g = (int)0;
HXDLIN( 674)		while((_g < Indices->length)){
HXDLIN( 674)			::String index = Indices->__get(_g);
HXDLIN( 674)			_g = (_g + (int)1);
HXLINE( 676)			::String name = ((Prefix + index) + Postfix);
HXLINE( 677)			if (this->_sprite->frames->framesHash->exists(name)) {
HXLINE( 679)				 ::flixel::graphics::frames::FlxFrame frameToAdd = this->_sprite->frames->framesHash->get(name).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXLINE( 680)				AddTo->push(this->_sprite->frames->frames->indexOf(frameToAdd,null()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,byStringIndicesHelper,(void))

void FlxAnimationController_obj::byIndicesHelper(::Array< int > AddTo,::String Prefix,::Array< int > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_687_byIndicesHelper)
HXDLIN( 687)		int _g = (int)0;
HXDLIN( 687)		while((_g < Indices->length)){
HXDLIN( 687)			int index = Indices->__get(_g);
HXDLIN( 687)			_g = (_g + (int)1);
HXLINE( 689)			int indexToAdd = this->findSpriteFrame(Prefix,index,Postfix);
HXLINE( 690)			if ((indexToAdd != (int)-1)) {
HXLINE( 692)				AddTo->push(indexToAdd);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,byIndicesHelper,(void))

void FlxAnimationController_obj::byPrefixHelper(::Array< int > AddTo,::Array< ::Dynamic> AnimFrames,::String Prefix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_698_byPrefixHelper)
HXLINE( 699)		::String name = AnimFrames->__get((int)0).StaticCast<  ::flixel::graphics::frames::FlxFrame >()->name;
HXLINE( 700)		int postIndex = name.indexOf(HX_(".",2e,00,00,00),Prefix.length);
HXLINE( 701)		int postFix;
HXDLIN( 701)		if ((postIndex == (int)-1)) {
HXLINE( 701)			postFix = name.length;
            		}
            		else {
HXLINE( 701)			postFix = postIndex;
            		}
HXDLIN( 701)		::String postFix1 = name.substring(postFix,name.length);
HXLINE( 702)		::flixel::graphics::frames::FlxFrame_obj::sort(AnimFrames,Prefix.length,postFix1.length);
HXLINE( 704)		{
HXLINE( 704)			int _g = (int)0;
HXDLIN( 704)			while((_g < AnimFrames->length)){
HXLINE( 704)				 ::flixel::graphics::frames::FlxFrame animFrame = AnimFrames->__get(_g).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXDLIN( 704)				_g = (_g + (int)1);
HXLINE( 706)				AddTo->push(this->_sprite->frames->frames->indexOf(animFrame,null()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxAnimationController_obj,byPrefixHelper,(void))

void FlxAnimationController_obj::findByPrefix(::Array< ::Dynamic> AnimFrames,::String Prefix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_712_findByPrefix)
HXDLIN( 712)		int _g = (int)0;
HXDLIN( 712)		::Array< ::Dynamic> _g1 = this->_sprite->frames->frames;
HXDLIN( 712)		while((_g < _g1->length)){
HXDLIN( 712)			 ::flixel::graphics::frames::FlxFrame frame = _g1->__get(_g).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXDLIN( 712)			_g = (_g + (int)1);
HXLINE( 714)			bool _hx_tmp;
HXDLIN( 714)			if (hx::IsNotNull( frame->name )) {
HXLINE( 714)				_hx_tmp = ::StringTools_obj::startsWith(frame->name,Prefix);
            			}
            			else {
HXLINE( 714)				_hx_tmp = false;
            			}
HXDLIN( 714)			if (_hx_tmp) {
HXLINE( 716)				AnimFrames->push(frame);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,findByPrefix,(void))

int FlxAnimationController_obj::set_frameIndex(int Frame){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_722_set_frameIndex)
HXLINE( 723)		bool _hx_tmp;
HXDLIN( 723)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 723)			_hx_tmp = (this->_sprite->numFrames > (int)0);
            		}
            		else {
HXLINE( 723)			_hx_tmp = false;
            		}
HXDLIN( 723)		if (_hx_tmp) {
HXLINE( 725)			Frame = hx::Mod(Frame,this->_sprite->numFrames);
HXLINE( 726)			 ::flixel::FlxSprite _hx_tmp1 = this->_sprite;
HXDLIN( 726)			_hx_tmp1->set_frame(this->_sprite->frames->frames->__get(Frame).StaticCast<  ::flixel::graphics::frames::FlxFrame >());
HXLINE( 727)			this->frameIndex = Frame;
HXLINE( 728)			if (hx::IsNotNull( this->callback )) {
HXLINE( 728)				::String name;
HXDLIN( 728)				if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 728)					name = this->_curAnim->name;
            				}
            				else {
HXLINE( 728)					name = null();
            				}
HXDLIN( 728)				int number;
HXDLIN( 728)				if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 728)					number = this->_curAnim->curFrame;
            				}
            				else {
HXLINE( 728)					number = this->frameIndex;
            				}
HXDLIN( 728)				this->callback(name,number,this->frameIndex);
            			}
            		}
HXLINE( 731)		return this->frameIndex;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_frameIndex,return )

::String FlxAnimationController_obj::get_frameName(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_736_get_frameName)
HXDLIN( 736)		return this->_sprite->frame->name;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_frameName,return )

::String FlxAnimationController_obj::set_frameName(::String Value){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_740_set_frameName)
HXLINE( 741)		bool _hx_tmp;
HXDLIN( 741)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 741)			_hx_tmp = this->_sprite->frames->framesHash->exists(Value);
            		}
            		else {
HXLINE( 741)			_hx_tmp = false;
            		}
HXDLIN( 741)		if (_hx_tmp) {
HXLINE( 743)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 745)				this->_curAnim->stop();
HXLINE( 746)				this->_curAnim = null();
            			}
HXLINE( 749)			 ::flixel::graphics::frames::FlxFrame frame = this->_sprite->frames->framesHash->get(Value).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXLINE( 750)			if (hx::IsNotNull( frame )) {
HXLINE( 752)				this->set_frameIndex(this->_sprite->frames->frames->indexOf(frame,null()));
            			}
            		}
HXLINE( 756)		return Value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_frameName,return )

::String FlxAnimationController_obj::get_name(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_760_get_name)
HXLINE( 761)		::String animName = null();
HXLINE( 762)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 764)			animName = this->_curAnim->name;
            		}
HXLINE( 766)		return animName;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_name,return )

::String FlxAnimationController_obj::set_name(::String AnimName){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_770_set_name)
HXLINE( 771)		this->play(AnimName,null(),null(),null());
HXLINE( 772)		return AnimName;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_name,return )

 ::flixel::animation::FlxAnimation FlxAnimationController_obj::get_curAnim(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_777_get_curAnim)
HXDLIN( 777)		return this->_curAnim;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_curAnim,return )

 ::flixel::animation::FlxAnimation FlxAnimationController_obj::set_curAnim( ::flixel::animation::FlxAnimation Anim){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_781_set_curAnim)
HXLINE( 782)		if (hx::IsNotEq( Anim,this->_curAnim )) {
HXLINE( 784)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 786)				this->_curAnim->stop();
            			}
HXLINE( 789)			if (hx::IsNotNull( Anim )) {
HXLINE( 791)				Anim->play(null(),null(),null());
            			}
            		}
HXLINE( 794)		return (this->_curAnim = Anim);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_curAnim,return )

bool FlxAnimationController_obj::get_paused(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_798_get_paused)
HXLINE( 799)		bool paused = false;
HXLINE( 800)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 802)			paused = this->_curAnim->paused;
            		}
HXLINE( 804)		return paused;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_paused,return )

bool FlxAnimationController_obj::set_paused(bool Value){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_808_set_paused)
HXLINE( 809)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 811)			if (Value) {
HXLINE( 813)				this->_curAnim->pause();
            			}
            			else {
HXLINE( 817)				this->_curAnim->paused = false;
            			}
            		}
HXLINE( 820)		return Value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_paused,return )

bool FlxAnimationController_obj::get_finished(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_824_get_finished)
HXLINE( 825)		bool finished = true;
HXLINE( 826)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 828)			finished = this->_curAnim->finished;
            		}
HXLINE( 830)		return finished;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_finished,return )

bool FlxAnimationController_obj::set_finished(bool Value){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_834_set_finished)
HXLINE( 835)		bool _hx_tmp;
HXDLIN( 835)		if (Value) {
HXLINE( 835)			_hx_tmp = hx::IsNotNull( this->_curAnim );
            		}
            		else {
HXLINE( 835)			_hx_tmp = false;
            		}
HXDLIN( 835)		if (_hx_tmp) {
HXLINE( 837)			this->_curAnim->finish();
            		}
HXLINE( 839)		return Value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_finished,return )

int FlxAnimationController_obj::get_frames(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_844_get_frames)
HXDLIN( 844)		return this->_sprite->numFrames;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_frames,return )

int FlxAnimationController_obj::getFrameIndex( ::flixel::graphics::frames::FlxFrame Frame){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_855_getFrameIndex)
HXDLIN( 855)		return this->_sprite->frames->frames->indexOf(Frame,null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,getFrameIndex,return )


hx::ObjectPtr< FlxAnimationController_obj > FlxAnimationController_obj::__new( ::flixel::FlxSprite Sprite) {
	hx::ObjectPtr< FlxAnimationController_obj > __this = new FlxAnimationController_obj();
	__this->__construct(Sprite);
	return __this;
}

hx::ObjectPtr< FlxAnimationController_obj > FlxAnimationController_obj::__alloc(hx::Ctx *_hx_ctx, ::flixel::FlxSprite Sprite) {
	FlxAnimationController_obj *__this = (FlxAnimationController_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxAnimationController_obj), true, "flixel.animation.FlxAnimationController"));
	*(void **)__this = FlxAnimationController_obj::_hx_vtable;
	__this->__construct(Sprite);
	return __this;
}

FlxAnimationController_obj::FlxAnimationController_obj()
{
}

void FlxAnimationController_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxAnimationController);
	HX_MARK_MEMBER_NAME(frameIndex,"frameIndex");
	HX_MARK_MEMBER_NAME(frames,"frames");
	HX_MARK_MEMBER_NAME(callback,"callback");
	HX_MARK_MEMBER_NAME(finishCallback,"finishCallback");
	HX_MARK_MEMBER_NAME(_sprite,"_sprite");
	HX_MARK_MEMBER_NAME(_curAnim,"_curAnim");
	HX_MARK_MEMBER_NAME(_animations,"_animations");
	HX_MARK_MEMBER_NAME(_prerotated,"_prerotated");
	HX_MARK_END_CLASS();
}

void FlxAnimationController_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(frameIndex,"frameIndex");
	HX_VISIT_MEMBER_NAME(frames,"frames");
	HX_VISIT_MEMBER_NAME(callback,"callback");
	HX_VISIT_MEMBER_NAME(finishCallback,"finishCallback");
	HX_VISIT_MEMBER_NAME(_sprite,"_sprite");
	HX_VISIT_MEMBER_NAME(_curAnim,"_curAnim");
	HX_VISIT_MEMBER_NAME(_animations,"_animations");
	HX_VISIT_MEMBER_NAME(_prerotated,"_prerotated");
}

hx::Val FlxAnimationController_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_name() ); }
		if (HX_FIELD_EQ(inName,"play") ) { return hx::Val( play_dyn() ); }
		if (HX_FIELD_EQ(inName,"stop") ) { return hx::Val( stop_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
		if (HX_FIELD_EQ(inName,"pause") ) { return hx::Val( pause_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"paused") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_paused() ); }
		if (HX_FIELD_EQ(inName,"frames") ) { return hx::Val( inCallProp == hx::paccAlways ? get_frames() : frames ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"append") ) { return hx::Val( append_dyn() ); }
		if (HX_FIELD_EQ(inName,"finish") ) { return hx::Val( finish_dyn() ); }
		if (HX_FIELD_EQ(inName,"resume") ) { return hx::Val( resume_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curAnim") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_curAnim() ); }
		if (HX_FIELD_EQ(inName,"_sprite") ) { return hx::Val( _sprite ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"finished") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_finished() ); }
		if (HX_FIELD_EQ(inName,"callback") ) { return hx::Val( callback ); }
		if (HX_FIELD_EQ(inName,"_curAnim") ) { return hx::Val( _curAnim ); }
		if (HX_FIELD_EQ(inName,"copyFrom") ) { return hx::Val( copyFrom_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_name") ) { return hx::Val( get_name_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_name") ) { return hx::Val( set_name_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameName") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_frameName() ); }
		if (HX_FIELD_EQ(inName,"getByName") ) { return hx::Val( getByName_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"frameIndex") ) { return hx::Val( frameIndex ); }
		if (HX_FIELD_EQ(inName,"addByNames") ) { return hx::Val( addByNames_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_paused") ) { return hx::Val( get_paused_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_paused") ) { return hx::Val( set_paused_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_frames") ) { return hx::Val( get_frames_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_animations") ) { return hx::Val( _animations ); }
		if (HX_FIELD_EQ(inName,"_prerotated") ) { return hx::Val( _prerotated ); }
		if (HX_FIELD_EQ(inName,"addByPrefix") ) { return hx::Val( addByPrefix_dyn() ); }
		if (HX_FIELD_EQ(inName,"randomFrame") ) { return hx::Val( randomFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_curAnim") ) { return hx::Val( get_curAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_curAnim") ) { return hx::Val( set_curAnim_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addByIndices") ) { return hx::Val( addByIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"fireCallback") ) { return hx::Val( fireCallback_dyn() ); }
		if (HX_FIELD_EQ(inName,"findByPrefix") ) { return hx::Val( findByPrefix_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_finished") ) { return hx::Val( get_finished_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_finished") ) { return hx::Val( set_finished_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"appendByNames") ) { return hx::Val( appendByNames_dyn() ); }
		if (HX_FIELD_EQ(inName,"byNamesHelper") ) { return hx::Val( byNamesHelper_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_frameName") ) { return hx::Val( get_frameName_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_frameName") ) { return hx::Val( set_frameName_dyn() ); }
		if (HX_FIELD_EQ(inName,"getFrameIndex") ) { return hx::Val( getFrameIndex_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"finishCallback") ) { return hx::Val( finishCallback ); }
		if (HX_FIELD_EQ(inName,"appendByPrefix") ) { return hx::Val( appendByPrefix_dyn() ); }
		if (HX_FIELD_EQ(inName,"byPrefixHelper") ) { return hx::Val( byPrefixHelper_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_frameIndex") ) { return hx::Val( set_frameIndex_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"clearPrerotated") ) { return hx::Val( clearPrerotated_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearAnimations") ) { return hx::Val( clearAnimations_dyn() ); }
		if (HX_FIELD_EQ(inName,"appendByIndices") ) { return hx::Val( appendByIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"findSpriteFrame") ) { return hx::Val( findSpriteFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"byIndicesHelper") ) { return hx::Val( byIndicesHelper_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"createPrerotated") ) { return hx::Val( createPrerotated_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"destroyAnimations") ) { return hx::Val( destroyAnimations_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"addByStringIndices") ) { return hx::Val( addByStringIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"fireFinishCallback") ) { return hx::Val( fireFinishCallback_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"appendByStringIndices") ) { return hx::Val( appendByStringIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"byStringIndicesHelper") ) { return hx::Val( byStringIndicesHelper_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxAnimationController_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_name(inValue.Cast< ::String >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"paused") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_paused(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"frames") ) { frames=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curAnim") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_curAnim(inValue.Cast<  ::flixel::animation::FlxAnimation >()) ); }
		if (HX_FIELD_EQ(inName,"_sprite") ) { _sprite=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"finished") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_finished(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"callback") ) { callback=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_curAnim") ) { _curAnim=inValue.Cast<  ::flixel::animation::FlxAnimation >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameName") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_frameName(inValue.Cast< ::String >()) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"frameIndex") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_frameIndex(inValue.Cast< int >()) );frameIndex=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_animations") ) { _animations=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_prerotated") ) { _prerotated=inValue.Cast<  ::flixel::animation::FlxPrerotatedAnimation >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"finishCallback") ) { finishCallback=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxAnimationController_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("curAnim","\xb1","\xf7","\x86","\xab"));
	outFields->push(HX_HCSTRING("frameIndex","\xa5","\xcf","\x3a","\xa1"));
	outFields->push(HX_HCSTRING("frameName","\x18","\x31","\x80","\x36"));
	outFields->push(HX_HCSTRING("name","\x4b","\x72","\xff","\x48"));
	outFields->push(HX_HCSTRING("paused","\xae","\x40","\x84","\xef"));
	outFields->push(HX_HCSTRING("finished","\x72","\x93","\x0e","\x95"));
	outFields->push(HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac"));
	outFields->push(HX_HCSTRING("_sprite","\xa4","\xed","\x0c","\x32"));
	outFields->push(HX_HCSTRING("_curAnim","\x32","\x51","\x3f","\xe5"));
	outFields->push(HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55"));
	outFields->push(HX_HCSTRING("_prerotated","\x05","\x51","\xa3","\x64"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxAnimationController_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(FlxAnimationController_obj,frameIndex),HX_HCSTRING("frameIndex","\xa5","\xcf","\x3a","\xa1")},
	{hx::fsInt,(int)offsetof(FlxAnimationController_obj,frames),HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxAnimationController_obj,callback),HX_HCSTRING("callback","\xc5","\x99","\x06","\x7f")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxAnimationController_obj,finishCallback),HX_HCSTRING("finishCallback","\x38","\xa1","\xbc","\xb4")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FlxAnimationController_obj,_sprite),HX_HCSTRING("_sprite","\xa4","\xed","\x0c","\x32")},
	{hx::fsObject /*::flixel::animation::FlxAnimation*/ ,(int)offsetof(FlxAnimationController_obj,_curAnim),HX_HCSTRING("_curAnim","\x32","\x51","\x3f","\xe5")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(FlxAnimationController_obj,_animations),HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55")},
	{hx::fsObject /*::flixel::animation::FlxPrerotatedAnimation*/ ,(int)offsetof(FlxAnimationController_obj,_prerotated),HX_HCSTRING("_prerotated","\x05","\x51","\xa3","\x64")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxAnimationController_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxAnimationController_obj_sMemberFields[] = {
	HX_HCSTRING("frameIndex","\xa5","\xcf","\x3a","\xa1"),
	HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac"),
	HX_HCSTRING("callback","\xc5","\x99","\x06","\x7f"),
	HX_HCSTRING("finishCallback","\x38","\xa1","\xbc","\xb4"),
	HX_HCSTRING("_sprite","\xa4","\xed","\x0c","\x32"),
	HX_HCSTRING("_curAnim","\x32","\x51","\x3f","\xe5"),
	HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55"),
	HX_HCSTRING("_prerotated","\x05","\x51","\xa3","\x64"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("copyFrom","\xbf","\x0b","\x61","\xc8"),
	HX_HCSTRING("createPrerotated","\x02","\x02","\x47","\xc7"),
	HX_HCSTRING("destroyAnimations","\x89","\x22","\x77","\xd5"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("clearPrerotated","\xd3","\x4b","\xbe","\x18"),
	HX_HCSTRING("clearAnimations","\xdc","\xfc","\xc0","\x09"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	HX_HCSTRING("addByNames","\x50","\x4a","\xa2","\xdd"),
	HX_HCSTRING("appendByNames","\xb7","\xb3","\x38","\xaf"),
	HX_HCSTRING("addByStringIndices","\xde","\xf4","\x20","\x5c"),
	HX_HCSTRING("appendByStringIndices","\x45","\x9d","\xe9","\x96"),
	HX_HCSTRING("addByIndices","\xaf","\xb3","\x3b","\x79"),
	HX_HCSTRING("appendByIndices","\xd6","\x84","\x4c","\xac"),
	HX_HCSTRING("findSpriteFrame","\x2f","\x8a","\x2e","\xfe"),
	HX_HCSTRING("addByPrefix","\x0a","\x56","\x9c","\xa1"),
	HX_HCSTRING("appendByPrefix","\xc3","\x26","\xa2","\x33"),
	HX_HCSTRING("play","\xf4","\x2d","\x5a","\x4a"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("finish","\x53","\x40","\x7f","\x86"),
	HX_HCSTRING("stop","\x02","\xf0","\x5b","\x4c"),
	HX_HCSTRING("pause","\xf6","\xd6","\x57","\xbd"),
	HX_HCSTRING("resume","\xad","\x69","\x84","\x08"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("getByName","\xf8","\xb4","\xa4","\x8a"),
	HX_HCSTRING("randomFrame","\x2a","\x9b","\x18","\x71"),
	HX_HCSTRING("fireCallback","\x9b","\xcf","\x9f","\x40"),
	HX_HCSTRING("fireFinishCallback","\x8e","\xdb","\x9c","\xe3"),
	HX_HCSTRING("byNamesHelper","\xbf","\xfa","\xde","\x2f"),
	HX_HCSTRING("byStringIndicesHelper","\xcd","\x4c","\xc0","\x21"),
	HX_HCSTRING("byIndicesHelper","\x9e","\x6f","\x1b","\x71"),
	HX_HCSTRING("byPrefixHelper","\x17","\xcd","\x67","\x83"),
	HX_HCSTRING("findByPrefix","\x22","\x0c","\xbe","\x5d"),
	HX_HCSTRING("set_frameIndex","\x62","\x40","\x50","\x37"),
	HX_HCSTRING("get_frameName","\xef","\x04","\xe4","\xf7"),
	HX_HCSTRING("set_frameName","\xfb","\xe6","\xe9","\x3c"),
	HX_HCSTRING("get_name","\xd4","\x2d","\xba","\xc8"),
	HX_HCSTRING("set_name","\x48","\x87","\x17","\x77"),
	HX_HCSTRING("get_curAnim","\xc8","\x57","\x81","\x31"),
	HX_HCSTRING("set_curAnim","\xd4","\x5e","\xee","\x3b"),
	HX_HCSTRING("get_paused","\x77","\xb0","\x0b","\xe0"),
	HX_HCSTRING("set_paused","\xeb","\x4e","\x89","\xe3"),
	HX_HCSTRING("get_finished","\x7b","\x47","\x28","\x4a"),
	HX_HCSTRING("set_finished","\xef","\x6a","\x21","\x5f"),
	HX_HCSTRING("get_frames","\x6f","\x1f","\x0d","\x9d"),
	HX_HCSTRING("getFrameIndex","\xdb","\x2b","\xad","\xfd"),
	::String(null()) };

static void FlxAnimationController_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxAnimationController_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxAnimationController_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxAnimationController_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxAnimationController_obj::__mClass;

void FlxAnimationController_obj::__register()
{
	hx::Object *dummy = new FlxAnimationController_obj;
	FlxAnimationController_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.animation.FlxAnimationController","\x0a","\x0a","\xda","\x33");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxAnimationController_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxAnimationController_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxAnimationController_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxAnimationController_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxAnimationController_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxAnimationController_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace animation
