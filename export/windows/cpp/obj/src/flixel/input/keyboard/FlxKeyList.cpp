// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_FlxBaseKeyList
#include <flixel/input/FlxBaseKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_FlxKeyManager
#include <flixel/input/FlxKeyManager.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyList
#include <flixel/input/keyboard/FlxKeyList.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_10_new,"flixel.input.keyboard.FlxKeyList","new",0xfff37fce,"flixel.input.keyboard.FlxKeyList.new","flixel/input/keyboard/FlxKeyList.hx",10,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_12_get_A,"flixel.input.keyboard.FlxKeyList","get_A",0x7bdd8c06,"flixel.input.keyboard.FlxKeyList.get_A","flixel/input/keyboard/FlxKeyList.hx",12,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_13_get_B,"flixel.input.keyboard.FlxKeyList","get_B",0x7bdd8c07,"flixel.input.keyboard.FlxKeyList.get_B","flixel/input/keyboard/FlxKeyList.hx",13,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_14_get_C,"flixel.input.keyboard.FlxKeyList","get_C",0x7bdd8c08,"flixel.input.keyboard.FlxKeyList.get_C","flixel/input/keyboard/FlxKeyList.hx",14,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_15_get_D,"flixel.input.keyboard.FlxKeyList","get_D",0x7bdd8c09,"flixel.input.keyboard.FlxKeyList.get_D","flixel/input/keyboard/FlxKeyList.hx",15,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_16_get_E,"flixel.input.keyboard.FlxKeyList","get_E",0x7bdd8c0a,"flixel.input.keyboard.FlxKeyList.get_E","flixel/input/keyboard/FlxKeyList.hx",16,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_17_get_F,"flixel.input.keyboard.FlxKeyList","get_F",0x7bdd8c0b,"flixel.input.keyboard.FlxKeyList.get_F","flixel/input/keyboard/FlxKeyList.hx",17,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_18_get_G,"flixel.input.keyboard.FlxKeyList","get_G",0x7bdd8c0c,"flixel.input.keyboard.FlxKeyList.get_G","flixel/input/keyboard/FlxKeyList.hx",18,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_19_get_H,"flixel.input.keyboard.FlxKeyList","get_H",0x7bdd8c0d,"flixel.input.keyboard.FlxKeyList.get_H","flixel/input/keyboard/FlxKeyList.hx",19,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_20_get_I,"flixel.input.keyboard.FlxKeyList","get_I",0x7bdd8c0e,"flixel.input.keyboard.FlxKeyList.get_I","flixel/input/keyboard/FlxKeyList.hx",20,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_21_get_J,"flixel.input.keyboard.FlxKeyList","get_J",0x7bdd8c0f,"flixel.input.keyboard.FlxKeyList.get_J","flixel/input/keyboard/FlxKeyList.hx",21,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_22_get_K,"flixel.input.keyboard.FlxKeyList","get_K",0x7bdd8c10,"flixel.input.keyboard.FlxKeyList.get_K","flixel/input/keyboard/FlxKeyList.hx",22,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_23_get_L,"flixel.input.keyboard.FlxKeyList","get_L",0x7bdd8c11,"flixel.input.keyboard.FlxKeyList.get_L","flixel/input/keyboard/FlxKeyList.hx",23,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_24_get_M,"flixel.input.keyboard.FlxKeyList","get_M",0x7bdd8c12,"flixel.input.keyboard.FlxKeyList.get_M","flixel/input/keyboard/FlxKeyList.hx",24,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_25_get_N,"flixel.input.keyboard.FlxKeyList","get_N",0x7bdd8c13,"flixel.input.keyboard.FlxKeyList.get_N","flixel/input/keyboard/FlxKeyList.hx",25,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_26_get_O,"flixel.input.keyboard.FlxKeyList","get_O",0x7bdd8c14,"flixel.input.keyboard.FlxKeyList.get_O","flixel/input/keyboard/FlxKeyList.hx",26,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_27_get_P,"flixel.input.keyboard.FlxKeyList","get_P",0x7bdd8c15,"flixel.input.keyboard.FlxKeyList.get_P","flixel/input/keyboard/FlxKeyList.hx",27,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_28_get_Q,"flixel.input.keyboard.FlxKeyList","get_Q",0x7bdd8c16,"flixel.input.keyboard.FlxKeyList.get_Q","flixel/input/keyboard/FlxKeyList.hx",28,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_29_get_R,"flixel.input.keyboard.FlxKeyList","get_R",0x7bdd8c17,"flixel.input.keyboard.FlxKeyList.get_R","flixel/input/keyboard/FlxKeyList.hx",29,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_30_get_S,"flixel.input.keyboard.FlxKeyList","get_S",0x7bdd8c18,"flixel.input.keyboard.FlxKeyList.get_S","flixel/input/keyboard/FlxKeyList.hx",30,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_31_get_T,"flixel.input.keyboard.FlxKeyList","get_T",0x7bdd8c19,"flixel.input.keyboard.FlxKeyList.get_T","flixel/input/keyboard/FlxKeyList.hx",31,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_32_get_U,"flixel.input.keyboard.FlxKeyList","get_U",0x7bdd8c1a,"flixel.input.keyboard.FlxKeyList.get_U","flixel/input/keyboard/FlxKeyList.hx",32,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_33_get_V,"flixel.input.keyboard.FlxKeyList","get_V",0x7bdd8c1b,"flixel.input.keyboard.FlxKeyList.get_V","flixel/input/keyboard/FlxKeyList.hx",33,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_34_get_W,"flixel.input.keyboard.FlxKeyList","get_W",0x7bdd8c1c,"flixel.input.keyboard.FlxKeyList.get_W","flixel/input/keyboard/FlxKeyList.hx",34,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_35_get_X,"flixel.input.keyboard.FlxKeyList","get_X",0x7bdd8c1d,"flixel.input.keyboard.FlxKeyList.get_X","flixel/input/keyboard/FlxKeyList.hx",35,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_36_get_Y,"flixel.input.keyboard.FlxKeyList","get_Y",0x7bdd8c1e,"flixel.input.keyboard.FlxKeyList.get_Y","flixel/input/keyboard/FlxKeyList.hx",36,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_37_get_Z,"flixel.input.keyboard.FlxKeyList","get_Z",0x7bdd8c1f,"flixel.input.keyboard.FlxKeyList.get_Z","flixel/input/keyboard/FlxKeyList.hx",37,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_38_get_ZERO,"flixel.input.keyboard.FlxKeyList","get_ZERO",0x2ad43483,"flixel.input.keyboard.FlxKeyList.get_ZERO","flixel/input/keyboard/FlxKeyList.hx",38,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_39_get_ONE,"flixel.input.keyboard.FlxKeyList","get_ONE",0x5767fd4b,"flixel.input.keyboard.FlxKeyList.get_ONE","flixel/input/keyboard/FlxKeyList.hx",39,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_40_get_TWO,"flixel.input.keyboard.FlxKeyList","get_TWO",0x576bd071,"flixel.input.keyboard.FlxKeyList.get_TWO","flixel/input/keyboard/FlxKeyList.hx",40,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_41_get_THREE,"flixel.input.keyboard.FlxKeyList","get_THREE",0xdc6dde83,"flixel.input.keyboard.FlxKeyList.get_THREE","flixel/input/keyboard/FlxKeyList.hx",41,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_42_get_FOUR,"flixel.input.keyboard.FlxKeyList","get_FOUR",0x1da38941,"flixel.input.keyboard.FlxKeyList.get_FOUR","flixel/input/keyboard/FlxKeyList.hx",42,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_43_get_FIVE,"flixel.input.keyboard.FlxKeyList","get_FIVE",0x1d9efc8d,"flixel.input.keyboard.FlxKeyList.get_FIVE","flixel/input/keyboard/FlxKeyList.hx",43,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_44_get_SIX,"flixel.input.keyboard.FlxKeyList","get_SIX",0x576b0207,"flixel.input.keyboard.FlxKeyList.get_SIX","flixel/input/keyboard/FlxKeyList.hx",44,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_45_get_SEVEN,"flixel.input.keyboard.FlxKeyList","get_SEVEN",0x470eaf32,"flixel.input.keyboard.FlxKeyList.get_SEVEN","flixel/input/keyboard/FlxKeyList.hx",45,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_46_get_EIGHT,"flixel.input.keyboard.FlxKeyList","get_EIGHT",0x3a0c0b74,"flixel.input.keyboard.FlxKeyList.get_EIGHT","flixel/input/keyboard/FlxKeyList.hx",46,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_47_get_NINE,"flixel.input.keyboard.FlxKeyList","get_NINE",0x22e8aa8d,"flixel.input.keyboard.FlxKeyList.get_NINE","flixel/input/keyboard/FlxKeyList.hx",47,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_48_get_PAGEUP,"flixel.input.keyboard.FlxKeyList","get_PAGEUP",0x5b340885,"flixel.input.keyboard.FlxKeyList.get_PAGEUP","flixel/input/keyboard/FlxKeyList.hx",48,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_49_get_PAGEDOWN,"flixel.input.keyboard.FlxKeyList","get_PAGEDOWN",0x8b6ddd0c,"flixel.input.keyboard.FlxKeyList.get_PAGEDOWN","flixel/input/keyboard/FlxKeyList.hx",49,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_50_get_HOME,"flixel.input.keyboard.FlxKeyList","get_HOME",0x1ef5ef7a,"flixel.input.keyboard.FlxKeyList.get_HOME","flixel/input/keyboard/FlxKeyList.hx",50,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_51_get_END,"flixel.input.keyboard.FlxKeyList","get_END",0x576066c0,"flixel.input.keyboard.FlxKeyList.get_END","flixel/input/keyboard/FlxKeyList.hx",51,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_52_get_INSERT,"flixel.input.keyboard.FlxKeyList","get_INSERT",0x12d89954,"flixel.input.keyboard.FlxKeyList.get_INSERT","flixel/input/keyboard/FlxKeyList.hx",52,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_53_get_ESCAPE,"flixel.input.keyboard.FlxKeyList","get_ESCAPE",0x4fd5999c,"flixel.input.keyboard.FlxKeyList.get_ESCAPE","flixel/input/keyboard/FlxKeyList.hx",53,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_54_get_MINUS,"flixel.input.keyboard.FlxKeyList","get_MINUS",0xd5460a95,"flixel.input.keyboard.FlxKeyList.get_MINUS","flixel/input/keyboard/FlxKeyList.hx",54,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_55_get_PLUS,"flixel.input.keyboard.FlxKeyList","get_PLUS",0x243d64b5,"flixel.input.keyboard.FlxKeyList.get_PLUS","flixel/input/keyboard/FlxKeyList.hx",55,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_56_get_DELETE,"flixel.input.keyboard.FlxKeyList","get_DELETE",0xdfd41646,"flixel.input.keyboard.FlxKeyList.get_DELETE","flixel/input/keyboard/FlxKeyList.hx",56,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_57_get_BACKSPACE,"flixel.input.keyboard.FlxKeyList","get_BACKSPACE",0x4ee94de4,"flixel.input.keyboard.FlxKeyList.get_BACKSPACE","flixel/input/keyboard/FlxKeyList.hx",57,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_58_get_LBRACKET,"flixel.input.keyboard.FlxKeyList","get_LBRACKET",0xe7dfe217,"flixel.input.keyboard.FlxKeyList.get_LBRACKET","flixel/input/keyboard/FlxKeyList.hx",58,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_59_get_RBRACKET,"flixel.input.keyboard.FlxKeyList","get_RBRACKET",0x3f0e8ed1,"flixel.input.keyboard.FlxKeyList.get_RBRACKET","flixel/input/keyboard/FlxKeyList.hx",59,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_60_get_BACKSLASH,"flixel.input.keyboard.FlxKeyList","get_BACKSLASH",0x4c44815b,"flixel.input.keyboard.FlxKeyList.get_BACKSLASH","flixel/input/keyboard/FlxKeyList.hx",60,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_61_get_CAPSLOCK,"flixel.input.keyboard.FlxKeyList","get_CAPSLOCK",0x51fa1367,"flixel.input.keyboard.FlxKeyList.get_CAPSLOCK","flixel/input/keyboard/FlxKeyList.hx",61,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_62_get_SEMICOLON,"flixel.input.keyboard.FlxKeyList","get_SEMICOLON",0xd1d0ded6,"flixel.input.keyboard.FlxKeyList.get_SEMICOLON","flixel/input/keyboard/FlxKeyList.hx",62,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_63_get_QUOTE,"flixel.input.keyboard.FlxKeyList","get_QUOTE",0x2acfad61,"flixel.input.keyboard.FlxKeyList.get_QUOTE","flixel/input/keyboard/FlxKeyList.hx",63,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_64_get_ENTER,"flixel.input.keyboard.FlxKeyList","get_ENTER",0x3d63f73d,"flixel.input.keyboard.FlxKeyList.get_ENTER","flixel/input/keyboard/FlxKeyList.hx",64,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_65_get_SHIFT,"flixel.input.keyboard.FlxKeyList","get_SHIFT",0x490076a7,"flixel.input.keyboard.FlxKeyList.get_SHIFT","flixel/input/keyboard/FlxKeyList.hx",65,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_66_get_COMMA,"flixel.input.keyboard.FlxKeyList","get_COMMA",0x173abbfa,"flixel.input.keyboard.FlxKeyList.get_COMMA","flixel/input/keyboard/FlxKeyList.hx",66,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_67_get_PERIOD,"flixel.input.keyboard.FlxKeyList","get_PERIOD",0xb016b71c,"flixel.input.keyboard.FlxKeyList.get_PERIOD","flixel/input/keyboard/FlxKeyList.hx",67,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_68_get_SLASH,"flixel.input.keyboard.FlxKeyList","get_SLASH",0x4b9f4a62,"flixel.input.keyboard.FlxKeyList.get_SLASH","flixel/input/keyboard/FlxKeyList.hx",68,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_69_get_GRAVEACCENT,"flixel.input.keyboard.FlxKeyList","get_GRAVEACCENT",0xd01c3774,"flixel.input.keyboard.FlxKeyList.get_GRAVEACCENT","flixel/input/keyboard/FlxKeyList.hx",69,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_70_get_CONTROL,"flixel.input.keyboard.FlxKeyList","get_CONTROL",0x00716cc2,"flixel.input.keyboard.FlxKeyList.get_CONTROL","flixel/input/keyboard/FlxKeyList.hx",70,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_71_get_ALT,"flixel.input.keyboard.FlxKeyList","get_ALT",0x575d5c0e,"flixel.input.keyboard.FlxKeyList.get_ALT","flixel/input/keyboard/FlxKeyList.hx",71,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_72_get_SPACE,"flixel.input.keyboard.FlxKeyList","get_SPACE",0x4e4416eb,"flixel.input.keyboard.FlxKeyList.get_SPACE","flixel/input/keyboard/FlxKeyList.hx",72,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_73_get_UP,"flixel.input.keyboard.FlxKeyList","get_UP",0xe5fd0af6,"flixel.input.keyboard.FlxKeyList.get_UP","flixel/input/keyboard/FlxKeyList.hx",73,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_74_get_DOWN,"flixel.input.keyboard.FlxKeyList","get_DOWN",0x1c511dbd,"flixel.input.keyboard.FlxKeyList.get_DOWN","flixel/input/keyboard/FlxKeyList.hx",74,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_75_get_LEFT,"flixel.input.keyboard.FlxKeyList","get_LEFT",0x21932d62,"flixel.input.keyboard.FlxKeyList.get_LEFT","flixel/input/keyboard/FlxKeyList.hx",75,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_76_get_RIGHT,"flixel.input.keyboard.FlxKeyList","get_RIGHT",0xb6419601,"flixel.input.keyboard.FlxKeyList.get_RIGHT","flixel/input/keyboard/FlxKeyList.hx",76,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_77_get_TAB,"flixel.input.keyboard.FlxKeyList","get_TAB",0x576bbd3a,"flixel.input.keyboard.FlxKeyList.get_TAB","flixel/input/keyboard/FlxKeyList.hx",77,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_78_get_PRINTSCREEN,"flixel.input.keyboard.FlxKeyList","get_PRINTSCREEN",0xd1fe533e,"flixel.input.keyboard.FlxKeyList.get_PRINTSCREEN","flixel/input/keyboard/FlxKeyList.hx",78,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_79_get_F1,"flixel.input.keyboard.FlxKeyList","get_F1",0xe5fcfdc6,"flixel.input.keyboard.FlxKeyList.get_F1","flixel/input/keyboard/FlxKeyList.hx",79,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_80_get_F2,"flixel.input.keyboard.FlxKeyList","get_F2",0xe5fcfdc7,"flixel.input.keyboard.FlxKeyList.get_F2","flixel/input/keyboard/FlxKeyList.hx",80,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_81_get_F3,"flixel.input.keyboard.FlxKeyList","get_F3",0xe5fcfdc8,"flixel.input.keyboard.FlxKeyList.get_F3","flixel/input/keyboard/FlxKeyList.hx",81,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_82_get_F4,"flixel.input.keyboard.FlxKeyList","get_F4",0xe5fcfdc9,"flixel.input.keyboard.FlxKeyList.get_F4","flixel/input/keyboard/FlxKeyList.hx",82,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_83_get_F5,"flixel.input.keyboard.FlxKeyList","get_F5",0xe5fcfdca,"flixel.input.keyboard.FlxKeyList.get_F5","flixel/input/keyboard/FlxKeyList.hx",83,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_84_get_F6,"flixel.input.keyboard.FlxKeyList","get_F6",0xe5fcfdcb,"flixel.input.keyboard.FlxKeyList.get_F6","flixel/input/keyboard/FlxKeyList.hx",84,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_85_get_F7,"flixel.input.keyboard.FlxKeyList","get_F7",0xe5fcfdcc,"flixel.input.keyboard.FlxKeyList.get_F7","flixel/input/keyboard/FlxKeyList.hx",85,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_86_get_F8,"flixel.input.keyboard.FlxKeyList","get_F8",0xe5fcfdcd,"flixel.input.keyboard.FlxKeyList.get_F8","flixel/input/keyboard/FlxKeyList.hx",86,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_87_get_F9,"flixel.input.keyboard.FlxKeyList","get_F9",0xe5fcfdce,"flixel.input.keyboard.FlxKeyList.get_F9","flixel/input/keyboard/FlxKeyList.hx",87,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_88_get_F10,"flixel.input.keyboard.FlxKeyList","get_F10",0x57610faa,"flixel.input.keyboard.FlxKeyList.get_F10","flixel/input/keyboard/FlxKeyList.hx",88,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_89_get_F11,"flixel.input.keyboard.FlxKeyList","get_F11",0x57610fab,"flixel.input.keyboard.FlxKeyList.get_F11","flixel/input/keyboard/FlxKeyList.hx",89,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_90_get_F12,"flixel.input.keyboard.FlxKeyList","get_F12",0x57610fac,"flixel.input.keyboard.FlxKeyList.get_F12","flixel/input/keyboard/FlxKeyList.hx",90,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_91_get_NUMPADONE,"flixel.input.keyboard.FlxKeyList","get_NUMPADONE",0xe4b03e5e,"flixel.input.keyboard.FlxKeyList.get_NUMPADONE","flixel/input/keyboard/FlxKeyList.hx",91,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_92_get_NUMPADTWO,"flixel.input.keyboard.FlxKeyList","get_NUMPADTWO",0xe4b41184,"flixel.input.keyboard.FlxKeyList.get_NUMPADTWO","flixel/input/keyboard/FlxKeyList.hx",92,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_93_get_NUMPADTHREE,"flixel.input.keyboard.FlxKeyList","get_NUMPADTHREE",0x7d16ca56,"flixel.input.keyboard.FlxKeyList.get_NUMPADTHREE","flixel/input/keyboard/FlxKeyList.hx",93,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_94_get_NUMPADFOUR,"flixel.input.keyboard.FlxKeyList","get_NUMPADFOUR",0x2f9438ce,"flixel.input.keyboard.FlxKeyList.get_NUMPADFOUR","flixel/input/keyboard/FlxKeyList.hx",94,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_95_get_NUMPADFIVE,"flixel.input.keyboard.FlxKeyList","get_NUMPADFIVE",0x2f8fac1a,"flixel.input.keyboard.FlxKeyList.get_NUMPADFIVE","flixel/input/keyboard/FlxKeyList.hx",95,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_96_get_NUMPADSIX,"flixel.input.keyboard.FlxKeyList","get_NUMPADSIX",0xe4b3431a,"flixel.input.keyboard.FlxKeyList.get_NUMPADSIX","flixel/input/keyboard/FlxKeyList.hx",96,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_97_get_NUMPADSEVEN,"flixel.input.keyboard.FlxKeyList","get_NUMPADSEVEN",0xe7b79b05,"flixel.input.keyboard.FlxKeyList.get_NUMPADSEVEN","flixel/input/keyboard/FlxKeyList.hx",97,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_98_get_NUMPADEIGHT,"flixel.input.keyboard.FlxKeyList","get_NUMPADEIGHT",0xdab4f747,"flixel.input.keyboard.FlxKeyList.get_NUMPADEIGHT","flixel/input/keyboard/FlxKeyList.hx",98,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_99_get_NUMPADNINE,"flixel.input.keyboard.FlxKeyList","get_NUMPADNINE",0x34d95a1a,"flixel.input.keyboard.FlxKeyList.get_NUMPADNINE","flixel/input/keyboard/FlxKeyList.hx",99,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_100_get_NUMPADZERO,"flixel.input.keyboard.FlxKeyList","get_NUMPADZERO",0x3cc4e410,"flixel.input.keyboard.FlxKeyList.get_NUMPADZERO","flixel/input/keyboard/FlxKeyList.hx",100,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_101_get_NUMPADMINUS,"flixel.input.keyboard.FlxKeyList","get_NUMPADMINUS",0x75eef668,"flixel.input.keyboard.FlxKeyList.get_NUMPADMINUS","flixel/input/keyboard/FlxKeyList.hx",101,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_102_get_NUMPADPLUS,"flixel.input.keyboard.FlxKeyList","get_NUMPADPLUS",0x362e1442,"flixel.input.keyboard.FlxKeyList.get_NUMPADPLUS","flixel/input/keyboard/FlxKeyList.hx",102,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_103_get_NUMPADPERIOD,"flixel.input.keyboard.FlxKeyList","get_NUMPADPERIOD",0xa33c23e9,"flixel.input.keyboard.FlxKeyList.get_NUMPADPERIOD","flixel/input/keyboard/FlxKeyList.hx",103,0xb04d5f03)
HX_LOCAL_STACK_FRAME(_hx_pos_6dd8cea91f1ea6da_104_get_NUMPADMULTIPLY,"flixel.input.keyboard.FlxKeyList","get_NUMPADMULTIPLY",0xde92130c,"flixel.input.keyboard.FlxKeyList.get_NUMPADMULTIPLY","flixel/input/keyboard/FlxKeyList.hx",104,0xb04d5f03)
namespace flixel{
namespace input{
namespace keyboard{

void FlxKeyList_obj::__construct(int status, ::flixel::input::FlxKeyManager keyManager){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_10_new)
HXDLIN(  10)		super::__construct(status,keyManager);
            	}

Dynamic FlxKeyList_obj::__CreateEmpty() { return new FlxKeyList_obj; }

void *FlxKeyList_obj::_hx_vtable = 0;

Dynamic FlxKeyList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxKeyList_obj > _hx_result = new FlxKeyList_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool FlxKeyList_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x024abb1c) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x024abb1c;
	} else {
		return inClassId==(int)0x13e97388;
	}
}

bool FlxKeyList_obj::get_A(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_12_get_A)
HXDLIN(  12)		return this->keyManager->checkStatus((int)65,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_A,return )

bool FlxKeyList_obj::get_B(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_13_get_B)
HXDLIN(  13)		return this->keyManager->checkStatus((int)66,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_B,return )

bool FlxKeyList_obj::get_C(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_14_get_C)
HXDLIN(  14)		return this->keyManager->checkStatus((int)67,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_C,return )

bool FlxKeyList_obj::get_D(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_15_get_D)
HXDLIN(  15)		return this->keyManager->checkStatus((int)68,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_D,return )

bool FlxKeyList_obj::get_E(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_16_get_E)
HXDLIN(  16)		return this->keyManager->checkStatus((int)69,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_E,return )

bool FlxKeyList_obj::get_F(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_17_get_F)
HXDLIN(  17)		return this->keyManager->checkStatus((int)70,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F,return )

bool FlxKeyList_obj::get_G(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_18_get_G)
HXDLIN(  18)		return this->keyManager->checkStatus((int)71,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_G,return )

bool FlxKeyList_obj::get_H(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_19_get_H)
HXDLIN(  19)		return this->keyManager->checkStatus((int)72,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_H,return )

bool FlxKeyList_obj::get_I(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_20_get_I)
HXDLIN(  20)		return this->keyManager->checkStatus((int)73,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_I,return )

bool FlxKeyList_obj::get_J(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_21_get_J)
HXDLIN(  21)		return this->keyManager->checkStatus((int)74,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_J,return )

bool FlxKeyList_obj::get_K(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_22_get_K)
HXDLIN(  22)		return this->keyManager->checkStatus((int)75,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_K,return )

bool FlxKeyList_obj::get_L(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_23_get_L)
HXDLIN(  23)		return this->keyManager->checkStatus((int)76,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_L,return )

bool FlxKeyList_obj::get_M(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_24_get_M)
HXDLIN(  24)		return this->keyManager->checkStatus((int)77,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_M,return )

bool FlxKeyList_obj::get_N(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_25_get_N)
HXDLIN(  25)		return this->keyManager->checkStatus((int)78,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_N,return )

bool FlxKeyList_obj::get_O(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_26_get_O)
HXDLIN(  26)		return this->keyManager->checkStatus((int)79,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_O,return )

bool FlxKeyList_obj::get_P(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_27_get_P)
HXDLIN(  27)		return this->keyManager->checkStatus((int)80,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_P,return )

bool FlxKeyList_obj::get_Q(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_28_get_Q)
HXDLIN(  28)		return this->keyManager->checkStatus((int)81,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_Q,return )

bool FlxKeyList_obj::get_R(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_29_get_R)
HXDLIN(  29)		return this->keyManager->checkStatus((int)82,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_R,return )

bool FlxKeyList_obj::get_S(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_30_get_S)
HXDLIN(  30)		return this->keyManager->checkStatus((int)83,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_S,return )

bool FlxKeyList_obj::get_T(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_31_get_T)
HXDLIN(  31)		return this->keyManager->checkStatus((int)84,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_T,return )

bool FlxKeyList_obj::get_U(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_32_get_U)
HXDLIN(  32)		return this->keyManager->checkStatus((int)85,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_U,return )

bool FlxKeyList_obj::get_V(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_33_get_V)
HXDLIN(  33)		return this->keyManager->checkStatus((int)86,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_V,return )

bool FlxKeyList_obj::get_W(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_34_get_W)
HXDLIN(  34)		return this->keyManager->checkStatus((int)87,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_W,return )

bool FlxKeyList_obj::get_X(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_35_get_X)
HXDLIN(  35)		return this->keyManager->checkStatus((int)88,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_X,return )

bool FlxKeyList_obj::get_Y(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_36_get_Y)
HXDLIN(  36)		return this->keyManager->checkStatus((int)89,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_Y,return )

bool FlxKeyList_obj::get_Z(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_37_get_Z)
HXDLIN(  37)		return this->keyManager->checkStatus((int)90,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_Z,return )

bool FlxKeyList_obj::get_ZERO(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_38_get_ZERO)
HXDLIN(  38)		return this->keyManager->checkStatus((int)48,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_ZERO,return )

bool FlxKeyList_obj::get_ONE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_39_get_ONE)
HXDLIN(  39)		return this->keyManager->checkStatus((int)49,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_ONE,return )

bool FlxKeyList_obj::get_TWO(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_40_get_TWO)
HXDLIN(  40)		return this->keyManager->checkStatus((int)50,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_TWO,return )

bool FlxKeyList_obj::get_THREE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_41_get_THREE)
HXDLIN(  41)		return this->keyManager->checkStatus((int)51,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_THREE,return )

bool FlxKeyList_obj::get_FOUR(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_42_get_FOUR)
HXDLIN(  42)		return this->keyManager->checkStatus((int)52,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_FOUR,return )

bool FlxKeyList_obj::get_FIVE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_43_get_FIVE)
HXDLIN(  43)		return this->keyManager->checkStatus((int)53,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_FIVE,return )

bool FlxKeyList_obj::get_SIX(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_44_get_SIX)
HXDLIN(  44)		return this->keyManager->checkStatus((int)54,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_SIX,return )

bool FlxKeyList_obj::get_SEVEN(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_45_get_SEVEN)
HXDLIN(  45)		return this->keyManager->checkStatus((int)55,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_SEVEN,return )

bool FlxKeyList_obj::get_EIGHT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_46_get_EIGHT)
HXDLIN(  46)		return this->keyManager->checkStatus((int)56,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_EIGHT,return )

bool FlxKeyList_obj::get_NINE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_47_get_NINE)
HXDLIN(  47)		return this->keyManager->checkStatus((int)57,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NINE,return )

bool FlxKeyList_obj::get_PAGEUP(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_48_get_PAGEUP)
HXDLIN(  48)		return this->keyManager->checkStatus((int)33,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_PAGEUP,return )

bool FlxKeyList_obj::get_PAGEDOWN(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_49_get_PAGEDOWN)
HXDLIN(  49)		return this->keyManager->checkStatus((int)34,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_PAGEDOWN,return )

bool FlxKeyList_obj::get_HOME(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_50_get_HOME)
HXDLIN(  50)		return this->keyManager->checkStatus((int)36,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_HOME,return )

bool FlxKeyList_obj::get_END(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_51_get_END)
HXDLIN(  51)		return this->keyManager->checkStatus((int)35,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_END,return )

bool FlxKeyList_obj::get_INSERT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_52_get_INSERT)
HXDLIN(  52)		return this->keyManager->checkStatus((int)45,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_INSERT,return )

bool FlxKeyList_obj::get_ESCAPE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_53_get_ESCAPE)
HXDLIN(  53)		return this->keyManager->checkStatus((int)27,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_ESCAPE,return )

bool FlxKeyList_obj::get_MINUS(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_54_get_MINUS)
HXDLIN(  54)		return this->keyManager->checkStatus((int)189,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_MINUS,return )

bool FlxKeyList_obj::get_PLUS(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_55_get_PLUS)
HXDLIN(  55)		return this->keyManager->checkStatus((int)187,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_PLUS,return )

bool FlxKeyList_obj::get_DELETE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_56_get_DELETE)
HXDLIN(  56)		return this->keyManager->checkStatus((int)46,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_DELETE,return )

bool FlxKeyList_obj::get_BACKSPACE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_57_get_BACKSPACE)
HXDLIN(  57)		return this->keyManager->checkStatus((int)8,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_BACKSPACE,return )

bool FlxKeyList_obj::get_LBRACKET(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_58_get_LBRACKET)
HXDLIN(  58)		return this->keyManager->checkStatus((int)219,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_LBRACKET,return )

bool FlxKeyList_obj::get_RBRACKET(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_59_get_RBRACKET)
HXDLIN(  59)		return this->keyManager->checkStatus((int)221,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_RBRACKET,return )

bool FlxKeyList_obj::get_BACKSLASH(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_60_get_BACKSLASH)
HXDLIN(  60)		return this->keyManager->checkStatus((int)220,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_BACKSLASH,return )

bool FlxKeyList_obj::get_CAPSLOCK(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_61_get_CAPSLOCK)
HXDLIN(  61)		return this->keyManager->checkStatus((int)20,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_CAPSLOCK,return )

bool FlxKeyList_obj::get_SEMICOLON(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_62_get_SEMICOLON)
HXDLIN(  62)		return this->keyManager->checkStatus((int)186,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_SEMICOLON,return )

bool FlxKeyList_obj::get_QUOTE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_63_get_QUOTE)
HXDLIN(  63)		return this->keyManager->checkStatus((int)222,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_QUOTE,return )

bool FlxKeyList_obj::get_ENTER(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_64_get_ENTER)
HXDLIN(  64)		return this->keyManager->checkStatus((int)13,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_ENTER,return )

bool FlxKeyList_obj::get_SHIFT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_65_get_SHIFT)
HXDLIN(  65)		return this->keyManager->checkStatus((int)16,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_SHIFT,return )

bool FlxKeyList_obj::get_COMMA(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_66_get_COMMA)
HXDLIN(  66)		return this->keyManager->checkStatus((int)188,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_COMMA,return )

bool FlxKeyList_obj::get_PERIOD(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_67_get_PERIOD)
HXDLIN(  67)		return this->keyManager->checkStatus((int)190,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_PERIOD,return )

bool FlxKeyList_obj::get_SLASH(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_68_get_SLASH)
HXDLIN(  68)		return this->keyManager->checkStatus((int)191,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_SLASH,return )

bool FlxKeyList_obj::get_GRAVEACCENT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_69_get_GRAVEACCENT)
HXDLIN(  69)		return this->keyManager->checkStatus((int)192,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_GRAVEACCENT,return )

bool FlxKeyList_obj::get_CONTROL(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_70_get_CONTROL)
HXDLIN(  70)		return this->keyManager->checkStatus((int)17,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_CONTROL,return )

bool FlxKeyList_obj::get_ALT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_71_get_ALT)
HXDLIN(  71)		return this->keyManager->checkStatus((int)18,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_ALT,return )

bool FlxKeyList_obj::get_SPACE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_72_get_SPACE)
HXDLIN(  72)		return this->keyManager->checkStatus((int)32,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_SPACE,return )

bool FlxKeyList_obj::get_UP(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_73_get_UP)
HXDLIN(  73)		return this->keyManager->checkStatus((int)38,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_UP,return )

bool FlxKeyList_obj::get_DOWN(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_74_get_DOWN)
HXDLIN(  74)		return this->keyManager->checkStatus((int)40,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_DOWN,return )

bool FlxKeyList_obj::get_LEFT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_75_get_LEFT)
HXDLIN(  75)		return this->keyManager->checkStatus((int)37,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_LEFT,return )

bool FlxKeyList_obj::get_RIGHT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_76_get_RIGHT)
HXDLIN(  76)		return this->keyManager->checkStatus((int)39,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_RIGHT,return )

bool FlxKeyList_obj::get_TAB(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_77_get_TAB)
HXDLIN(  77)		return this->keyManager->checkStatus((int)9,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_TAB,return )

bool FlxKeyList_obj::get_PRINTSCREEN(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_78_get_PRINTSCREEN)
HXDLIN(  78)		return this->keyManager->checkStatus((int)301,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_PRINTSCREEN,return )

bool FlxKeyList_obj::get_F1(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_79_get_F1)
HXDLIN(  79)		return this->keyManager->checkStatus((int)112,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F1,return )

bool FlxKeyList_obj::get_F2(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_80_get_F2)
HXDLIN(  80)		return this->keyManager->checkStatus((int)113,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F2,return )

bool FlxKeyList_obj::get_F3(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_81_get_F3)
HXDLIN(  81)		return this->keyManager->checkStatus((int)114,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F3,return )

bool FlxKeyList_obj::get_F4(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_82_get_F4)
HXDLIN(  82)		return this->keyManager->checkStatus((int)115,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F4,return )

bool FlxKeyList_obj::get_F5(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_83_get_F5)
HXDLIN(  83)		return this->keyManager->checkStatus((int)116,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F5,return )

bool FlxKeyList_obj::get_F6(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_84_get_F6)
HXDLIN(  84)		return this->keyManager->checkStatus((int)117,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F6,return )

bool FlxKeyList_obj::get_F7(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_85_get_F7)
HXDLIN(  85)		return this->keyManager->checkStatus((int)118,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F7,return )

bool FlxKeyList_obj::get_F8(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_86_get_F8)
HXDLIN(  86)		return this->keyManager->checkStatus((int)119,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F8,return )

bool FlxKeyList_obj::get_F9(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_87_get_F9)
HXDLIN(  87)		return this->keyManager->checkStatus((int)120,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F9,return )

bool FlxKeyList_obj::get_F10(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_88_get_F10)
HXDLIN(  88)		return this->keyManager->checkStatus((int)121,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F10,return )

bool FlxKeyList_obj::get_F11(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_89_get_F11)
HXDLIN(  89)		return this->keyManager->checkStatus((int)122,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F11,return )

bool FlxKeyList_obj::get_F12(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_90_get_F12)
HXDLIN(  90)		return this->keyManager->checkStatus((int)123,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_F12,return )

bool FlxKeyList_obj::get_NUMPADONE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_91_get_NUMPADONE)
HXDLIN(  91)		return this->keyManager->checkStatus((int)97,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADONE,return )

bool FlxKeyList_obj::get_NUMPADTWO(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_92_get_NUMPADTWO)
HXDLIN(  92)		return this->keyManager->checkStatus((int)98,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADTWO,return )

bool FlxKeyList_obj::get_NUMPADTHREE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_93_get_NUMPADTHREE)
HXDLIN(  93)		return this->keyManager->checkStatus((int)99,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADTHREE,return )

bool FlxKeyList_obj::get_NUMPADFOUR(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_94_get_NUMPADFOUR)
HXDLIN(  94)		return this->keyManager->checkStatus((int)100,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADFOUR,return )

bool FlxKeyList_obj::get_NUMPADFIVE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_95_get_NUMPADFIVE)
HXDLIN(  95)		return this->keyManager->checkStatus((int)101,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADFIVE,return )

bool FlxKeyList_obj::get_NUMPADSIX(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_96_get_NUMPADSIX)
HXDLIN(  96)		return this->keyManager->checkStatus((int)102,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADSIX,return )

bool FlxKeyList_obj::get_NUMPADSEVEN(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_97_get_NUMPADSEVEN)
HXDLIN(  97)		return this->keyManager->checkStatus((int)103,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADSEVEN,return )

bool FlxKeyList_obj::get_NUMPADEIGHT(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_98_get_NUMPADEIGHT)
HXDLIN(  98)		return this->keyManager->checkStatus((int)104,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADEIGHT,return )

bool FlxKeyList_obj::get_NUMPADNINE(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_99_get_NUMPADNINE)
HXDLIN(  99)		return this->keyManager->checkStatus((int)105,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADNINE,return )

bool FlxKeyList_obj::get_NUMPADZERO(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_100_get_NUMPADZERO)
HXDLIN( 100)		return this->keyManager->checkStatus((int)96,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADZERO,return )

bool FlxKeyList_obj::get_NUMPADMINUS(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_101_get_NUMPADMINUS)
HXDLIN( 101)		return this->keyManager->checkStatus((int)109,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADMINUS,return )

bool FlxKeyList_obj::get_NUMPADPLUS(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_102_get_NUMPADPLUS)
HXDLIN( 102)		return this->keyManager->checkStatus((int)107,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADPLUS,return )

bool FlxKeyList_obj::get_NUMPADPERIOD(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_103_get_NUMPADPERIOD)
HXDLIN( 103)		return this->keyManager->checkStatus((int)110,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADPERIOD,return )

bool FlxKeyList_obj::get_NUMPADMULTIPLY(){
            	HX_STACKFRAME(&_hx_pos_6dd8cea91f1ea6da_104_get_NUMPADMULTIPLY)
HXDLIN( 104)		return this->keyManager->checkStatus((int)106,this->status);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxKeyList_obj,get_NUMPADMULTIPLY,return )


hx::ObjectPtr< FlxKeyList_obj > FlxKeyList_obj::__new(int status, ::flixel::input::FlxKeyManager keyManager) {
	hx::ObjectPtr< FlxKeyList_obj > __this = new FlxKeyList_obj();
	__this->__construct(status,keyManager);
	return __this;
}

hx::ObjectPtr< FlxKeyList_obj > FlxKeyList_obj::__alloc(hx::Ctx *_hx_ctx,int status, ::flixel::input::FlxKeyManager keyManager) {
	FlxKeyList_obj *__this = (FlxKeyList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxKeyList_obj), true, "flixel.input.keyboard.FlxKeyList"));
	*(void **)__this = FlxKeyList_obj::_hx_vtable;
	__this->__construct(status,keyManager);
	return __this;
}

FlxKeyList_obj::FlxKeyList_obj()
{
}

hx::Val FlxKeyList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"A") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_A() ); }
		if (HX_FIELD_EQ(inName,"B") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_B() ); }
		if (HX_FIELD_EQ(inName,"C") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_C() ); }
		if (HX_FIELD_EQ(inName,"D") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_D() ); }
		if (HX_FIELD_EQ(inName,"E") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_E() ); }
		if (HX_FIELD_EQ(inName,"F") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F() ); }
		if (HX_FIELD_EQ(inName,"G") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_G() ); }
		if (HX_FIELD_EQ(inName,"H") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_H() ); }
		if (HX_FIELD_EQ(inName,"I") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_I() ); }
		if (HX_FIELD_EQ(inName,"J") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_J() ); }
		if (HX_FIELD_EQ(inName,"K") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_K() ); }
		if (HX_FIELD_EQ(inName,"L") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_L() ); }
		if (HX_FIELD_EQ(inName,"M") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_M() ); }
		if (HX_FIELD_EQ(inName,"N") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_N() ); }
		if (HX_FIELD_EQ(inName,"O") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_O() ); }
		if (HX_FIELD_EQ(inName,"P") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_P() ); }
		if (HX_FIELD_EQ(inName,"Q") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_Q() ); }
		if (HX_FIELD_EQ(inName,"R") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_R() ); }
		if (HX_FIELD_EQ(inName,"S") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_S() ); }
		if (HX_FIELD_EQ(inName,"T") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_T() ); }
		if (HX_FIELD_EQ(inName,"U") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_U() ); }
		if (HX_FIELD_EQ(inName,"V") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_V() ); }
		if (HX_FIELD_EQ(inName,"W") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_W() ); }
		if (HX_FIELD_EQ(inName,"X") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_X() ); }
		if (HX_FIELD_EQ(inName,"Y") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_Y() ); }
		if (HX_FIELD_EQ(inName,"Z") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_Z() ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"UP") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_UP() ); }
		if (HX_FIELD_EQ(inName,"F1") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F1() ); }
		if (HX_FIELD_EQ(inName,"F2") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F2() ); }
		if (HX_FIELD_EQ(inName,"F3") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F3() ); }
		if (HX_FIELD_EQ(inName,"F4") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F4() ); }
		if (HX_FIELD_EQ(inName,"F5") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F5() ); }
		if (HX_FIELD_EQ(inName,"F6") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F6() ); }
		if (HX_FIELD_EQ(inName,"F7") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F7() ); }
		if (HX_FIELD_EQ(inName,"F8") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F8() ); }
		if (HX_FIELD_EQ(inName,"F9") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F9() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ONE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_ONE() ); }
		if (HX_FIELD_EQ(inName,"TWO") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_TWO() ); }
		if (HX_FIELD_EQ(inName,"SIX") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_SIX() ); }
		if (HX_FIELD_EQ(inName,"END") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_END() ); }
		if (HX_FIELD_EQ(inName,"ALT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_ALT() ); }
		if (HX_FIELD_EQ(inName,"TAB") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_TAB() ); }
		if (HX_FIELD_EQ(inName,"F10") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F10() ); }
		if (HX_FIELD_EQ(inName,"F11") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F11() ); }
		if (HX_FIELD_EQ(inName,"F12") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_F12() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"ZERO") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_ZERO() ); }
		if (HX_FIELD_EQ(inName,"FOUR") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_FOUR() ); }
		if (HX_FIELD_EQ(inName,"FIVE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_FIVE() ); }
		if (HX_FIELD_EQ(inName,"NINE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NINE() ); }
		if (HX_FIELD_EQ(inName,"HOME") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_HOME() ); }
		if (HX_FIELD_EQ(inName,"PLUS") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_PLUS() ); }
		if (HX_FIELD_EQ(inName,"DOWN") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_DOWN() ); }
		if (HX_FIELD_EQ(inName,"LEFT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_LEFT() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_A") ) { return hx::Val( get_A_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_B") ) { return hx::Val( get_B_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_C") ) { return hx::Val( get_C_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_D") ) { return hx::Val( get_D_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_E") ) { return hx::Val( get_E_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F") ) { return hx::Val( get_F_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_G") ) { return hx::Val( get_G_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_H") ) { return hx::Val( get_H_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_I") ) { return hx::Val( get_I_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_J") ) { return hx::Val( get_J_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_K") ) { return hx::Val( get_K_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_L") ) { return hx::Val( get_L_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_M") ) { return hx::Val( get_M_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_N") ) { return hx::Val( get_N_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_O") ) { return hx::Val( get_O_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_P") ) { return hx::Val( get_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_Q") ) { return hx::Val( get_Q_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_R") ) { return hx::Val( get_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_S") ) { return hx::Val( get_S_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_T") ) { return hx::Val( get_T_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_U") ) { return hx::Val( get_U_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_V") ) { return hx::Val( get_V_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_W") ) { return hx::Val( get_W_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_X") ) { return hx::Val( get_X_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_Y") ) { return hx::Val( get_Y_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_Z") ) { return hx::Val( get_Z_dyn() ); }
		if (HX_FIELD_EQ(inName,"THREE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_THREE() ); }
		if (HX_FIELD_EQ(inName,"SEVEN") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_SEVEN() ); }
		if (HX_FIELD_EQ(inName,"EIGHT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_EIGHT() ); }
		if (HX_FIELD_EQ(inName,"MINUS") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_MINUS() ); }
		if (HX_FIELD_EQ(inName,"QUOTE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_QUOTE() ); }
		if (HX_FIELD_EQ(inName,"ENTER") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_ENTER() ); }
		if (HX_FIELD_EQ(inName,"SHIFT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_SHIFT() ); }
		if (HX_FIELD_EQ(inName,"COMMA") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_COMMA() ); }
		if (HX_FIELD_EQ(inName,"SLASH") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_SLASH() ); }
		if (HX_FIELD_EQ(inName,"SPACE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_SPACE() ); }
		if (HX_FIELD_EQ(inName,"RIGHT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_RIGHT() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"PAGEUP") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_PAGEUP() ); }
		if (HX_FIELD_EQ(inName,"INSERT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_INSERT() ); }
		if (HX_FIELD_EQ(inName,"ESCAPE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_ESCAPE() ); }
		if (HX_FIELD_EQ(inName,"DELETE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_DELETE() ); }
		if (HX_FIELD_EQ(inName,"PERIOD") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_PERIOD() ); }
		if (HX_FIELD_EQ(inName,"get_UP") ) { return hx::Val( get_UP_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F1") ) { return hx::Val( get_F1_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F2") ) { return hx::Val( get_F2_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F3") ) { return hx::Val( get_F3_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F4") ) { return hx::Val( get_F4_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F5") ) { return hx::Val( get_F5_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F6") ) { return hx::Val( get_F6_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F7") ) { return hx::Val( get_F7_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F8") ) { return hx::Val( get_F8_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F9") ) { return hx::Val( get_F9_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_ONE") ) { return hx::Val( get_ONE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_TWO") ) { return hx::Val( get_TWO_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_SIX") ) { return hx::Val( get_SIX_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_END") ) { return hx::Val( get_END_dyn() ); }
		if (HX_FIELD_EQ(inName,"CONTROL") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_CONTROL() ); }
		if (HX_FIELD_EQ(inName,"get_ALT") ) { return hx::Val( get_ALT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_TAB") ) { return hx::Val( get_TAB_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F10") ) { return hx::Val( get_F10_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F11") ) { return hx::Val( get_F11_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_F12") ) { return hx::Val( get_F12_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_ZERO") ) { return hx::Val( get_ZERO_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_FOUR") ) { return hx::Val( get_FOUR_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_FIVE") ) { return hx::Val( get_FIVE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NINE") ) { return hx::Val( get_NINE_dyn() ); }
		if (HX_FIELD_EQ(inName,"PAGEDOWN") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_PAGEDOWN() ); }
		if (HX_FIELD_EQ(inName,"get_HOME") ) { return hx::Val( get_HOME_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_PLUS") ) { return hx::Val( get_PLUS_dyn() ); }
		if (HX_FIELD_EQ(inName,"LBRACKET") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_LBRACKET() ); }
		if (HX_FIELD_EQ(inName,"RBRACKET") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_RBRACKET() ); }
		if (HX_FIELD_EQ(inName,"CAPSLOCK") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_CAPSLOCK() ); }
		if (HX_FIELD_EQ(inName,"get_DOWN") ) { return hx::Val( get_DOWN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_LEFT") ) { return hx::Val( get_LEFT_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_THREE") ) { return hx::Val( get_THREE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_SEVEN") ) { return hx::Val( get_SEVEN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_EIGHT") ) { return hx::Val( get_EIGHT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_MINUS") ) { return hx::Val( get_MINUS_dyn() ); }
		if (HX_FIELD_EQ(inName,"BACKSPACE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_BACKSPACE() ); }
		if (HX_FIELD_EQ(inName,"BACKSLASH") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_BACKSLASH() ); }
		if (HX_FIELD_EQ(inName,"SEMICOLON") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_SEMICOLON() ); }
		if (HX_FIELD_EQ(inName,"get_QUOTE") ) { return hx::Val( get_QUOTE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_ENTER") ) { return hx::Val( get_ENTER_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_SHIFT") ) { return hx::Val( get_SHIFT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_COMMA") ) { return hx::Val( get_COMMA_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_SLASH") ) { return hx::Val( get_SLASH_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_SPACE") ) { return hx::Val( get_SPACE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_RIGHT") ) { return hx::Val( get_RIGHT_dyn() ); }
		if (HX_FIELD_EQ(inName,"NUMPADONE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADONE() ); }
		if (HX_FIELD_EQ(inName,"NUMPADTWO") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADTWO() ); }
		if (HX_FIELD_EQ(inName,"NUMPADSIX") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADSIX() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_PAGEUP") ) { return hx::Val( get_PAGEUP_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_INSERT") ) { return hx::Val( get_INSERT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_ESCAPE") ) { return hx::Val( get_ESCAPE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_DELETE") ) { return hx::Val( get_DELETE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_PERIOD") ) { return hx::Val( get_PERIOD_dyn() ); }
		if (HX_FIELD_EQ(inName,"NUMPADFOUR") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADFOUR() ); }
		if (HX_FIELD_EQ(inName,"NUMPADFIVE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADFIVE() ); }
		if (HX_FIELD_EQ(inName,"NUMPADNINE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADNINE() ); }
		if (HX_FIELD_EQ(inName,"NUMPADZERO") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADZERO() ); }
		if (HX_FIELD_EQ(inName,"NUMPADPLUS") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADPLUS() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"GRAVEACCENT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_GRAVEACCENT() ); }
		if (HX_FIELD_EQ(inName,"get_CONTROL") ) { return hx::Val( get_CONTROL_dyn() ); }
		if (HX_FIELD_EQ(inName,"PRINTSCREEN") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_PRINTSCREEN() ); }
		if (HX_FIELD_EQ(inName,"NUMPADTHREE") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADTHREE() ); }
		if (HX_FIELD_EQ(inName,"NUMPADSEVEN") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADSEVEN() ); }
		if (HX_FIELD_EQ(inName,"NUMPADEIGHT") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADEIGHT() ); }
		if (HX_FIELD_EQ(inName,"NUMPADMINUS") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADMINUS() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_PAGEDOWN") ) { return hx::Val( get_PAGEDOWN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_LBRACKET") ) { return hx::Val( get_LBRACKET_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_RBRACKET") ) { return hx::Val( get_RBRACKET_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_CAPSLOCK") ) { return hx::Val( get_CAPSLOCK_dyn() ); }
		if (HX_FIELD_EQ(inName,"NUMPADPERIOD") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADPERIOD() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_BACKSPACE") ) { return hx::Val( get_BACKSPACE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_BACKSLASH") ) { return hx::Val( get_BACKSLASH_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_SEMICOLON") ) { return hx::Val( get_SEMICOLON_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADONE") ) { return hx::Val( get_NUMPADONE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADTWO") ) { return hx::Val( get_NUMPADTWO_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADSIX") ) { return hx::Val( get_NUMPADSIX_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_NUMPADFOUR") ) { return hx::Val( get_NUMPADFOUR_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADFIVE") ) { return hx::Val( get_NUMPADFIVE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADNINE") ) { return hx::Val( get_NUMPADNINE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADZERO") ) { return hx::Val( get_NUMPADZERO_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADPLUS") ) { return hx::Val( get_NUMPADPLUS_dyn() ); }
		if (HX_FIELD_EQ(inName,"NUMPADMULTIPLY") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_NUMPADMULTIPLY() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_GRAVEACCENT") ) { return hx::Val( get_GRAVEACCENT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_PRINTSCREEN") ) { return hx::Val( get_PRINTSCREEN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADTHREE") ) { return hx::Val( get_NUMPADTHREE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADSEVEN") ) { return hx::Val( get_NUMPADSEVEN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADEIGHT") ) { return hx::Val( get_NUMPADEIGHT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NUMPADMINUS") ) { return hx::Val( get_NUMPADMINUS_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_NUMPADPERIOD") ) { return hx::Val( get_NUMPADPERIOD_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_NUMPADMULTIPLY") ) { return hx::Val( get_NUMPADMULTIPLY_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

void FlxKeyList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("A","\x41","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("B","\x42","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("C","\x43","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("D","\x44","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("E","\x45","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("F","\x46","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("G","\x47","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("H","\x48","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("I","\x49","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("J","\x4a","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("K","\x4b","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("L","\x4c","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("M","\x4d","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("N","\x4e","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("O","\x4f","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("P","\x50","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("Q","\x51","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("R","\x52","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("S","\x53","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("T","\x54","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("U","\x55","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("V","\x56","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("W","\x57","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("X","\x58","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("Y","\x59","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("Z","\x5a","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b"));
	outFields->push(HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00"));
	outFields->push(HX_HCSTRING("TWO","\x6c","\x09","\x40","\x00"));
	outFields->push(HX_HCSTRING("THREE","\x3e","\x8c","\x7e","\x8d"));
	outFields->push(HX_HCSTRING("FOUR","\xe6","\x2b","\x81","\x2e"));
	outFields->push(HX_HCSTRING("FIVE","\x32","\x9f","\x7c","\x2e"));
	outFields->push(HX_HCSTRING("SIX","\x02","\x3b","\x3f","\x00"));
	outFields->push(HX_HCSTRING("SEVEN","\xed","\x5c","\x1f","\xf8"));
	outFields->push(HX_HCSTRING("EIGHT","\x2f","\xb9","\x1c","\xeb"));
	outFields->push(HX_HCSTRING("NINE","\x32","\x4d","\xc6","\x33"));
	outFields->push(HX_HCSTRING("PAGEUP","\x6a","\x5e","\xbb","\x98"));
	outFields->push(HX_HCSTRING("PAGEDOWN","\x31","\x36","\xe2","\xb9"));
	outFields->push(HX_HCSTRING("HOME","\x1f","\x92","\xd3","\x2f"));
	outFields->push(HX_HCSTRING("END","\xbb","\x9f","\x34","\x00"));
	outFields->push(HX_HCSTRING("INSERT","\x39","\xef","\x5f","\x50"));
	outFields->push(HX_HCSTRING("ESCAPE","\x81","\xef","\x5c","\x8d"));
	outFields->push(HX_HCSTRING("MINUS","\x50","\xb8","\x56","\x86"));
	outFields->push(HX_HCSTRING("PLUS","\x5a","\x07","\x1b","\x35"));
	outFields->push(HX_HCSTRING("DELETE","\x2b","\x6c","\x5b","\x1d"));
	outFields->push(HX_HCSTRING("BACKSPACE","\x1f","\xf5","\x42","\xc6"));
	outFields->push(HX_HCSTRING("LBRACKET","\x3c","\x3b","\x54","\x16"));
	outFields->push(HX_HCSTRING("RBRACKET","\xf6","\xe7","\x82","\x6d"));
	outFields->push(HX_HCSTRING("BACKSLASH","\x96","\x28","\x9e","\xc3"));
	outFields->push(HX_HCSTRING("CAPSLOCK","\x8c","\x6c","\x6e","\x80"));
	outFields->push(HX_HCSTRING("SEMICOLON","\x11","\x86","\x2a","\x49"));
	outFields->push(HX_HCSTRING("QUOTE","\x1c","\x5b","\xe0","\xdb"));
	outFields->push(HX_HCSTRING("ENTER","\xf8","\xa4","\x74","\xee"));
	outFields->push(HX_HCSTRING("SHIFT","\x62","\x24","\x11","\xfa"));
	outFields->push(HX_HCSTRING("COMMA","\xb5","\x69","\x4b","\xc8"));
	outFields->push(HX_HCSTRING("PERIOD","\x01","\x0d","\x9e","\xed"));
	outFields->push(HX_HCSTRING("SLASH","\x1d","\xf8","\xaf","\xfc"));
	outFields->push(HX_HCSTRING("GRAVEACCENT","\x6f","\x63","\x9a","\x0e"));
	outFields->push(HX_HCSTRING("CONTROL","\x3d","\x3f","\x55","\x99"));
	outFields->push(HX_HCSTRING("ALT","\x09","\x95","\x31","\x00"));
	outFields->push(HX_HCSTRING("SPACE","\xa6","\xc4","\x54","\xff"));
	outFields->push(HX_HCSTRING("UP","\x5b","\x4a","\x00","\x00"));
	outFields->push(HX_HCSTRING("DOWN","\x62","\xc0","\x2e","\x2d"));
	outFields->push(HX_HCSTRING("LEFT","\x07","\xd0","\x70","\x32"));
	outFields->push(HX_HCSTRING("RIGHT","\xbc","\x43","\x52","\x67"));
	outFields->push(HX_HCSTRING("TAB","\x35","\xf6","\x3f","\x00"));
	outFields->push(HX_HCSTRING("PRINTSCREEN","\x39","\x7f","\x7c","\x10"));
	outFields->push(HX_HCSTRING("F1","\x2b","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F2","\x2c","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F3","\x2d","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F4","\x2e","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F5","\x2f","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F6","\x30","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F7","\x31","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F8","\x32","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F9","\x33","\x3d","\x00","\x00"));
	outFields->push(HX_HCSTRING("F10","\xa5","\x48","\x35","\x00"));
	outFields->push(HX_HCSTRING("F11","\xa6","\x48","\x35","\x00"));
	outFields->push(HX_HCSTRING("F12","\xa7","\x48","\x35","\x00"));
	outFields->push(HX_HCSTRING("NUMPADONE","\x99","\xe5","\x09","\x5c"));
	outFields->push(HX_HCSTRING("NUMPADTWO","\xbf","\xb8","\x0d","\x5c"));
	outFields->push(HX_HCSTRING("NUMPADTHREE","\x51","\xf6","\x94","\xbb"));
	outFields->push(HX_HCSTRING("NUMPADFOUR","\x33","\xe5","\xac","\x26"));
	outFields->push(HX_HCSTRING("NUMPADFIVE","\x7f","\x58","\xa8","\x26"));
	outFields->push(HX_HCSTRING("NUMPADSIX","\x55","\xea","\x0c","\x5c"));
	outFields->push(HX_HCSTRING("NUMPADSEVEN","\x00","\xc7","\x35","\x26"));
	outFields->push(HX_HCSTRING("NUMPADEIGHT","\x42","\x23","\x33","\x19"));
	outFields->push(HX_HCSTRING("NUMPADNINE","\x7f","\x06","\xf2","\x2b"));
	outFields->push(HX_HCSTRING("NUMPADZERO","\x75","\x90","\xdd","\x33"));
	outFields->push(HX_HCSTRING("NUMPADMINUS","\x63","\x22","\x6d","\xb4"));
	outFields->push(HX_HCSTRING("NUMPADPLUS","\xa7","\xc0","\x46","\x2d"));
	outFields->push(HX_HCSTRING("NUMPADPERIOD","\x8e","\x73","\x24","\x13"));
	outFields->push(HX_HCSTRING("NUMPADMULTIPLY","\xf1","\x55","\xe9","\x54"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FlxKeyList_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FlxKeyList_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxKeyList_obj_sMemberFields[] = {
	HX_HCSTRING("get_A","\x18","\xa5","\x60","\x91"),
	HX_HCSTRING("get_B","\x19","\xa5","\x60","\x91"),
	HX_HCSTRING("get_C","\x1a","\xa5","\x60","\x91"),
	HX_HCSTRING("get_D","\x1b","\xa5","\x60","\x91"),
	HX_HCSTRING("get_E","\x1c","\xa5","\x60","\x91"),
	HX_HCSTRING("get_F","\x1d","\xa5","\x60","\x91"),
	HX_HCSTRING("get_G","\x1e","\xa5","\x60","\x91"),
	HX_HCSTRING("get_H","\x1f","\xa5","\x60","\x91"),
	HX_HCSTRING("get_I","\x20","\xa5","\x60","\x91"),
	HX_HCSTRING("get_J","\x21","\xa5","\x60","\x91"),
	HX_HCSTRING("get_K","\x22","\xa5","\x60","\x91"),
	HX_HCSTRING("get_L","\x23","\xa5","\x60","\x91"),
	HX_HCSTRING("get_M","\x24","\xa5","\x60","\x91"),
	HX_HCSTRING("get_N","\x25","\xa5","\x60","\x91"),
	HX_HCSTRING("get_O","\x26","\xa5","\x60","\x91"),
	HX_HCSTRING("get_P","\x27","\xa5","\x60","\x91"),
	HX_HCSTRING("get_Q","\x28","\xa5","\x60","\x91"),
	HX_HCSTRING("get_R","\x29","\xa5","\x60","\x91"),
	HX_HCSTRING("get_S","\x2a","\xa5","\x60","\x91"),
	HX_HCSTRING("get_T","\x2b","\xa5","\x60","\x91"),
	HX_HCSTRING("get_U","\x2c","\xa5","\x60","\x91"),
	HX_HCSTRING("get_V","\x2d","\xa5","\x60","\x91"),
	HX_HCSTRING("get_W","\x2e","\xa5","\x60","\x91"),
	HX_HCSTRING("get_X","\x2f","\xa5","\x60","\x91"),
	HX_HCSTRING("get_Y","\x30","\xa5","\x60","\x91"),
	HX_HCSTRING("get_Z","\x31","\xa5","\x60","\x91"),
	HX_HCSTRING("get_ZERO","\xb1","\x92","\x6c","\xbb"),
	HX_HCSTRING("get_ONE","\xdd","\xfe","\xb0","\x26"),
	HX_HCSTRING("get_TWO","\x03","\xd2","\xb4","\x26"),
	HX_HCSTRING("get_THREE","\x95","\xe8","\x27","\xd1"),
	HX_HCSTRING("get_FOUR","\x6f","\xe7","\x3b","\xae"),
	HX_HCSTRING("get_FIVE","\xbb","\x5a","\x37","\xae"),
	HX_HCSTRING("get_SIX","\x99","\x03","\xb4","\x26"),
	HX_HCSTRING("get_SEVEN","\x44","\xb9","\xc8","\x3b"),
	HX_HCSTRING("get_EIGHT","\x86","\x15","\xc6","\x2e"),
	HX_HCSTRING("get_NINE","\xbb","\x08","\x81","\xb3"),
	HX_HCSTRING("get_PAGEUP","\x33","\xce","\x42","\x89"),
	HX_HCSTRING("get_PAGEDOWN","\x3a","\xea","\xfb","\x6e"),
	HX_HCSTRING("get_HOME","\xa8","\x4d","\x8e","\xaf"),
	HX_HCSTRING("get_END","\x52","\x68","\xa9","\x26"),
	HX_HCSTRING("get_INSERT","\x02","\x5f","\xe7","\x40"),
	HX_HCSTRING("get_ESCAPE","\x4a","\x5f","\xe4","\x7d"),
	HX_HCSTRING("get_MINUS","\xa7","\x14","\x00","\xca"),
	HX_HCSTRING("get_PLUS","\xe3","\xc2","\xd5","\xb4"),
	HX_HCSTRING("get_DELETE","\xf4","\xdb","\xe2","\x0d"),
	HX_HCSTRING("get_BACKSPACE","\xf6","\xc8","\xa6","\x87"),
	HX_HCSTRING("get_LBRACKET","\x45","\xef","\x6d","\xcb"),
	HX_HCSTRING("get_RBRACKET","\xff","\x9b","\x9c","\x22"),
	HX_HCSTRING("get_BACKSLASH","\x6d","\xfc","\x01","\x85"),
	HX_HCSTRING("get_CAPSLOCK","\x95","\x20","\x88","\x35"),
	HX_HCSTRING("get_SEMICOLON","\xe8","\x59","\x8e","\x0a"),
	HX_HCSTRING("get_QUOTE","\x73","\xb7","\x89","\x1f"),
	HX_HCSTRING("get_ENTER","\x4f","\x01","\x1e","\x32"),
	HX_HCSTRING("get_SHIFT","\xb9","\x80","\xba","\x3d"),
	HX_HCSTRING("get_COMMA","\x0c","\xc6","\xf4","\x0b"),
	HX_HCSTRING("get_PERIOD","\xca","\x7c","\x25","\xde"),
	HX_HCSTRING("get_SLASH","\x74","\x54","\x59","\x40"),
	HX_HCSTRING("get_GRAVEACCENT","\x06","\x1b","\x7c","\xcf"),
	HX_HCSTRING("get_CONTROL","\x54","\x9f","\x4f","\x1f"),
	HX_HCSTRING("get_ALT","\xa0","\x5d","\xa6","\x26"),
	HX_HCSTRING("get_SPACE","\xfd","\x20","\xfe","\x42"),
	HX_HCSTRING("get_UP","\xa4","\xe1","\x2f","\xa3"),
	HX_HCSTRING("get_DOWN","\xeb","\x7b","\xe9","\xac"),
	HX_HCSTRING("get_LEFT","\x90","\x8b","\x2b","\xb2"),
	HX_HCSTRING("get_RIGHT","\x13","\xa0","\xfb","\xaa"),
	HX_HCSTRING("get_TAB","\xcc","\xbe","\xb4","\x26"),
	HX_HCSTRING("get_PRINTSCREEN","\xd0","\x36","\x5e","\xd1"),
	HX_HCSTRING("get_F1","\x74","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F2","\x75","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F3","\x76","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F4","\x77","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F5","\x78","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F6","\x79","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F7","\x7a","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F8","\x7b","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F9","\x7c","\xd4","\x2f","\xa3"),
	HX_HCSTRING("get_F10","\x3c","\x11","\xaa","\x26"),
	HX_HCSTRING("get_F11","\x3d","\x11","\xaa","\x26"),
	HX_HCSTRING("get_F12","\x3e","\x11","\xaa","\x26"),
	HX_HCSTRING("get_NUMPADONE","\x70","\xb9","\x6d","\x1d"),
	HX_HCSTRING("get_NUMPADTWO","\x96","\x8c","\x71","\x1d"),
	HX_HCSTRING("get_NUMPADTHREE","\xe8","\xad","\x76","\x7c"),
	HX_HCSTRING("get_NUMPADFOUR","\x7c","\x6d","\xa2","\x9c"),
	HX_HCSTRING("get_NUMPADFIVE","\xc8","\xe0","\x9d","\x9c"),
	HX_HCSTRING("get_NUMPADSIX","\x2c","\xbe","\x70","\x1d"),
	HX_HCSTRING("get_NUMPADSEVEN","\x97","\x7e","\x17","\xe7"),
	HX_HCSTRING("get_NUMPADEIGHT","\xd9","\xda","\x14","\xda"),
	HX_HCSTRING("get_NUMPADNINE","\xc8","\x8e","\xe7","\xa1"),
	HX_HCSTRING("get_NUMPADZERO","\xbe","\x18","\xd3","\xa9"),
	HX_HCSTRING("get_NUMPADMINUS","\xfa","\xd9","\x4e","\x75"),
	HX_HCSTRING("get_NUMPADPLUS","\xf0","\x48","\x3c","\xa3"),
	HX_HCSTRING("get_NUMPADPERIOD","\x17","\x60","\xc3","\x17"),
	HX_HCSTRING("get_NUMPADMULTIPLY","\xba","\x36","\x83","\xf0"),
	::String(null()) };

static void FlxKeyList_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxKeyList_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxKeyList_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxKeyList_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxKeyList_obj::__mClass;

void FlxKeyList_obj::__register()
{
	hx::Object *dummy = new FlxKeyList_obj;
	FlxKeyList_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.input.keyboard.FlxKeyList","\xdc","\x40","\xf0","\xd7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxKeyList_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxKeyList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxKeyList_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxKeyList_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxKeyList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxKeyList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace input
} // end namespace keyboard
