// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display3D_Context3DTextureFormat
#include <openfl/display3D/Context3DTextureFormat.h>
#endif
namespace openfl{
namespace display3D{

::openfl::display3D::Context3DTextureFormat Context3DTextureFormat_obj::BGRA;

::openfl::display3D::Context3DTextureFormat Context3DTextureFormat_obj::COMPRESSED;

::openfl::display3D::Context3DTextureFormat Context3DTextureFormat_obj::COMPRESSED_ALPHA;

bool Context3DTextureFormat_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BGRA",b4,3c,d6,2b)) { outValue = Context3DTextureFormat_obj::BGRA; return true; }
	if (inName==HX_("COMPRESSED",81,c0,e3,59)) { outValue = Context3DTextureFormat_obj::COMPRESSED; return true; }
	if (inName==HX_("COMPRESSED_ALPHA",c0,bd,f0,0e)) { outValue = Context3DTextureFormat_obj::COMPRESSED_ALPHA; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Context3DTextureFormat_obj)

int Context3DTextureFormat_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BGRA",b4,3c,d6,2b)) return 0;
	if (inName==HX_("COMPRESSED",81,c0,e3,59)) return 1;
	if (inName==HX_("COMPRESSED_ALPHA",c0,bd,f0,0e)) return 2;
	return super::__FindIndex(inName);
}

int Context3DTextureFormat_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BGRA",b4,3c,d6,2b)) return 0;
	if (inName==HX_("COMPRESSED",81,c0,e3,59)) return 0;
	if (inName==HX_("COMPRESSED_ALPHA",c0,bd,f0,0e)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val Context3DTextureFormat_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BGRA",b4,3c,d6,2b)) return BGRA;
	if (inName==HX_("COMPRESSED",81,c0,e3,59)) return COMPRESSED;
	if (inName==HX_("COMPRESSED_ALPHA",c0,bd,f0,0e)) return COMPRESSED_ALPHA;
	return super::__Field(inName,inCallProp);
}

static ::String Context3DTextureFormat_obj_sStaticFields[] = {
	HX_("BGRA",b4,3c,d6,2b),
	HX_("COMPRESSED",81,c0,e3,59),
	HX_("COMPRESSED_ALPHA",c0,bd,f0,0e),
	::String(null())
};

static void Context3DTextureFormat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Context3DTextureFormat_obj::BGRA,"BGRA");
	HX_MARK_MEMBER_NAME(Context3DTextureFormat_obj::COMPRESSED,"COMPRESSED");
	HX_MARK_MEMBER_NAME(Context3DTextureFormat_obj::COMPRESSED_ALPHA,"COMPRESSED_ALPHA");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Context3DTextureFormat_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Context3DTextureFormat_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Context3DTextureFormat_obj::BGRA,"BGRA");
	HX_VISIT_MEMBER_NAME(Context3DTextureFormat_obj::COMPRESSED,"COMPRESSED");
	HX_VISIT_MEMBER_NAME(Context3DTextureFormat_obj::COMPRESSED_ALPHA,"COMPRESSED_ALPHA");
};
#endif

hx::Class Context3DTextureFormat_obj::__mClass;

Dynamic __Create_Context3DTextureFormat_obj() { return new Context3DTextureFormat_obj; }

void Context3DTextureFormat_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("openfl.display3D.Context3DTextureFormat","\x4b","\xf6","\x3b","\xb5"), hx::TCanCast< Context3DTextureFormat_obj >,Context3DTextureFormat_obj_sStaticFields,0,
	&__Create_Context3DTextureFormat_obj, &__Create,
	&super::__SGetClass(), &CreateContext3DTextureFormat_obj, Context3DTextureFormat_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , Context3DTextureFormat_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Context3DTextureFormat_obj::__GetStatic;
}

void Context3DTextureFormat_obj::__boot()
{
BGRA = hx::CreateEnum< Context3DTextureFormat_obj >(HX_HCSTRING("BGRA","\xb4","\x3c","\xd6","\x2b"),0,0);
COMPRESSED = hx::CreateEnum< Context3DTextureFormat_obj >(HX_HCSTRING("COMPRESSED","\x81","\xc0","\xe3","\x59"),1,0);
COMPRESSED_ALPHA = hx::CreateEnum< Context3DTextureFormat_obj >(HX_HCSTRING("COMPRESSED_ALPHA","\xc0","\xbd","\xf0","\x0e"),2,0);
}


} // end namespace openfl
} // end namespace display3D
