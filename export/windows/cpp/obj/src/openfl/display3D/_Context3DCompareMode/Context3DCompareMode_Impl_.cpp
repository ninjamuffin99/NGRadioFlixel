// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display3D__Context3DCompareMode_Context3DCompareMode_Impl_
#include <openfl/display3D/_Context3DCompareMode/Context3DCompareMode_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_20__new,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","_new",0xaeee8447,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_._new","openfl/display3D/Context3DCompareMode.hx",20,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_29_fromInt,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","fromInt",0xc10b427f,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.fromInt","openfl/display3D/Context3DCompareMode.hx",29,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_36_toInt,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","toInt",0x79c3588e,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.toInt","openfl/display3D/Context3DCompareMode.hx",36,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_10_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",10,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_11_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",11,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_12_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",12,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_13_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",13,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_14_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",14,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_15_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",15,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_16_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",16,0x9103941b)
HX_LOCAL_STACK_FRAME(_hx_pos_a405bb176409d231_17_boot,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","boot",0xb0eaf318,"openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_.boot","openfl/display3D/Context3DCompareMode.hx",17,0x9103941b)
namespace openfl{
namespace display3D{
namespace _Context3DCompareMode{

void Context3DCompareMode_Impl__obj::__construct() { }

Dynamic Context3DCompareMode_Impl__obj::__CreateEmpty() { return new Context3DCompareMode_Impl__obj; }

void *Context3DCompareMode_Impl__obj::_hx_vtable = 0;

Dynamic Context3DCompareMode_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Context3DCompareMode_Impl__obj > _hx_result = new Context3DCompareMode_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Context3DCompareMode_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4ebd56b0;
}

int Context3DCompareMode_Impl__obj::ALWAYS;

int Context3DCompareMode_Impl__obj::EQUAL;

int Context3DCompareMode_Impl__obj::GREATER;

int Context3DCompareMode_Impl__obj::GREATER_EQUAL;

int Context3DCompareMode_Impl__obj::LESS;

int Context3DCompareMode_Impl__obj::LESS_EQUAL;

int Context3DCompareMode_Impl__obj::NEVER;

int Context3DCompareMode_Impl__obj::NOT_EQUAL;

int Context3DCompareMode_Impl__obj::_new(int a){
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_20__new)
HXDLIN(  20)		int this1 = a;
HXDLIN(  20)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Context3DCompareMode_Impl__obj,_new,return )

int Context3DCompareMode_Impl__obj::fromInt(int s){
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_29_fromInt)
HXDLIN(  29)		int this1 = s;
HXDLIN(  29)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Context3DCompareMode_Impl__obj,fromInt,return )

int Context3DCompareMode_Impl__obj::toInt(int this1){
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_36_toInt)
HXDLIN(  36)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Context3DCompareMode_Impl__obj,toInt,return )


Context3DCompareMode_Impl__obj::Context3DCompareMode_Impl__obj()
{
}

bool Context3DCompareMode_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Context3DCompareMode_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo Context3DCompareMode_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::ALWAYS,HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::EQUAL,HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::GREATER,HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::GREATER_EQUAL,HX_HCSTRING("GREATER_EQUAL","\x2f","\xd3","\x96","\xd6")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::LESS,HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::LESS_EQUAL,HX_HCSTRING("LESS_EQUAL","\xee","\xb2","\x55","\xe4")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::NEVER,HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17")},
	{hx::fsInt,(void *) &Context3DCompareMode_Impl__obj::NOT_EQUAL,HX_HCSTRING("NOT_EQUAL","\x08","\x7c","\x82","\x7d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Context3DCompareMode_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::ALWAYS,"ALWAYS");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::GREATER,"GREATER");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::GREATER_EQUAL,"GREATER_EQUAL");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::LESS,"LESS");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::LESS_EQUAL,"LESS_EQUAL");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::NEVER,"NEVER");
	HX_MARK_MEMBER_NAME(Context3DCompareMode_Impl__obj::NOT_EQUAL,"NOT_EQUAL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Context3DCompareMode_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::ALWAYS,"ALWAYS");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::GREATER,"GREATER");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::GREATER_EQUAL,"GREATER_EQUAL");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::LESS,"LESS");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::LESS_EQUAL,"LESS_EQUAL");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::NEVER,"NEVER");
	HX_VISIT_MEMBER_NAME(Context3DCompareMode_Impl__obj::NOT_EQUAL,"NOT_EQUAL");
};

#endif

hx::Class Context3DCompareMode_Impl__obj::__mClass;

static ::String Context3DCompareMode_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9"),
	HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0"),
	HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37"),
	HX_HCSTRING("GREATER_EQUAL","\x2f","\xd3","\x96","\xd6"),
	HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32"),
	HX_HCSTRING("LESS_EQUAL","\xee","\xb2","\x55","\xe4"),
	HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17"),
	HX_HCSTRING("NOT_EQUAL","\x08","\x7c","\x82","\x7d"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("fromInt","\xa5","\xdd","\xfa","\x57"),
	HX_HCSTRING("toInt","\x34","\xbe","\x11","\x14"),
	::String(null())
};

void Context3DCompareMode_Impl__obj::__register()
{
	hx::Object *dummy = new Context3DCompareMode_Impl__obj;
	Context3DCompareMode_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_","\x48","\x5b","\xc7","\x5e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Context3DCompareMode_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Context3DCompareMode_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Context3DCompareMode_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Context3DCompareMode_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Context3DCompareMode_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Context3DCompareMode_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Context3DCompareMode_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Context3DCompareMode_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_10_boot)
HXDLIN(  10)		ALWAYS = (int)519;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_11_boot)
HXDLIN(  11)		EQUAL = (int)514;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_12_boot)
HXDLIN(  12)		GREATER = (int)516;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_13_boot)
HXDLIN(  13)		GREATER_EQUAL = (int)518;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_14_boot)
HXDLIN(  14)		LESS = (int)513;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_15_boot)
HXDLIN(  15)		LESS_EQUAL = (int)515;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_16_boot)
HXDLIN(  16)		NEVER = (int)512;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a405bb176409d231_17_boot)
HXDLIN(  17)		NOT_EQUAL = (int)517;
            	}
}

} // end namespace openfl
} // end namespace display3D
} // end namespace _Context3DCompareMode
