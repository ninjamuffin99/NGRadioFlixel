// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_Event
#include <openfl/_legacy/events/Event.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_56_new,"openfl._legacy.events.Event","new",0xfb90e03b,"openfl._legacy.events.Event.new","openfl/_legacy/events/Event.hx",56,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_72_clone,"openfl._legacy.events.Event","clone",0x58e80ff8,"openfl._legacy.events.Event.clone","openfl/_legacy/events/Event.hx",72,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_79_isDefaultPrevented,"openfl._legacy.events.Event","isDefaultPrevented",0x6e262ec5,"openfl._legacy.events.Event.isDefaultPrevented","openfl/_legacy/events/Event.hx",79,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_86_stopImmediatePropagation,"openfl._legacy.events.Event","stopImmediatePropagation",0x3e5eefc2,"openfl._legacy.events.Event.stopImmediatePropagation","openfl/_legacy/events/Event.hx",86,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_98_stopPropagation,"openfl._legacy.events.Event","stopPropagation",0xf6346e45,"openfl._legacy.events.Event.stopPropagation","openfl/_legacy/events/Event.hx",98,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_109_toString,"openfl._legacy.events.Event","toString",0x4aa366f1,"openfl._legacy.events.Event.toString","openfl/_legacy/events/Event.hx",109,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_114___formatToString,"openfl._legacy.events.Event","__formatToString",0x623f1968,"openfl._legacy.events.Event.__formatToString","openfl/_legacy/events/Event.hx",114,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_145___getIsCancelled,"openfl._legacy.events.Event","__getIsCancelled",0x715efeb6,"openfl._legacy.events.Event.__getIsCancelled","openfl/_legacy/events/Event.hx",145,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_152___getIsCancelledNow,"openfl._legacy.events.Event","__getIsCancelledNow",0x9a1c2800,"openfl._legacy.events.Event.__getIsCancelledNow","openfl/_legacy/events/Event.hx",152,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_159___setPhase,"openfl._legacy.events.Event","__setPhase",0xec9075de,"openfl._legacy.events.Event.__setPhase","openfl/_legacy/events/Event.hx",159,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_171_get_bubbles,"openfl._legacy.events.Event","get_bubbles",0x8139fe59,"openfl._legacy.events.Event.get_bubbles","openfl/_legacy/events/Event.hx",171,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_172_get_cancelable,"openfl._legacy.events.Event","get_cancelable",0xb4814062,"openfl._legacy.events.Event.get_cancelable","openfl/_legacy/events/Event.hx",172,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_173_get_currentTarget,"openfl._legacy.events.Event","get_currentTarget",0xee5478dc,"openfl._legacy.events.Event.get_currentTarget","openfl/_legacy/events/Event.hx",173,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_174_set_currentTarget,"openfl._legacy.events.Event","set_currentTarget",0x11c250e8,"openfl._legacy.events.Event.set_currentTarget","openfl/_legacy/events/Event.hx",174,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_175_get_eventPhase,"openfl._legacy.events.Event","get_eventPhase",0x2e4bd20f,"openfl._legacy.events.Event.get_eventPhase","openfl/_legacy/events/Event.hx",175,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_176_get_target,"openfl._legacy.events.Event","get_target",0xf0aed49f,"openfl._legacy.events.Event.get_target","openfl/_legacy/events/Event.hx",176,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_177_set_target,"openfl._legacy.events.Event","set_target",0xf42c7313,"openfl._legacy.events.Event.set_target","openfl/_legacy/events/Event.hx",177,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_178_get_type,"openfl._legacy.events.Event","get_type",0xdef84488,"openfl._legacy.events.Event.get_type","openfl/_legacy/events/Event.hx",178,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_12_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",12,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_13_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",13,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_14_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",14,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_15_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",15,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_16_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",16,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_17_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",17,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_18_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",18,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_19_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",19,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_20_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",20,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_21_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",21,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_22_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",22,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_23_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",23,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_24_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",24,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_25_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",25,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_26_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",26,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_27_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",27,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_28_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",28,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_29_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",29,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_30_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",30,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_31_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",31,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_32_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",32,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_33_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",33,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_34_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",34,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_35_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",35,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_36_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",36,0xcca9b1d4)
HX_LOCAL_STACK_FRAME(_hx_pos_fd3cd8e1860fbc18_37_boot,"openfl._legacy.events.Event","boot",0x1b4c53f7,"openfl._legacy.events.Event.boot","openfl/_legacy/events/Event.hx",37,0xcca9b1d4)
namespace openfl{
namespace _legacy{
namespace events{

void Event_obj::__construct(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable){
bool bubbles = __o_bubbles.Default(false);
bool cancelable = __o_cancelable.Default(false);
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_56_new)
HXLINE(  58)		this->_hx___type = type;
HXLINE(  59)		this->_hx___bubbles = bubbles;
HXLINE(  60)		this->_hx___cancelable = cancelable;
HXLINE(  61)		this->_hx___isCancelled = false;
HXLINE(  62)		this->_hx___isCancelledNow = false;
HXLINE(  63)		this->_hx___target = null();
HXLINE(  64)		this->_hx___currentTarget = null();
HXLINE(  65)		this->_hx___eventPhase = (int)2;
            	}

Dynamic Event_obj::__CreateEmpty() { return new Event_obj; }

void *Event_obj::_hx_vtable = 0;

Dynamic Event_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Event_obj > _hx_result = new Event_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Event_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0dd3a6b1;
}

 ::openfl::_legacy::events::Event Event_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_72_clone)
HXDLIN(  72)		::String _hx_tmp = this->get_type();
HXDLIN(  72)		bool _hx_tmp1 = this->get_bubbles();
HXDLIN(  72)		return  ::openfl::_legacy::events::Event_obj::__alloc( HX_CTX ,_hx_tmp,_hx_tmp1,this->get_cancelable());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,clone,return )

bool Event_obj::isDefaultPrevented(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_79_isDefaultPrevented)
HXDLIN(  79)		if (!(this->_hx___isCancelled)) {
HXDLIN(  79)			return this->_hx___isCancelledNow;
            		}
            		else {
HXDLIN(  79)			return true;
            		}
HXDLIN(  79)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,isDefaultPrevented,return )

void Event_obj::stopImmediatePropagation(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_86_stopImmediatePropagation)
HXDLIN(  86)		if (this->get_cancelable()) {
HXLINE(  88)			this->_hx___isCancelled = true;
HXLINE(  89)			this->_hx___isCancelledNow = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,stopImmediatePropagation,(void))

void Event_obj::stopPropagation(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_98_stopPropagation)
HXDLIN(  98)		if (this->get_cancelable()) {
HXLINE( 100)			this->_hx___isCancelled = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,stopPropagation,(void))

::String Event_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_109_toString)
HXDLIN( 109)		::String _hx_tmp = ((HX_("[Event type=",22,63,2e,48) + this->get_type()) + HX_(" bubbles=",16,5f,ba,28));
HXDLIN( 109)		::String _hx_tmp1 = ((_hx_tmp + ::Std_obj::string(this->get_bubbles())) + HX_(" cancelable=",89,25,e0,5d));
HXDLIN( 109)		return ((_hx_tmp1 + ::Std_obj::string(this->get_cancelable())) + HX_("]",5d,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,toString,return )

::String Event_obj::_hx___formatToString(::String className,::Array< ::String > parameters){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_114___formatToString)
HXLINE( 118)		::String output = (HX_("[",5b,00,00,00) + className);
HXLINE( 119)		 ::Dynamic arg = null();
HXLINE( 121)		{
HXLINE( 121)			int _g = (int)0;
HXDLIN( 121)			while((_g < parameters->length)){
HXLINE( 121)				::String param = parameters->__get(_g);
HXDLIN( 121)				_g = (_g + (int)1);
HXLINE( 123)				arg = ::Reflect_obj::field(hx::ObjectPtr<OBJ_>(this),param);
HXLINE( 125)				if (::Std_obj::is(arg,hx::ClassOf< ::String >())) {
HXLINE( 127)					output = (output + ((((HX_(" ",20,00,00,00) + param) + HX_("=\"",45,35,00,00)) + ::Std_obj::string(arg)) + HX_("\"",22,00,00,00)));
            				}
            				else {
HXLINE( 131)					output = (output + (((HX_(" ",20,00,00,00) + param) + HX_("=",3d,00,00,00)) + ::Std_obj::string(arg)));
            				}
            			}
            		}
HXLINE( 137)		output = (output + HX_("]",5d,00,00,00));
HXLINE( 138)		return output;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Event_obj,_hx___formatToString,return )

bool Event_obj::_hx___getIsCancelled(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_145___getIsCancelled)
HXDLIN( 145)		return this->_hx___isCancelled;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,_hx___getIsCancelled,return )

bool Event_obj::_hx___getIsCancelledNow(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_152___getIsCancelledNow)
HXDLIN( 152)		return this->_hx___isCancelledNow;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,_hx___getIsCancelledNow,return )

void Event_obj::_hx___setPhase(int value){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_159___setPhase)
HXDLIN( 159)		this->_hx___eventPhase = value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Event_obj,_hx___setPhase,(void))

bool Event_obj::get_bubbles(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_171_get_bubbles)
HXDLIN( 171)		return this->_hx___bubbles;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,get_bubbles,return )

bool Event_obj::get_cancelable(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_172_get_cancelable)
HXDLIN( 172)		return this->_hx___cancelable;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,get_cancelable,return )

 ::Dynamic Event_obj::get_currentTarget(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_173_get_currentTarget)
HXDLIN( 173)		return this->_hx___currentTarget;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,get_currentTarget,return )

 ::Dynamic Event_obj::set_currentTarget( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_174_set_currentTarget)
HXDLIN( 174)		return (this->_hx___currentTarget = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Event_obj,set_currentTarget,return )

int Event_obj::get_eventPhase(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_175_get_eventPhase)
HXDLIN( 175)		return this->_hx___eventPhase;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,get_eventPhase,return )

 ::Dynamic Event_obj::get_target(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_176_get_target)
HXDLIN( 176)		return this->_hx___target;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,get_target,return )

 ::Dynamic Event_obj::set_target( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_177_set_target)
HXDLIN( 177)		return (this->_hx___target = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Event_obj,set_target,return )

::String Event_obj::get_type(){
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_178_get_type)
HXDLIN( 178)		return this->_hx___type;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Event_obj,get_type,return )

::String Event_obj::ACTIVATE;

::String Event_obj::ADDED;

::String Event_obj::ADDED_TO_STAGE;

::String Event_obj::CANCEL;

::String Event_obj::CHANGE;

::String Event_obj::CLOSE;

::String Event_obj::COMPLETE;

::String Event_obj::CONNECT;

::String Event_obj::CONTEXT3D_CREATE;

::String Event_obj::DEACTIVATE;

::String Event_obj::ENTER_FRAME;

::String Event_obj::ID3;

::String Event_obj::INIT;

::String Event_obj::MOUSE_LEAVE;

::String Event_obj::OPEN;

::String Event_obj::REMOVED;

::String Event_obj::REMOVED_FROM_STAGE;

::String Event_obj::RENDER;

::String Event_obj::RESIZE;

::String Event_obj::SCROLL;

::String Event_obj::SELECT;

::String Event_obj::SOUND_COMPLETE;

::String Event_obj::TAB_CHILDREN_CHANGE;

::String Event_obj::TAB_ENABLED_CHANGE;

::String Event_obj::TAB_INDEX_CHANGE;

::String Event_obj::UNLOAD;


hx::ObjectPtr< Event_obj > Event_obj::__new(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable) {
	hx::ObjectPtr< Event_obj > __this = new Event_obj();
	__this->__construct(type,__o_bubbles,__o_cancelable);
	return __this;
}

hx::ObjectPtr< Event_obj > Event_obj::__alloc(hx::Ctx *_hx_ctx,::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable) {
	Event_obj *__this = (Event_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Event_obj), true, "openfl._legacy.events.Event"));
	*(void **)__this = Event_obj::_hx_vtable;
	__this->__construct(type,__o_bubbles,__o_cancelable);
	return __this;
}

Event_obj::Event_obj()
{
}

void Event_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Event);
	HX_MARK_MEMBER_NAME(_hx___bubbles,"__bubbles");
	HX_MARK_MEMBER_NAME(_hx___cancelable,"__cancelable");
	HX_MARK_MEMBER_NAME(_hx___currentTarget,"__currentTarget");
	HX_MARK_MEMBER_NAME(_hx___eventPhase,"__eventPhase");
	HX_MARK_MEMBER_NAME(_hx___isCancelled,"__isCancelled");
	HX_MARK_MEMBER_NAME(_hx___isCancelledNow,"__isCancelledNow");
	HX_MARK_MEMBER_NAME(_hx___target,"__target");
	HX_MARK_MEMBER_NAME(_hx___type,"__type");
	HX_MARK_END_CLASS();
}

void Event_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx___bubbles,"__bubbles");
	HX_VISIT_MEMBER_NAME(_hx___cancelable,"__cancelable");
	HX_VISIT_MEMBER_NAME(_hx___currentTarget,"__currentTarget");
	HX_VISIT_MEMBER_NAME(_hx___eventPhase,"__eventPhase");
	HX_VISIT_MEMBER_NAME(_hx___isCancelled,"__isCancelled");
	HX_VISIT_MEMBER_NAME(_hx___isCancelledNow,"__isCancelledNow");
	HX_VISIT_MEMBER_NAME(_hx___target,"__target");
	HX_VISIT_MEMBER_NAME(_hx___type,"__type");
}

hx::Val Event_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_type() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_target() ); }
		if (HX_FIELD_EQ(inName,"__type") ) { return hx::Val( _hx___type ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bubbles") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_bubbles() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__target") ) { return hx::Val( _hx___target ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_type") ) { return hx::Val( get_type_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"__bubbles") ) { return hx::Val( _hx___bubbles ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"cancelable") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_cancelable() ); }
		if (HX_FIELD_EQ(inName,"eventPhase") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_eventPhase() ); }
		if (HX_FIELD_EQ(inName,"__setPhase") ) { return hx::Val( _hx___setPhase_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_target") ) { return hx::Val( get_target_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_target") ) { return hx::Val( set_target_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_bubbles") ) { return hx::Val( get_bubbles_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__cancelable") ) { return hx::Val( _hx___cancelable ); }
		if (HX_FIELD_EQ(inName,"__eventPhase") ) { return hx::Val( _hx___eventPhase ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentTarget") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_currentTarget() ); }
		if (HX_FIELD_EQ(inName,"__isCancelled") ) { return hx::Val( _hx___isCancelled ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_cancelable") ) { return hx::Val( get_cancelable_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_eventPhase") ) { return hx::Val( get_eventPhase_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__currentTarget") ) { return hx::Val( _hx___currentTarget ); }
		if (HX_FIELD_EQ(inName,"stopPropagation") ) { return hx::Val( stopPropagation_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__isCancelledNow") ) { return hx::Val( _hx___isCancelledNow ); }
		if (HX_FIELD_EQ(inName,"__formatToString") ) { return hx::Val( _hx___formatToString_dyn() ); }
		if (HX_FIELD_EQ(inName,"__getIsCancelled") ) { return hx::Val( _hx___getIsCancelled_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_currentTarget") ) { return hx::Val( get_currentTarget_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_currentTarget") ) { return hx::Val( set_currentTarget_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"isDefaultPrevented") ) { return hx::Val( isDefaultPrevented_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"__getIsCancelledNow") ) { return hx::Val( _hx___getIsCancelledNow_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"stopImmediatePropagation") ) { return hx::Val( stopImmediatePropagation_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Event_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ID3") ) { outValue = ( ID3 ); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"INIT") ) { outValue = ( INIT ); return true; }
		if (HX_FIELD_EQ(inName,"OPEN") ) { outValue = ( OPEN ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"ADDED") ) { outValue = ( ADDED ); return true; }
		if (HX_FIELD_EQ(inName,"CLOSE") ) { outValue = ( CLOSE ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"CANCEL") ) { outValue = ( CANCEL ); return true; }
		if (HX_FIELD_EQ(inName,"CHANGE") ) { outValue = ( CHANGE ); return true; }
		if (HX_FIELD_EQ(inName,"RENDER") ) { outValue = ( RENDER ); return true; }
		if (HX_FIELD_EQ(inName,"RESIZE") ) { outValue = ( RESIZE ); return true; }
		if (HX_FIELD_EQ(inName,"SCROLL") ) { outValue = ( SCROLL ); return true; }
		if (HX_FIELD_EQ(inName,"SELECT") ) { outValue = ( SELECT ); return true; }
		if (HX_FIELD_EQ(inName,"UNLOAD") ) { outValue = ( UNLOAD ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"CONNECT") ) { outValue = ( CONNECT ); return true; }
		if (HX_FIELD_EQ(inName,"REMOVED") ) { outValue = ( REMOVED ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ACTIVATE") ) { outValue = ( ACTIVATE ); return true; }
		if (HX_FIELD_EQ(inName,"COMPLETE") ) { outValue = ( COMPLETE ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"DEACTIVATE") ) { outValue = ( DEACTIVATE ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ENTER_FRAME") ) { outValue = ( ENTER_FRAME ); return true; }
		if (HX_FIELD_EQ(inName,"MOUSE_LEAVE") ) { outValue = ( MOUSE_LEAVE ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ADDED_TO_STAGE") ) { outValue = ( ADDED_TO_STAGE ); return true; }
		if (HX_FIELD_EQ(inName,"SOUND_COMPLETE") ) { outValue = ( SOUND_COMPLETE ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"CONTEXT3D_CREATE") ) { outValue = ( CONTEXT3D_CREATE ); return true; }
		if (HX_FIELD_EQ(inName,"TAB_INDEX_CHANGE") ) { outValue = ( TAB_INDEX_CHANGE ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"REMOVED_FROM_STAGE") ) { outValue = ( REMOVED_FROM_STAGE ); return true; }
		if (HX_FIELD_EQ(inName,"TAB_ENABLED_CHANGE") ) { outValue = ( TAB_ENABLED_CHANGE ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"TAB_CHILDREN_CHANGE") ) { outValue = ( TAB_CHILDREN_CHANGE ); return true; }
	}
	return false;
}

hx::Val Event_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_target(inValue.Cast<  ::Dynamic >()) ); }
		if (HX_FIELD_EQ(inName,"__type") ) { _hx___type=inValue.Cast< ::String >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__target") ) { _hx___target=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"__bubbles") ) { _hx___bubbles=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__cancelable") ) { _hx___cancelable=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__eventPhase") ) { _hx___eventPhase=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentTarget") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_currentTarget(inValue.Cast<  ::Dynamic >()) ); }
		if (HX_FIELD_EQ(inName,"__isCancelled") ) { _hx___isCancelled=inValue.Cast< bool >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__currentTarget") ) { _hx___currentTarget=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__isCancelledNow") ) { _hx___isCancelledNow=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Event_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ID3") ) { ID3=ioValue.Cast< ::String >(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"INIT") ) { INIT=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"OPEN") ) { OPEN=ioValue.Cast< ::String >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"ADDED") ) { ADDED=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"CLOSE") ) { CLOSE=ioValue.Cast< ::String >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"CANCEL") ) { CANCEL=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"CHANGE") ) { CHANGE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"RENDER") ) { RENDER=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"RESIZE") ) { RESIZE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SCROLL") ) { SCROLL=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SELECT") ) { SELECT=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"UNLOAD") ) { UNLOAD=ioValue.Cast< ::String >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"CONNECT") ) { CONNECT=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"REMOVED") ) { REMOVED=ioValue.Cast< ::String >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ACTIVATE") ) { ACTIVATE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"COMPLETE") ) { COMPLETE=ioValue.Cast< ::String >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"DEACTIVATE") ) { DEACTIVATE=ioValue.Cast< ::String >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ENTER_FRAME") ) { ENTER_FRAME=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"MOUSE_LEAVE") ) { MOUSE_LEAVE=ioValue.Cast< ::String >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ADDED_TO_STAGE") ) { ADDED_TO_STAGE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SOUND_COMPLETE") ) { SOUND_COMPLETE=ioValue.Cast< ::String >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"CONTEXT3D_CREATE") ) { CONTEXT3D_CREATE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"TAB_INDEX_CHANGE") ) { TAB_INDEX_CHANGE=ioValue.Cast< ::String >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"REMOVED_FROM_STAGE") ) { REMOVED_FROM_STAGE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"TAB_ENABLED_CHANGE") ) { TAB_ENABLED_CHANGE=ioValue.Cast< ::String >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"TAB_CHILDREN_CHANGE") ) { TAB_CHILDREN_CHANGE=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void Event_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("bubbles","\x67","\xbb","\x56","\x61"));
	outFields->push(HX_HCSTRING("cancelable","\x14","\xa0","\x79","\xc4"));
	outFields->push(HX_HCSTRING("currentTarget","\x6a","\x74","\x49","\x6a"));
	outFields->push(HX_HCSTRING("eventPhase","\xc1","\x31","\x44","\x3e"));
	outFields->push(HX_HCSTRING("target","\x51","\xf3","\xec","\x86"));
	outFields->push(HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"));
	outFields->push(HX_HCSTRING("__bubbles","\x47","\x0c","\xa5","\xe2"));
	outFields->push(HX_HCSTRING("__cancelable","\x34","\x1b","\x0d","\xfd"));
	outFields->push(HX_HCSTRING("__currentTarget","\x4a","\xad","\xfb","\xf1"));
	outFields->push(HX_HCSTRING("__eventPhase","\xe1","\xac","\xd7","\x76"));
	outFields->push(HX_HCSTRING("__isCancelled","\x27","\x7e","\x2d","\x49"));
	outFields->push(HX_HCSTRING("__isCancelledNow","\x2f","\x25","\xd8","\x53"));
	outFields->push(HX_HCSTRING("__target","\x71","\x5e","\x1c","\x2f"));
	outFields->push(HX_HCSTRING("__type","\xda","\x55","\x01","\xfc"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Event_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(Event_obj,_hx___bubbles),HX_HCSTRING("__bubbles","\x47","\x0c","\xa5","\xe2")},
	{hx::fsBool,(int)offsetof(Event_obj,_hx___cancelable),HX_HCSTRING("__cancelable","\x34","\x1b","\x0d","\xfd")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Event_obj,_hx___currentTarget),HX_HCSTRING("__currentTarget","\x4a","\xad","\xfb","\xf1")},
	{hx::fsInt,(int)offsetof(Event_obj,_hx___eventPhase),HX_HCSTRING("__eventPhase","\xe1","\xac","\xd7","\x76")},
	{hx::fsBool,(int)offsetof(Event_obj,_hx___isCancelled),HX_HCSTRING("__isCancelled","\x27","\x7e","\x2d","\x49")},
	{hx::fsBool,(int)offsetof(Event_obj,_hx___isCancelledNow),HX_HCSTRING("__isCancelledNow","\x2f","\x25","\xd8","\x53")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Event_obj,_hx___target),HX_HCSTRING("__target","\x71","\x5e","\x1c","\x2f")},
	{hx::fsString,(int)offsetof(Event_obj,_hx___type),HX_HCSTRING("__type","\xda","\x55","\x01","\xfc")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Event_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &Event_obj::ACTIVATE,HX_HCSTRING("ACTIVATE","\xb3","\xab","\x31","\x3f")},
	{hx::fsString,(void *) &Event_obj::ADDED,HX_HCSTRING("ADDED","\xa0","\x0c","\x32","\x9a")},
	{hx::fsString,(void *) &Event_obj::ADDED_TO_STAGE,HX_HCSTRING("ADDED_TO_STAGE","\x59","\x58","\xdb","\x1a")},
	{hx::fsString,(void *) &Event_obj::CANCEL,HX_HCSTRING("CANCEL","\x7a","\x99","\xb6","\x6a")},
	{hx::fsString,(void *) &Event_obj::CHANGE,HX_HCSTRING("CHANGE","\x70","\x3d","\xf5","\x69")},
	{hx::fsString,(void *) &Event_obj::CLOSE,HX_HCSTRING("CLOSE","\x98","\x4f","\x51","\xc6")},
	{hx::fsString,(void *) &Event_obj::COMPLETE,HX_HCSTRING("COMPLETE","\xb9","\x90","\x4d","\xd9")},
	{hx::fsString,(void *) &Event_obj::CONNECT,HX_HCSTRING("CONNECT","\xca","\x0f","\x54","\x95")},
	{hx::fsString,(void *) &Event_obj::CONTEXT3D_CREATE,HX_HCSTRING("CONTEXT3D_CREATE","\x5b","\xc4","\x3d","\x41")},
	{hx::fsString,(void *) &Event_obj::DEACTIVATE,HX_HCSTRING("DEACTIVATE","\x34","\xd0","\x0a","\x2e")},
	{hx::fsString,(void *) &Event_obj::ENTER_FRAME,HX_HCSTRING("ENTER_FRAME","\x46","\xa6","\xab","\xc6")},
	{hx::fsString,(void *) &Event_obj::ID3,HX_HCSTRING("ID3","\xf8","\x9f","\x37","\x00")},
	{hx::fsString,(void *) &Event_obj::INIT,HX_HCSTRING("INIT","\x10","\x03","\x7c","\x30")},
	{hx::fsString,(void *) &Event_obj::MOUSE_LEAVE,HX_HCSTRING("MOUSE_LEAVE","\xdd","\xd3","\xd5","\xd0")},
	{hx::fsString,(void *) &Event_obj::OPEN,HX_HCSTRING("OPEN","\xca","\xcb","\x74","\x34")},
	{hx::fsString,(void *) &Event_obj::REMOVED,HX_HCSTRING("REMOVED","\x80","\xf3","\xd3","\x72")},
	{hx::fsString,(void *) &Event_obj::REMOVED_FROM_STAGE,HX_HCSTRING("REMOVED_FROM_STAGE","\x68","\xcc","\x72","\xdb")},
	{hx::fsString,(void *) &Event_obj::RENDER,HX_HCSTRING("RENDER","\x56","\x17","\xac","\xb7")},
	{hx::fsString,(void *) &Event_obj::RESIZE,HX_HCSTRING("RESIZE","\xf4","\x05","\xfe","\xba")},
	{hx::fsString,(void *) &Event_obj::SCROLL,HX_HCSTRING("SCROLL","\x0d","\x84","\xe7","\xf9")},
	{hx::fsString,(void *) &Event_obj::SELECT,HX_HCSTRING("SELECT","\xfc","\xc6","\xb5","\x1c")},
	{hx::fsString,(void *) &Event_obj::SOUND_COMPLETE,HX_HCSTRING("SOUND_COMPLETE","\x89","\x35","\x98","\xf1")},
	{hx::fsString,(void *) &Event_obj::TAB_CHILDREN_CHANGE,HX_HCSTRING("TAB_CHILDREN_CHANGE","\x66","\x8e","\x83","\x1c")},
	{hx::fsString,(void *) &Event_obj::TAB_ENABLED_CHANGE,HX_HCSTRING("TAB_ENABLED_CHANGE","\xd8","\x4a","\xcd","\x8b")},
	{hx::fsString,(void *) &Event_obj::TAB_INDEX_CHANGE,HX_HCSTRING("TAB_INDEX_CHANGE","\xe7","\xbd","\xc6","\xb6")},
	{hx::fsString,(void *) &Event_obj::UNLOAD,HX_HCSTRING("UNLOAD","\xff","\x4c","\x0f","\x18")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Event_obj_sMemberFields[] = {
	HX_HCSTRING("__bubbles","\x47","\x0c","\xa5","\xe2"),
	HX_HCSTRING("__cancelable","\x34","\x1b","\x0d","\xfd"),
	HX_HCSTRING("__currentTarget","\x4a","\xad","\xfb","\xf1"),
	HX_HCSTRING("__eventPhase","\xe1","\xac","\xd7","\x76"),
	HX_HCSTRING("__isCancelled","\x27","\x7e","\x2d","\x49"),
	HX_HCSTRING("__isCancelledNow","\x2f","\x25","\xd8","\x53"),
	HX_HCSTRING("__target","\x71","\x5e","\x1c","\x2f"),
	HX_HCSTRING("__type","\xda","\x55","\x01","\xfc"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("isDefaultPrevented","\x40","\x30","\x27","\x04"),
	HX_HCSTRING("stopImmediatePropagation","\x7d","\xbf","\x66","\x5b"),
	HX_HCSTRING("stopPropagation","\xea","\x81","\x71","\xa0"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("__formatToString","\x23","\x36","\x73","\xad"),
	HX_HCSTRING("__getIsCancelled","\x71","\x1b","\x93","\xbc"),
	HX_HCSTRING("__getIsCancelledNow","\x25","\x72","\xfc","\x44"),
	HX_HCSTRING("__setPhase","\x59","\x04","\x56","\x73"),
	HX_HCSTRING("get_bubbles","\x7e","\x1b","\x51","\xe7"),
	HX_HCSTRING("get_cancelable","\x5d","\x28","\x6f","\x3a"),
	HX_HCSTRING("get_currentTarget","\xc1","\x7f","\xb9","\x70"),
	HX_HCSTRING("set_currentTarget","\xcd","\x57","\x27","\x94"),
	HX_HCSTRING("get_eventPhase","\x0a","\xba","\x39","\xb4"),
	HX_HCSTRING("get_target","\x1a","\x63","\x74","\x77"),
	HX_HCSTRING("set_target","\x8e","\x01","\xf2","\x7a"),
	HX_HCSTRING("get_type","\x43","\xae","\xc3","\xcc"),
	::String(null()) };

static void Event_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Event_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Event_obj::ACTIVATE,"ACTIVATE");
	HX_MARK_MEMBER_NAME(Event_obj::ADDED,"ADDED");
	HX_MARK_MEMBER_NAME(Event_obj::ADDED_TO_STAGE,"ADDED_TO_STAGE");
	HX_MARK_MEMBER_NAME(Event_obj::CANCEL,"CANCEL");
	HX_MARK_MEMBER_NAME(Event_obj::CHANGE,"CHANGE");
	HX_MARK_MEMBER_NAME(Event_obj::CLOSE,"CLOSE");
	HX_MARK_MEMBER_NAME(Event_obj::COMPLETE,"COMPLETE");
	HX_MARK_MEMBER_NAME(Event_obj::CONNECT,"CONNECT");
	HX_MARK_MEMBER_NAME(Event_obj::CONTEXT3D_CREATE,"CONTEXT3D_CREATE");
	HX_MARK_MEMBER_NAME(Event_obj::DEACTIVATE,"DEACTIVATE");
	HX_MARK_MEMBER_NAME(Event_obj::ENTER_FRAME,"ENTER_FRAME");
	HX_MARK_MEMBER_NAME(Event_obj::ID3,"ID3");
	HX_MARK_MEMBER_NAME(Event_obj::INIT,"INIT");
	HX_MARK_MEMBER_NAME(Event_obj::MOUSE_LEAVE,"MOUSE_LEAVE");
	HX_MARK_MEMBER_NAME(Event_obj::OPEN,"OPEN");
	HX_MARK_MEMBER_NAME(Event_obj::REMOVED,"REMOVED");
	HX_MARK_MEMBER_NAME(Event_obj::REMOVED_FROM_STAGE,"REMOVED_FROM_STAGE");
	HX_MARK_MEMBER_NAME(Event_obj::RENDER,"RENDER");
	HX_MARK_MEMBER_NAME(Event_obj::RESIZE,"RESIZE");
	HX_MARK_MEMBER_NAME(Event_obj::SCROLL,"SCROLL");
	HX_MARK_MEMBER_NAME(Event_obj::SELECT,"SELECT");
	HX_MARK_MEMBER_NAME(Event_obj::SOUND_COMPLETE,"SOUND_COMPLETE");
	HX_MARK_MEMBER_NAME(Event_obj::TAB_CHILDREN_CHANGE,"TAB_CHILDREN_CHANGE");
	HX_MARK_MEMBER_NAME(Event_obj::TAB_ENABLED_CHANGE,"TAB_ENABLED_CHANGE");
	HX_MARK_MEMBER_NAME(Event_obj::TAB_INDEX_CHANGE,"TAB_INDEX_CHANGE");
	HX_MARK_MEMBER_NAME(Event_obj::UNLOAD,"UNLOAD");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Event_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Event_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Event_obj::ACTIVATE,"ACTIVATE");
	HX_VISIT_MEMBER_NAME(Event_obj::ADDED,"ADDED");
	HX_VISIT_MEMBER_NAME(Event_obj::ADDED_TO_STAGE,"ADDED_TO_STAGE");
	HX_VISIT_MEMBER_NAME(Event_obj::CANCEL,"CANCEL");
	HX_VISIT_MEMBER_NAME(Event_obj::CHANGE,"CHANGE");
	HX_VISIT_MEMBER_NAME(Event_obj::CLOSE,"CLOSE");
	HX_VISIT_MEMBER_NAME(Event_obj::COMPLETE,"COMPLETE");
	HX_VISIT_MEMBER_NAME(Event_obj::CONNECT,"CONNECT");
	HX_VISIT_MEMBER_NAME(Event_obj::CONTEXT3D_CREATE,"CONTEXT3D_CREATE");
	HX_VISIT_MEMBER_NAME(Event_obj::DEACTIVATE,"DEACTIVATE");
	HX_VISIT_MEMBER_NAME(Event_obj::ENTER_FRAME,"ENTER_FRAME");
	HX_VISIT_MEMBER_NAME(Event_obj::ID3,"ID3");
	HX_VISIT_MEMBER_NAME(Event_obj::INIT,"INIT");
	HX_VISIT_MEMBER_NAME(Event_obj::MOUSE_LEAVE,"MOUSE_LEAVE");
	HX_VISIT_MEMBER_NAME(Event_obj::OPEN,"OPEN");
	HX_VISIT_MEMBER_NAME(Event_obj::REMOVED,"REMOVED");
	HX_VISIT_MEMBER_NAME(Event_obj::REMOVED_FROM_STAGE,"REMOVED_FROM_STAGE");
	HX_VISIT_MEMBER_NAME(Event_obj::RENDER,"RENDER");
	HX_VISIT_MEMBER_NAME(Event_obj::RESIZE,"RESIZE");
	HX_VISIT_MEMBER_NAME(Event_obj::SCROLL,"SCROLL");
	HX_VISIT_MEMBER_NAME(Event_obj::SELECT,"SELECT");
	HX_VISIT_MEMBER_NAME(Event_obj::SOUND_COMPLETE,"SOUND_COMPLETE");
	HX_VISIT_MEMBER_NAME(Event_obj::TAB_CHILDREN_CHANGE,"TAB_CHILDREN_CHANGE");
	HX_VISIT_MEMBER_NAME(Event_obj::TAB_ENABLED_CHANGE,"TAB_ENABLED_CHANGE");
	HX_VISIT_MEMBER_NAME(Event_obj::TAB_INDEX_CHANGE,"TAB_INDEX_CHANGE");
	HX_VISIT_MEMBER_NAME(Event_obj::UNLOAD,"UNLOAD");
};

#endif

hx::Class Event_obj::__mClass;

static ::String Event_obj_sStaticFields[] = {
	HX_HCSTRING("ACTIVATE","\xb3","\xab","\x31","\x3f"),
	HX_HCSTRING("ADDED","\xa0","\x0c","\x32","\x9a"),
	HX_HCSTRING("ADDED_TO_STAGE","\x59","\x58","\xdb","\x1a"),
	HX_HCSTRING("CANCEL","\x7a","\x99","\xb6","\x6a"),
	HX_HCSTRING("CHANGE","\x70","\x3d","\xf5","\x69"),
	HX_HCSTRING("CLOSE","\x98","\x4f","\x51","\xc6"),
	HX_HCSTRING("COMPLETE","\xb9","\x90","\x4d","\xd9"),
	HX_HCSTRING("CONNECT","\xca","\x0f","\x54","\x95"),
	HX_HCSTRING("CONTEXT3D_CREATE","\x5b","\xc4","\x3d","\x41"),
	HX_HCSTRING("DEACTIVATE","\x34","\xd0","\x0a","\x2e"),
	HX_HCSTRING("ENTER_FRAME","\x46","\xa6","\xab","\xc6"),
	HX_HCSTRING("ID3","\xf8","\x9f","\x37","\x00"),
	HX_HCSTRING("INIT","\x10","\x03","\x7c","\x30"),
	HX_HCSTRING("MOUSE_LEAVE","\xdd","\xd3","\xd5","\xd0"),
	HX_HCSTRING("OPEN","\xca","\xcb","\x74","\x34"),
	HX_HCSTRING("REMOVED","\x80","\xf3","\xd3","\x72"),
	HX_HCSTRING("REMOVED_FROM_STAGE","\x68","\xcc","\x72","\xdb"),
	HX_HCSTRING("RENDER","\x56","\x17","\xac","\xb7"),
	HX_HCSTRING("RESIZE","\xf4","\x05","\xfe","\xba"),
	HX_HCSTRING("SCROLL","\x0d","\x84","\xe7","\xf9"),
	HX_HCSTRING("SELECT","\xfc","\xc6","\xb5","\x1c"),
	HX_HCSTRING("SOUND_COMPLETE","\x89","\x35","\x98","\xf1"),
	HX_HCSTRING("TAB_CHILDREN_CHANGE","\x66","\x8e","\x83","\x1c"),
	HX_HCSTRING("TAB_ENABLED_CHANGE","\xd8","\x4a","\xcd","\x8b"),
	HX_HCSTRING("TAB_INDEX_CHANGE","\xe7","\xbd","\xc6","\xb6"),
	HX_HCSTRING("UNLOAD","\xff","\x4c","\x0f","\x18"),
	::String(null())
};

void Event_obj::__register()
{
	hx::Object *dummy = new Event_obj;
	Event_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.events.Event","\xc9","\xa6","\x7f","\x71");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Event_obj::__GetStatic;
	__mClass->mSetStaticField = &Event_obj::__SetStatic;
	__mClass->mMarkFunc = Event_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Event_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Event_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Event_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Event_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Event_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Event_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Event_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_12_boot)
HXDLIN(  12)		ACTIVATE = HX_("activate",b3,1b,ac,e5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_13_boot)
HXDLIN(  13)		ADDED = HX_("added",c0,d4,43,1c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_14_boot)
HXDLIN(  14)		ADDED_TO_STAGE = HX_("addedToStage",63,22,55,0c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_15_boot)
HXDLIN(  15)		CANCEL = HX_("cancel",7a,ed,33,b8);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_16_boot)
HXDLIN(  16)		CHANGE = HX_("change",70,91,72,b7);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_17_boot)
HXDLIN(  17)		CLOSE = HX_("close",b8,17,63,48);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_18_boot)
HXDLIN(  18)		COMPLETE = HX_("complete",b9,00,c8,7f);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_19_boot)
HXDLIN(  19)		CONNECT = HX_("connect",ea,3b,80,15);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_20_boot)
HXDLIN(  20)		CONTEXT3D_CREATE = HX_("context3DCreate",7c,bf,59,7b);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_21_boot)
HXDLIN(  21)		DEACTIVATE = HX_("deactivate",34,5c,01,3c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_22_boot)
HXDLIN(  22)		ENTER_FRAME = HX_("enterFrame",f5,03,50,02);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_23_boot)
HXDLIN(  23)		ID3 = HX_("id3",f8,03,50,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_24_boot)
HXDLIN(  24)		INIT = HX_("init",10,3b,bb,45);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_25_boot)
HXDLIN(  25)		MOUSE_LEAVE = HX_("mouseLeave",92,28,20,90);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_26_boot)
HXDLIN(  26)		OPEN = HX_("open",ca,03,b4,49);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_27_boot)
HXDLIN(  27)		REMOVED = HX_("removed",a0,1f,00,f3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_28_boot)
HXDLIN(  28)		REMOVED_FROM_STAGE = HX_("removedFromStage",34,21,76,ba);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_29_boot)
HXDLIN(  29)		RENDER = HX_("render",56,6b,29,05);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_30_boot)
HXDLIN(  30)		RESIZE = HX_("resize",f4,59,7b,08);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_31_boot)
HXDLIN(  31)		SCROLL = HX_("scroll",0d,d8,64,47);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_32_boot)
HXDLIN(  32)		SELECT = HX_("select",fc,1a,33,6a);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_33_boot)
HXDLIN(  33)		SOUND_COMPLETE = HX_("soundComplete",a8,30,e6,1c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_34_boot)
HXDLIN(  34)		TAB_CHILDREN_CHANGE = HX_("tabChildrenChange",44,91,b5,de);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_35_boot)
HXDLIN(  35)		TAB_ENABLED_CHANGE = HX_("tabEnabledChange",3c,45,98,72);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_36_boot)
HXDLIN(  36)		TAB_INDEX_CHANGE = HX_("tabIndexChange",cd,1d,78,90);
            	}
{
            	HX_STACKFRAME(&_hx_pos_fd3cd8e1860fbc18_37_boot)
HXDLIN(  37)		UNLOAD = HX_("unload",ff,a0,8c,65);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace events
