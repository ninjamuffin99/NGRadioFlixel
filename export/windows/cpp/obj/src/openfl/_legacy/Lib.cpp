// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_cpp_Lib
#include <cpp/Lib.h>
#endif
#ifndef INCLUDED_haxe_CallStack
#include <haxe/CallStack.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_BitmapData
#include <openfl/_legacy/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_LoaderInfo
#include <openfl/_legacy/display/LoaderInfo.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_ManagedStage
#include <openfl/_legacy/display/ManagedStage.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_MovieClip
#include <openfl/_legacy/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Stage
#include <openfl/_legacy/display/Stage.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_Event
#include <openfl/_legacy/events/Event.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_net_URLLoader
#include <openfl/_legacy/net/URLLoader.h>
#endif
#ifndef INCLUDED_openfl__legacy_net_URLRequest
#include <openfl/_legacy/net/URLRequest.h>
#endif
#ifndef INCLUDED_openfl_events_ErrorEvent
#include <openfl/events/ErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TextEvent
#include <openfl/events/TextEvent.h>
#endif
#ifndef INCLUDED_openfl_events_UncaughtErrorEvent
#include <openfl/events/UncaughtErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_UncaughtErrorEvents
#include <openfl/events/UncaughtErrorEvents.h>
#endif
#ifndef INCLUDED_sys_io_Process
#include <sys/io/Process.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_62_as,"openfl._legacy.Lib","as",0xb50de57f,"openfl._legacy.Lib.as","openfl/_legacy/Lib.hx",62,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_69_attach,"openfl._legacy.Lib","attach",0x82a556d2,"openfl._legacy.Lib.attach","openfl/_legacy/Lib.hx",69,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_74_close,"openfl._legacy.Lib","close",0x05629d4b,"openfl._legacy.Lib.close","openfl/_legacy/Lib.hx",74,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_106_create,"openfl._legacy.Lib","create",0x1ea4c209,"openfl._legacy.Lib.create","openfl/_legacy/Lib.hx",106,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_83_create,"openfl._legacy.Lib","create",0x1ea4c209,"openfl._legacy.Lib.create","openfl/_legacy/Lib.hx",83,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_135_createManagedStage,"openfl._legacy.Lib","createManagedStage",0x7e03c788,"openfl._legacy.Lib.createManagedStage","openfl/_legacy/Lib.hx",135,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_162_findHaxeLib,"openfl._legacy.Lib","findHaxeLib",0x9617a559,"openfl._legacy.Lib.findHaxeLib","openfl/_legacy/Lib.hx",162,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_203_load,"openfl._legacy.Lib","load",0x87b427f3,"openfl._legacy.Lib.load","openfl/_legacy/Lib.hx",203,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_294_loaderTrace,"openfl._legacy.Lib","loaderTrace",0x37050745,"openfl._legacy.Lib.loaderTrace","openfl/_legacy/Lib.hx",294,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_314_notImplemented,"openfl._legacy.Lib","notImplemented",0x6d44ea7c,"openfl._legacy.Lib.notImplemented","openfl/_legacy/Lib.hx",314,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_325_rethrow,"openfl._legacy.Lib","rethrow",0x964500e6,"openfl._legacy.Lib.rethrow","openfl/_legacy/Lib.hx",325,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_373_setUncaughtExceptionHandler,"openfl._legacy.Lib","setUncaughtExceptionHandler",0x766b3585,"openfl._legacy.Lib.setUncaughtExceptionHandler","openfl/_legacy/Lib.hx",373,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_378_sysName,"openfl._legacy.Lib","sysName",0x1a5aa64b,"openfl._legacy.Lib.sysName","openfl/_legacy/Lib.hx",378,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_390_tryLoad,"openfl._legacy.Lib","tryLoad",0xea903954,"openfl._legacy.Lib.tryLoad","openfl/_legacy/Lib.hx",390,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_449_exit,"openfl._legacy.Lib","exit",0x831a84eb,"openfl._legacy.Lib.exit","openfl/_legacy/Lib.hx",449,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_470_forceClose,"openfl._legacy.Lib","forceClose",0xe34c675a,"openfl._legacy.Lib.forceClose","openfl/_legacy/Lib.hx",470,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_482_getTimer,"openfl._legacy.Lib","getTimer",0xe6f8c79c,"openfl._legacy.Lib.getTimer","openfl/_legacy/Lib.hx",482,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_489_getURL,"openfl._legacy.Lib","getURL",0x45bda386,"openfl._legacy.Lib.getURL","openfl/_legacy/Lib.hx",489,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_496_pause,"openfl._legacy.Lib","pause",0x7a575c89,"openfl._legacy.Lib.pause","openfl/_legacy/Lib.hx",496,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_506_postUICallback,"openfl._legacy.Lib","postUICallback",0xf68580a6,"openfl._legacy.Lib.postUICallback","openfl/_legacy/Lib.hx",506,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_514_resume,"openfl._legacy.Lib","resume",0xab19c4ba,"openfl._legacy.Lib.resume","openfl/_legacy/Lib.hx",514,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_519_setIcon,"openfl._legacy.Lib","setIcon",0xab51788e,"openfl._legacy.Lib.setIcon","openfl/_legacy/Lib.hx",519,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_527_setPackage,"openfl._legacy.Lib","setPackage",0x98a4b591,"openfl._legacy.Lib.setPackage","openfl/_legacy/Lib.hx",527,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_541___setCurrentStage,"openfl._legacy.Lib","__setCurrentStage",0x3b62697a,"openfl._legacy.Lib.__setCurrentStage","openfl/_legacy/Lib.hx",541,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_548_trace,"openfl._legacy.Lib","trace",0xd31f1418,"openfl._legacy.Lib.trace","openfl/_legacy/Lib.hx",548,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_560_get_current,"openfl._legacy.Lib","get_current",0xdfa27223,"openfl._legacy.Lib.get_current","openfl/_legacy/Lib.hx",560,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_579_get_stage,"openfl._legacy.Lib","get_stage",0x5f421228,"openfl._legacy.Lib.get_stage","openfl/_legacy/Lib.hx",579,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_24_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",24,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_25_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",25,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_26_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",26,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_27_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",27,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_28_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",28,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_29_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",29,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_30_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",30,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_31_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",31,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_32_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",32,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_33_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",33,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_34_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",34,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_46_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",46,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_50_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",50,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_51_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",51,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_53_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",53,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_54_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",54,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_55_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",55,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_56_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",56,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_57_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",57,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_602_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",602,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_603_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",603,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_604_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",604,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_605_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",605,0x739f021f)
HX_LOCAL_STACK_FRAME(_hx_pos_773a6020cc03a680_606_boot,"openfl._legacy.Lib","boot",0x811811ff,"openfl._legacy.Lib.boot","openfl/_legacy/Lib.hx",606,0x739f021f)
namespace openfl{
namespace _legacy{

void Lib_obj::__construct() { }

Dynamic Lib_obj::__CreateEmpty() { return new Lib_obj; }

void *Lib_obj::_hx_vtable = 0;

Dynamic Lib_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Lib_obj > _hx_result = new Lib_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Lib_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x700f29cd;
}

int Lib_obj::FULLSCREEN;

int Lib_obj::BORDERLESS;

int Lib_obj::RESIZABLE;

int Lib_obj::HARDWARE;

int Lib_obj::VSYNC;

int Lib_obj::HW_AA;

int Lib_obj::HW_AA_HIRES;

int Lib_obj::ALLOW_SHADERS;

int Lib_obj::REQUIRE_SHADERS;

int Lib_obj::DEPTH_BUFFER;

int Lib_obj::STENCIL_BUFFER;

::String Lib_obj::company;

 ::openfl::_legacy::display::MovieClip Lib_obj::current;

::String Lib_obj::file;

int Lib_obj::initHeight;

int Lib_obj::initWidth;

::String Lib_obj::packageName;

bool Lib_obj::silentRecreate;

 ::openfl::_legacy::display::Stage Lib_obj::stage;

::String Lib_obj::version;

 ::openfl::_legacy::display::MovieClip Lib_obj::_hx___current;

bool Lib_obj::_hx___isInit;

bool Lib_obj::_hx___loadedNekoAPI;

 ::Dynamic Lib_obj::_hx___mainFrame;

 ::haxe::ds::StringMap Lib_obj::_hx___moduleNames;

 ::haxe::ds::StringMap Lib_obj::_hx___sentWarnings;

 ::openfl::_legacy::display::Stage Lib_obj::_hx___stage;

 ::Dynamic Lib_obj::_hx___uncaughtExceptionHandler;

 ::Dynamic Lib_obj::as( ::Dynamic v,hx::Class c){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_62_as)
HXDLIN(  62)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Lib_obj,as,return )

 ::openfl::_legacy::display::MovieClip Lib_obj::attach(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_69_attach)
HXDLIN(  69)		return  ::openfl::_legacy::display::MovieClip_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,attach,return )

void Lib_obj::close(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_74_close)
HXLINE(  76)		::openfl::_legacy::display::Stage_obj::_hx___exiting = true;
HXLINE(  77)		 ::Dynamic close = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_close",ac,28,f4,fb),(int)0);
HXLINE(  78)		close();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,close,(void))

void Lib_obj::create( ::Dynamic onLoaded,int width,int height,hx::Null< Float >  __o_frameRate,hx::Null< int >  __o_color,hx::Null< int >  __o_flags,::String __o_title, ::openfl::_legacy::display::BitmapData icon,hx::Class stageClass){
            		HX_BEGIN_LOCAL_FUNC_S6(hx::LocalFunc,_hx_Closure_0,int,color, ::Dynamic,onLoaded,int,height,hx::Class,stageClass,Float,frameRate,int,width) HXARGC(1)
            		void _hx_run( ::Dynamic frameHandle){
            			HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_106_create)
HXLINE( 106)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 108)				::openfl::_legacy::Lib_obj::_hx___mainFrame = frameHandle;
HXLINE( 109)				 ::Dynamic stage_handle = ::openfl::_legacy::Lib_obj::lime_get_frame_stage(::openfl::_legacy::Lib_obj::_hx___mainFrame);
HXLINE( 111)				 ::openfl::_legacy::display::Stage _hx_tmp1;
HXDLIN( 111)				if (hx::IsNull( stageClass )) {
HXLINE( 111)					_hx_tmp1 =  ::openfl::_legacy::display::Stage_obj::__alloc( HX_CTX ,stage_handle,width,height);
            				}
            				else {
HXLINE( 111)					_hx_tmp1 = ( ( ::openfl::_legacy::display::Stage)(::Type_obj::createInstance(stageClass,::cpp::VirtualArray_obj::__new(3)->init(0,stage_handle)->init(1,width)->init(2,height))) );
            				}
HXDLIN( 111)				::openfl::_legacy::Lib_obj::_hx___stage = _hx_tmp1;
HXLINE( 112)				::openfl::_legacy::Lib_obj::_hx___stage->set_frameRate(frameRate);
HXLINE( 113)				::openfl::_legacy::Lib_obj::_hx___stage->set_opaqueBackground(color);
HXLINE( 114)				::openfl::_legacy::Lib_obj::_hx___stage->onQuit = ::openfl::_legacy::Lib_obj::close_dyn();
HXLINE( 116)				if (hx::IsNotNull( ::openfl::_legacy::Lib_obj::_hx___current )) {
HXLINE( 118)					::openfl::_legacy::Lib_obj::_hx___stage->addChild(::openfl::_legacy::Lib_obj::_hx___current);
            				}
HXLINE( 122)				onLoaded();
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic error = _hx_e;
HXLINE( 126)					::openfl::_legacy::Lib_obj::rethrow(error);
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

Float frameRate = __o_frameRate.Default(((Float)60.0));
int color = __o_color.Default(16777215);
int flags = __o_flags.Default(15);
::String title = __o_title.Default(HX_HCSTRING("OpenFL","\xb0","\xbb","\x28","\x56"));
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_83_create)
HXLINE(  85)		if (::openfl::_legacy::Lib_obj::_hx___isInit) {
HXLINE(  87)			if (::openfl::_legacy::Lib_obj::silentRecreate) {
HXLINE(  89)				onLoaded();
HXLINE(  90)				return;
            			}
HXLINE(  94)			HX_STACK_DO_THROW(HX_("flash.Lib.create called multiple times. This function is automatically called by the project code.",c6,01,a5,55));
            		}
HXLINE(  98)		::openfl::_legacy::Lib_obj::_hx___isInit = true;
HXLINE(  99)		::openfl::_legacy::Lib_obj::initWidth = width;
HXLINE( 100)		::openfl::_legacy::Lib_obj::initHeight = height;
HXLINE( 102)		 ::Dynamic create_main_frame = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_create_main_frame",fe,26,db,30),(int)-1);
HXLINE( 130)		 ::Dynamic _hx_tmp;
HXDLIN( 130)		if (hx::IsNull( icon )) {
HXLINE( 130)			_hx_tmp = null();
            		}
            		else {
HXLINE( 130)			_hx_tmp = icon->_hx___handle;
            		}
HXLINE( 104)		create_main_frame( ::Dynamic(new _hx_Closure_0(color,onLoaded,height,stageClass,frameRate,width)),width,height,flags,title,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(Lib_obj,create,(void))

 ::openfl::_legacy::display::ManagedStage Lib_obj::createManagedStage(int width,int height,hx::Null< int >  __o_flags){
int flags = __o_flags.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_135_createManagedStage)
HXLINE( 137)		::openfl::_legacy::Lib_obj::initWidth = width;
HXLINE( 138)		::openfl::_legacy::Lib_obj::initHeight = height;
HXLINE( 140)		 ::openfl::_legacy::display::ManagedStage result =  ::openfl::_legacy::display::ManagedStage_obj::__alloc( HX_CTX ,width,height,flags);
HXLINE( 141)		::openfl::_legacy::Lib_obj::_hx___stage = result;
HXLINE( 143)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Lib_obj,createManagedStage,return )

::String Lib_obj::findHaxeLib(::String library){
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_162_findHaxeLib)
HXLINE( 164)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 166)			 ::sys::io::Process proc =  ::sys::io::Process_obj::__alloc( HX_CTX ,HX_("haxelib",df,b6,80,08),::Array_obj< ::String >::__new(2)->init(0,HX_("path",a5,e5,51,4a))->init(1,library));
HXLINE( 168)			if (hx::IsNotNull( proc )) {
HXLINE( 170)				 ::haxe::io::Input stream = proc->_hx_stdout;
HXLINE( 172)				try {
            					HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 174)					while(true){
HXLINE( 176)						::String s = stream->readLine();
HXLINE( 178)						if ((s.substr((int)0,(int)1) != HX_("-",2d,00,00,00))) {
HXLINE( 180)							stream->close();
HXLINE( 181)							proc->close();
HXLINE( 182)							::openfl::_legacy::Lib_obj::loaderTrace((HX_("Found haxelib ",1f,a6,4d,c9) + s));
HXLINE( 183)							return s;
            						}
            					}
            				}
            				catch( ::Dynamic _hx_e){
            					if (_hx_e.IsClass<  ::Dynamic >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::Dynamic e = _hx_e;
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
HXLINE( 191)				stream->close();
HXLINE( 192)				proc->close();
            			}
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e1 = _hx_e;
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 198)		return HX_("",00,00,00,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,findHaxeLib,return )

 ::Dynamic Lib_obj::load(::String library,::String method,hx::Null< int >  __o_args){
int args = __o_args.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_203_load)
HXLINE( 206)		if ((library == HX_("lime",15,17,b3,47))) {
HXLINE( 206)			library = HX_("lime-legacy",c1,7f,b9,87);
            		}
HXLINE( 213)		if (hx::IsNull( ::openfl::_legacy::Lib_obj::_hx___moduleNames )) {
HXLINE( 213)			::openfl::_legacy::Lib_obj::_hx___moduleNames =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            		}
HXLINE( 214)		if (::openfl::_legacy::Lib_obj::_hx___moduleNames->exists(library)) {
HXLINE( 217)			return ::cpp::Lib_obj::load(( (::String)(::openfl::_legacy::Lib_obj::_hx___moduleNames->get(library)) ),method,args);
            		}
HXLINE( 234)		::openfl::_legacy::Lib_obj::_hx___moduleNames->set(library,library);
HXLINE( 245)		 ::Dynamic result = ::openfl::_legacy::Lib_obj::tryLoad((HX_("./",41,28,00,00) + library),library,method,args);
HXLINE( 248)		if (hx::IsNull( result )) {
HXLINE( 250)			result = ::openfl::_legacy::Lib_obj::tryLoad((HX_(".\\",6e,28,00,00) + library),library,method,args);
            		}
HXLINE( 254)		if (hx::IsNull( result )) {
HXLINE( 256)			result = ::openfl::_legacy::Lib_obj::tryLoad(library,library,method,args);
            		}
HXLINE( 260)		if (hx::IsNull( result )) {
HXLINE( 262)			::String slash;
HXDLIN( 262)			if ((::openfl::_legacy::Lib_obj::sysName().substr((int)7,null()).toLowerCase() == HX_("windows",83,de,74,e8))) {
HXLINE( 262)				slash = HX_("\\",5c,00,00,00);
            			}
            			else {
HXLINE( 262)				slash = HX_("/",2f,00,00,00);
            			}
HXLINE( 263)			::String haxelib = ::openfl::_legacy::Lib_obj::findHaxeLib(HX_("lime",15,17,b3,47));
HXLINE( 265)			if ((haxelib != HX_("",00,00,00,00))) {
HXLINE( 267)				result = ::openfl::_legacy::Lib_obj::tryLoad(((((((((haxelib + slash) + HX_("legacy",49,7a,62,9a)) + slash) + HX_("ndll",36,b8,01,49)) + slash) + ::openfl::_legacy::Lib_obj::sysName()) + slash) + library),library,method,args);
HXLINE( 269)				if (hx::IsNull( result )) {
HXLINE( 271)					result = ::openfl::_legacy::Lib_obj::tryLoad((((((((((haxelib + slash) + HX_("legacy",49,7a,62,9a)) + slash) + HX_("ndll",36,b8,01,49)) + slash) + ::openfl::_legacy::Lib_obj::sysName()) + HX_("64",3e,2f,00,00)) + slash) + library),library,method,args);
            				}
            			}
            		}
HXLINE( 279)		::openfl::_legacy::Lib_obj::loaderTrace((HX_("Result : ",e9,19,2c,14) + ::Std_obj::string(result)));
HXLINE( 289)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Lib_obj,load,return )

void Lib_obj::loaderTrace(::String message){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_294_loaderTrace)
HXLINE( 297)		 ::Dynamic get_env = ::cpp::Lib_obj::load(HX_("std",a3,a8,57,00),HX_("get_env",84,cc,c1,26),(int)1);
HXLINE( 298)		bool debug = hx::IsNotNull( get_env(HX_("OPENFL_LOAD_DEBUG",a9,1b,ff,9b)) );
HXLINE( 303)		if (debug) {
HXLINE( 305)			::Sys_obj::println(message);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,loaderTrace,(void))

void Lib_obj::notImplemented(::String api){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_314_notImplemented)
HXDLIN( 314)		if (!(::openfl::_legacy::Lib_obj::_hx___sentWarnings->exists(api))) {
HXLINE( 316)			::openfl::_legacy::Lib_obj::_hx___sentWarnings->set(api,true);
HXLINE( 318)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 318)			_hx_tmp(((HX_("Warning: ",e2,3b,0f,9a) + api) + HX_(" is not implemented",1f,12,d2,b9)),hx::SourceInfo(HX_("Lib.hx",b9,80,1c,19),318,HX_("openfl._legacy.Lib",c1,a5,5c,fc),HX_("notImplemented",6f,3a,1a,27)));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,notImplemented,(void))

void Lib_obj::rethrow( ::Dynamic error){
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_325_rethrow)
HXLINE( 327)		 ::openfl::events::UncaughtErrorEvent event =  ::openfl::events::UncaughtErrorEvent_obj::__alloc( HX_CTX ,HX_("uncaughtError",f3,98,8b,8b),true,true,error);
HXLINE( 329)		bool _hx_tmp;
HXDLIN( 329)		if (hx::IsNotNull( ::openfl::_legacy::Lib_obj::_hx___uncaughtExceptionHandler )) {
HXLINE( 329)			_hx_tmp = ( (bool)(::openfl::_legacy::Lib_obj::_hx___uncaughtExceptionHandler(event)) );
            		}
            		else {
HXLINE( 329)			_hx_tmp = false;
            		}
HXDLIN( 329)		if (_hx_tmp) {
HXLINE( 331)			return;
            		}
HXLINE( 335)		::openfl::_legacy::Lib_obj::get_current()->loaderInfo->uncaughtErrorEvents->dispatchEvent(event);
HXLINE( 337)		if (!(event->_hx___getIsCancelled())) {
HXLINE( 339)			::String message = HX_("",00,00,00,00);
HXLINE( 341)			bool _hx_tmp1;
HXDLIN( 341)			if (hx::IsNotNull( error )) {
HXLINE( 341)				_hx_tmp1 = hx::IsNotEq( error,HX_("",00,00,00,00) );
            			}
            			else {
HXLINE( 341)				_hx_tmp1 = false;
            			}
HXDLIN( 341)			if (_hx_tmp1) {
HXLINE( 343)				message = (::Std_obj::string(error) + HX_("",00,00,00,00));
            			}
HXLINE( 347)			::Array< ::Dynamic> stack = ::haxe::CallStack_obj::exceptionStack();
HXLINE( 349)			if ((stack->length > (int)0)) {
HXLINE( 351)				message = (message + (::haxe::CallStack_obj::toString(stack) + HX_("\n",0a,00,00,00)));
            			}
            			else {
HXLINE( 355)				message = (message + HX_("\n",0a,00,00,00));
            			}
HXLINE( 362)			 ::haxe::io::Output _hx_tmp2 = ::Sys_obj::_hx_stderr();
HXDLIN( 362)			_hx_tmp2->write(::haxe::io::Bytes_obj::ofString(message));
HXLINE( 364)			::Sys_obj::exit((int)1);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,rethrow,(void))

void Lib_obj::setUncaughtExceptionHandler( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_373_setUncaughtExceptionHandler)
HXDLIN( 373)		::openfl::_legacy::Lib_obj::_hx___uncaughtExceptionHandler = f;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,setUncaughtExceptionHandler,(void))

::String Lib_obj::sysName(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_378_sysName)
HXLINE( 381)		 ::Dynamic sys_string = ::cpp::Lib_obj::load(HX_("std",a3,a8,57,00),HX_("sys_string",03,f9,de,46),(int)0);
HXLINE( 382)		return ( (::String)(sys_string()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,sysName,return )

 ::Dynamic Lib_obj::tryLoad(::String name,::String library,::String func,int args){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_390_tryLoad)
HXLINE( 392)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 395)			 ::Dynamic result = ::cpp::Lib_obj::load(name,func,args);
HXLINE( 402)			if (hx::IsNotNull( result )) {
HXLINE( 404)				::openfl::_legacy::Lib_obj::loaderTrace((HX_("Got result ",af,e9,02,45) + name));
HXLINE( 405)				::openfl::_legacy::Lib_obj::_hx___moduleNames->set(library,name);
HXLINE( 406)				return result;
            			}
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE( 412)				::openfl::_legacy::Lib_obj::loaderTrace((HX_("Failed to load : ",1e,ca,38,9b) + name));
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 416)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Lib_obj,tryLoad,return )

void Lib_obj::exit(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_449_exit)
HXLINE( 451)		 ::Dynamic quit = ::openfl::_legacy::Lib_obj::get_stage()->onQuit;
HXLINE( 453)		if (hx::IsNotNull( quit )) {
HXLINE( 463)			quit();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,exit,(void))

void Lib_obj::forceClose(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_470_forceClose)
HXLINE( 472)		 ::Dynamic terminate = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_terminate",55,cd,f0,34),(int)0);
HXLINE( 473)		terminate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,forceClose,(void))

int Lib_obj::getTimer(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_482_getTimer)
HXDLIN( 482)		return ::Std_obj::_hx_int((::haxe::Timer_obj::stamp() * ((Float)1000.0)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,getTimer,return )

void Lib_obj::getURL( ::openfl::_legacy::net::URLRequest url,::String target){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_489_getURL)
HXDLIN( 489)		::openfl::_legacy::Lib_obj::lime_get_url(url->url);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Lib_obj,getURL,(void))

void Lib_obj::pause(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_496_pause)
HXDLIN( 496)		::openfl::_legacy::Lib_obj::lime_pause_animation();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,pause,(void))

void Lib_obj::postUICallback( ::Dynamic inCallback){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_506_postUICallback)
HXDLIN( 506)		inCallback();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,postUICallback,(void))

void Lib_obj::resume(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_514_resume)
HXDLIN( 514)		::openfl::_legacy::Lib_obj::lime_resume_animation();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,resume,(void))

void Lib_obj::setIcon(::String path){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_519_setIcon)
HXLINE( 521)		 ::Dynamic set_icon = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_set_icon",02,fc,8b,c5),(int)1);
HXLINE( 522)		set_icon(path);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,setIcon,(void))

void Lib_obj::setPackage(::String company,::String file,::String packageName,::String version){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_527_setPackage)
HXLINE( 529)		::openfl::_legacy::Lib_obj::company = company;
HXLINE( 530)		::openfl::_legacy::Lib_obj::file = file;
HXLINE( 531)		::openfl::_legacy::Lib_obj::packageName = packageName;
HXLINE( 532)		::openfl::_legacy::Lib_obj::version = version;
HXLINE( 534)		::openfl::_legacy::Lib_obj::lime_set_package(company,file,packageName,version);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Lib_obj,setPackage,(void))

void Lib_obj::_hx___setCurrentStage( ::openfl::_legacy::display::Stage stage){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_541___setCurrentStage)
HXDLIN( 541)		::openfl::_legacy::Lib_obj::_hx___stage = stage;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,_hx___setCurrentStage,(void))

void Lib_obj::trace( ::Dynamic arg){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_548_trace)
HXDLIN( 548)		::haxe::Log_obj::trace(arg,hx::SourceInfo(HX_("Lib.hx",b9,80,1c,19),548,HX_("openfl._legacy.Lib",c1,a5,5c,fc),HX_("trace",85,8e,1f,16)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,trace,(void))

 ::openfl::_legacy::display::MovieClip Lib_obj::get_current(){
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_560_get_current)
HXLINE( 562)		if (hx::IsNull( ::openfl::_legacy::Lib_obj::_hx___current )) {
HXLINE( 564)			::openfl::_legacy::Lib_obj::_hx___current =  ::openfl::_legacy::display::MovieClip_obj::__alloc( HX_CTX );
HXLINE( 566)			if (hx::IsNotNull( ::openfl::_legacy::Lib_obj::_hx___stage )) {
HXLINE( 568)				::openfl::_legacy::Lib_obj::_hx___stage->addChild(::openfl::_legacy::Lib_obj::_hx___current);
            			}
            		}
HXLINE( 574)		return ::openfl::_legacy::Lib_obj::_hx___current;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_current,return )

 ::openfl::_legacy::display::Stage Lib_obj::get_stage(){
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_579_get_stage)
HXLINE( 581)		if (hx::IsNull( ::openfl::_legacy::Lib_obj::_hx___stage )) {
HXLINE( 583)			HX_STACK_DO_THROW(HX_("Error : stage can't be accessed until init is called",88,52,b6,4f));
            		}
HXLINE( 587)		return ::openfl::_legacy::Lib_obj::_hx___stage;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_stage,return )

 ::Dynamic Lib_obj::lime_set_package;

 ::Dynamic Lib_obj::lime_get_frame_stage;

 ::Dynamic Lib_obj::lime_get_url;

 ::Dynamic Lib_obj::lime_pause_animation;

 ::Dynamic Lib_obj::lime_resume_animation;


Lib_obj::Lib_obj()
{
}

bool Lib_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"as") ) { outValue = as_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { outValue = ( file ); return true; }
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"VSYNC") ) { outValue = ( VSYNC ); return true; }
		if (HX_FIELD_EQ(inName,"HW_AA") ) { outValue = ( HW_AA ); return true; }
		if (HX_FIELD_EQ(inName,"stage") ) { outValue = ( inCallProp == hx::paccAlways ? get_stage() : stage ); return true; }
		if (HX_FIELD_EQ(inName,"close") ) { outValue = close_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pause") ) { outValue = pause_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"trace") ) { outValue = trace_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"attach") ) { outValue = attach_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getURL") ) { outValue = getURL_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"resume") ) { outValue = resume_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"company") ) { outValue = ( company ); return true; }
		if (HX_FIELD_EQ(inName,"current") ) { outValue = ( inCallProp == hx::paccAlways ? get_current() : current ); return true; }
		if (HX_FIELD_EQ(inName,"version") ) { outValue = ( version ); return true; }
		if (HX_FIELD_EQ(inName,"__stage") ) { outValue = ( _hx___stage ); return true; }
		if (HX_FIELD_EQ(inName,"rethrow") ) { outValue = rethrow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sysName") ) { outValue = sysName_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"tryLoad") ) { outValue = tryLoad_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setIcon") ) { outValue = setIcon_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"HARDWARE") ) { outValue = ( HARDWARE ); return true; }
		if (HX_FIELD_EQ(inName,"__isInit") ) { outValue = ( _hx___isInit ); return true; }
		if (HX_FIELD_EQ(inName,"getTimer") ) { outValue = getTimer_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"RESIZABLE") ) { outValue = ( RESIZABLE ); return true; }
		if (HX_FIELD_EQ(inName,"initWidth") ) { outValue = ( initWidth ); return true; }
		if (HX_FIELD_EQ(inName,"__current") ) { outValue = ( _hx___current ); return true; }
		if (HX_FIELD_EQ(inName,"get_stage") ) { outValue = get_stage_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"FULLSCREEN") ) { outValue = ( FULLSCREEN ); return true; }
		if (HX_FIELD_EQ(inName,"BORDERLESS") ) { outValue = ( BORDERLESS ); return true; }
		if (HX_FIELD_EQ(inName,"initHeight") ) { outValue = ( initHeight ); return true; }
		if (HX_FIELD_EQ(inName,"forceClose") ) { outValue = forceClose_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setPackage") ) { outValue = setPackage_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"HW_AA_HIRES") ) { outValue = ( HW_AA_HIRES ); return true; }
		if (HX_FIELD_EQ(inName,"packageName") ) { outValue = ( packageName ); return true; }
		if (HX_FIELD_EQ(inName,"__mainFrame") ) { outValue = ( _hx___mainFrame ); return true; }
		if (HX_FIELD_EQ(inName,"findHaxeLib") ) { outValue = findHaxeLib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loaderTrace") ) { outValue = loaderTrace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_current") ) { outValue = get_current_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER") ) { outValue = ( DEPTH_BUFFER ); return true; }
		if (HX_FIELD_EQ(inName,"lime_get_url") ) { outValue = ( lime_get_url ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ALLOW_SHADERS") ) { outValue = ( ALLOW_SHADERS ); return true; }
		if (HX_FIELD_EQ(inName,"__moduleNames") ) { outValue = ( _hx___moduleNames ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER") ) { outValue = ( STENCIL_BUFFER ); return true; }
		if (HX_FIELD_EQ(inName,"silentRecreate") ) { outValue = ( silentRecreate ); return true; }
		if (HX_FIELD_EQ(inName,"__sentWarnings") ) { outValue = ( _hx___sentWarnings ); return true; }
		if (HX_FIELD_EQ(inName,"notImplemented") ) { outValue = notImplemented_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"postUICallback") ) { outValue = postUICallback_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"REQUIRE_SHADERS") ) { outValue = ( REQUIRE_SHADERS ); return true; }
		if (HX_FIELD_EQ(inName,"__loadedNekoAPI") ) { outValue = ( _hx___loadedNekoAPI ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"lime_set_package") ) { outValue = ( lime_set_package ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"__setCurrentStage") ) { outValue = _hx___setCurrentStage_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createManagedStage") ) { outValue = createManagedStage_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_get_frame_stage") ) { outValue = ( lime_get_frame_stage ); return true; }
		if (HX_FIELD_EQ(inName,"lime_pause_animation") ) { outValue = ( lime_pause_animation ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_resume_animation") ) { outValue = ( lime_resume_animation ); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"__uncaughtExceptionHandler") ) { outValue = ( _hx___uncaughtExceptionHandler ); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"setUncaughtExceptionHandler") ) { outValue = setUncaughtExceptionHandler_dyn(); return true; }
	}
	return false;
}

bool Lib_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { file=ioValue.Cast< ::String >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"VSYNC") ) { VSYNC=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"HW_AA") ) { HW_AA=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"stage") ) { stage=ioValue.Cast<  ::openfl::_legacy::display::Stage >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"company") ) { company=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"current") ) { current=ioValue.Cast<  ::openfl::_legacy::display::MovieClip >(); return true; }
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"__stage") ) { _hx___stage=ioValue.Cast<  ::openfl::_legacy::display::Stage >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"HARDWARE") ) { HARDWARE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"__isInit") ) { _hx___isInit=ioValue.Cast< bool >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"RESIZABLE") ) { RESIZABLE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"initWidth") ) { initWidth=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"__current") ) { _hx___current=ioValue.Cast<  ::openfl::_legacy::display::MovieClip >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"FULLSCREEN") ) { FULLSCREEN=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BORDERLESS") ) { BORDERLESS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"initHeight") ) { initHeight=ioValue.Cast< int >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"HW_AA_HIRES") ) { HW_AA_HIRES=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"packageName") ) { packageName=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"__mainFrame") ) { _hx___mainFrame=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER") ) { DEPTH_BUFFER=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_get_url") ) { lime_get_url=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ALLOW_SHADERS") ) { ALLOW_SHADERS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"__moduleNames") ) { _hx___moduleNames=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER") ) { STENCIL_BUFFER=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"silentRecreate") ) { silentRecreate=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"__sentWarnings") ) { _hx___sentWarnings=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"REQUIRE_SHADERS") ) { REQUIRE_SHADERS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"__loadedNekoAPI") ) { _hx___loadedNekoAPI=ioValue.Cast< bool >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"lime_set_package") ) { lime_set_package=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_get_frame_stage") ) { lime_get_frame_stage=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_pause_animation") ) { lime_pause_animation=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_resume_animation") ) { lime_resume_animation=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"__uncaughtExceptionHandler") ) { _hx___uncaughtExceptionHandler=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Lib_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Lib_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Lib_obj::FULLSCREEN,HX_HCSTRING("FULLSCREEN","\x3b","\xae","\xbd","\xeb")},
	{hx::fsInt,(void *) &Lib_obj::BORDERLESS,HX_HCSTRING("BORDERLESS","\x45","\xba","\x7a","\x09")},
	{hx::fsInt,(void *) &Lib_obj::RESIZABLE,HX_HCSTRING("RESIZABLE","\x4b","\xa7","\xa8","\xa4")},
	{hx::fsInt,(void *) &Lib_obj::HARDWARE,HX_HCSTRING("HARDWARE","\xa8","\x72","\x59","\xcf")},
	{hx::fsInt,(void *) &Lib_obj::VSYNC,HX_HCSTRING("VSYNC","\xb1","\x65","\x96","\xbb")},
	{hx::fsInt,(void *) &Lib_obj::HW_AA,HX_HCSTRING("HW_AA","\x50","\xa3","\xa3","\xae")},
	{hx::fsInt,(void *) &Lib_obj::HW_AA_HIRES,HX_HCSTRING("HW_AA_HIRES","\x70","\x13","\x75","\x95")},
	{hx::fsInt,(void *) &Lib_obj::ALLOW_SHADERS,HX_HCSTRING("ALLOW_SHADERS","\x78","\x9c","\xd4","\x9c")},
	{hx::fsInt,(void *) &Lib_obj::REQUIRE_SHADERS,HX_HCSTRING("REQUIRE_SHADERS","\x54","\xb7","\x32","\x63")},
	{hx::fsInt,(void *) &Lib_obj::DEPTH_BUFFER,HX_HCSTRING("DEPTH_BUFFER","\x1c","\x84","\x06","\x89")},
	{hx::fsInt,(void *) &Lib_obj::STENCIL_BUFFER,HX_HCSTRING("STENCIL_BUFFER","\x43","\x1c","\x95","\x64")},
	{hx::fsString,(void *) &Lib_obj::company,HX_HCSTRING("company","\x3d","\x15","\x69","\x83")},
	{hx::fsObject /*::openfl::_legacy::display::MovieClip*/ ,(void *) &Lib_obj::current,HX_HCSTRING("current","\x39","\x9c","\xe3","\xcb")},
	{hx::fsString,(void *) &Lib_obj::file,HX_HCSTRING("file","\x7c","\xce","\xbb","\x43")},
	{hx::fsInt,(void *) &Lib_obj::initHeight,HX_HCSTRING("initHeight","\x17","\x63","\x91","\x06")},
	{hx::fsInt,(void *) &Lib_obj::initWidth,HX_HCSTRING("initWidth","\xd6","\xd0","\xf4","\xe5")},
	{hx::fsString,(void *) &Lib_obj::packageName,HX_HCSTRING("packageName","\xf1","\x04","\xad","\x04")},
	{hx::fsBool,(void *) &Lib_obj::silentRecreate,HX_HCSTRING("silentRecreate","\xa4","\x62","\xe5","\x0f")},
	{hx::fsObject /*::openfl::_legacy::display::Stage*/ ,(void *) &Lib_obj::stage,HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84")},
	{hx::fsString,(void *) &Lib_obj::version,HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c")},
	{hx::fsObject /*::openfl::_legacy::display::MovieClip*/ ,(void *) &Lib_obj::_hx___current,HX_HCSTRING("__current","\x19","\xed","\x31","\x4d")},
	{hx::fsBool,(void *) &Lib_obj::_hx___isInit,HX_HCSTRING("__isInit","\x3a","\x6b","\x51","\x0b")},
	{hx::fsBool,(void *) &Lib_obj::_hx___loadedNekoAPI,HX_HCSTRING("__loadedNekoAPI","\x1a","\x25","\x3e","\xec")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::_hx___mainFrame,HX_HCSTRING("__mainFrame","\x14","\x8a","\x53","\x4e")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(void *) &Lib_obj::_hx___moduleNames,HX_HCSTRING("__moduleNames","\x5c","\x9c","\x9c","\x28")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(void *) &Lib_obj::_hx___sentWarnings,HX_HCSTRING("__sentWarnings","\x2f","\x1b","\x27","\x19")},
	{hx::fsObject /*::openfl::_legacy::display::Stage*/ ,(void *) &Lib_obj::_hx___stage,HX_HCSTRING("__stage","\x9e","\xc3","\x69","\xee")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::_hx___uncaughtExceptionHandler,HX_HCSTRING("__uncaughtExceptionHandler","\x10","\x6f","\xb7","\x9e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::lime_set_package,HX_HCSTRING("lime_set_package","\x3f","\x23","\x66","\xc4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::lime_get_frame_stage,HX_HCSTRING("lime_get_frame_stage","\x19","\x55","\xf8","\x98")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::lime_get_url,HX_HCSTRING("lime_get_url","\x9c","\x01","\x76","\x11")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::lime_pause_animation,HX_HCSTRING("lime_pause_animation","\xd1","\x64","\xc2","\x88")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Lib_obj::lime_resume_animation,HX_HCSTRING("lime_resume_animation","\x5c","\x1e","\xb8","\x40")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Lib_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Lib_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Lib_obj::FULLSCREEN,"FULLSCREEN");
	HX_MARK_MEMBER_NAME(Lib_obj::BORDERLESS,"BORDERLESS");
	HX_MARK_MEMBER_NAME(Lib_obj::RESIZABLE,"RESIZABLE");
	HX_MARK_MEMBER_NAME(Lib_obj::HARDWARE,"HARDWARE");
	HX_MARK_MEMBER_NAME(Lib_obj::VSYNC,"VSYNC");
	HX_MARK_MEMBER_NAME(Lib_obj::HW_AA,"HW_AA");
	HX_MARK_MEMBER_NAME(Lib_obj::HW_AA_HIRES,"HW_AA_HIRES");
	HX_MARK_MEMBER_NAME(Lib_obj::ALLOW_SHADERS,"ALLOW_SHADERS");
	HX_MARK_MEMBER_NAME(Lib_obj::REQUIRE_SHADERS,"REQUIRE_SHADERS");
	HX_MARK_MEMBER_NAME(Lib_obj::DEPTH_BUFFER,"DEPTH_BUFFER");
	HX_MARK_MEMBER_NAME(Lib_obj::STENCIL_BUFFER,"STENCIL_BUFFER");
	HX_MARK_MEMBER_NAME(Lib_obj::company,"company");
	HX_MARK_MEMBER_NAME(Lib_obj::current,"current");
	HX_MARK_MEMBER_NAME(Lib_obj::file,"file");
	HX_MARK_MEMBER_NAME(Lib_obj::initHeight,"initHeight");
	HX_MARK_MEMBER_NAME(Lib_obj::initWidth,"initWidth");
	HX_MARK_MEMBER_NAME(Lib_obj::packageName,"packageName");
	HX_MARK_MEMBER_NAME(Lib_obj::silentRecreate,"silentRecreate");
	HX_MARK_MEMBER_NAME(Lib_obj::stage,"stage");
	HX_MARK_MEMBER_NAME(Lib_obj::version,"version");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___current,"__current");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___isInit,"__isInit");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___loadedNekoAPI,"__loadedNekoAPI");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___mainFrame,"__mainFrame");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___moduleNames,"__moduleNames");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___sentWarnings,"__sentWarnings");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___stage,"__stage");
	HX_MARK_MEMBER_NAME(Lib_obj::_hx___uncaughtExceptionHandler,"__uncaughtExceptionHandler");
	HX_MARK_MEMBER_NAME(Lib_obj::lime_set_package,"lime_set_package");
	HX_MARK_MEMBER_NAME(Lib_obj::lime_get_frame_stage,"lime_get_frame_stage");
	HX_MARK_MEMBER_NAME(Lib_obj::lime_get_url,"lime_get_url");
	HX_MARK_MEMBER_NAME(Lib_obj::lime_pause_animation,"lime_pause_animation");
	HX_MARK_MEMBER_NAME(Lib_obj::lime_resume_animation,"lime_resume_animation");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Lib_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Lib_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Lib_obj::FULLSCREEN,"FULLSCREEN");
	HX_VISIT_MEMBER_NAME(Lib_obj::BORDERLESS,"BORDERLESS");
	HX_VISIT_MEMBER_NAME(Lib_obj::RESIZABLE,"RESIZABLE");
	HX_VISIT_MEMBER_NAME(Lib_obj::HARDWARE,"HARDWARE");
	HX_VISIT_MEMBER_NAME(Lib_obj::VSYNC,"VSYNC");
	HX_VISIT_MEMBER_NAME(Lib_obj::HW_AA,"HW_AA");
	HX_VISIT_MEMBER_NAME(Lib_obj::HW_AA_HIRES,"HW_AA_HIRES");
	HX_VISIT_MEMBER_NAME(Lib_obj::ALLOW_SHADERS,"ALLOW_SHADERS");
	HX_VISIT_MEMBER_NAME(Lib_obj::REQUIRE_SHADERS,"REQUIRE_SHADERS");
	HX_VISIT_MEMBER_NAME(Lib_obj::DEPTH_BUFFER,"DEPTH_BUFFER");
	HX_VISIT_MEMBER_NAME(Lib_obj::STENCIL_BUFFER,"STENCIL_BUFFER");
	HX_VISIT_MEMBER_NAME(Lib_obj::company,"company");
	HX_VISIT_MEMBER_NAME(Lib_obj::current,"current");
	HX_VISIT_MEMBER_NAME(Lib_obj::file,"file");
	HX_VISIT_MEMBER_NAME(Lib_obj::initHeight,"initHeight");
	HX_VISIT_MEMBER_NAME(Lib_obj::initWidth,"initWidth");
	HX_VISIT_MEMBER_NAME(Lib_obj::packageName,"packageName");
	HX_VISIT_MEMBER_NAME(Lib_obj::silentRecreate,"silentRecreate");
	HX_VISIT_MEMBER_NAME(Lib_obj::stage,"stage");
	HX_VISIT_MEMBER_NAME(Lib_obj::version,"version");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___current,"__current");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___isInit,"__isInit");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___loadedNekoAPI,"__loadedNekoAPI");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___mainFrame,"__mainFrame");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___moduleNames,"__moduleNames");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___sentWarnings,"__sentWarnings");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___stage,"__stage");
	HX_VISIT_MEMBER_NAME(Lib_obj::_hx___uncaughtExceptionHandler,"__uncaughtExceptionHandler");
	HX_VISIT_MEMBER_NAME(Lib_obj::lime_set_package,"lime_set_package");
	HX_VISIT_MEMBER_NAME(Lib_obj::lime_get_frame_stage,"lime_get_frame_stage");
	HX_VISIT_MEMBER_NAME(Lib_obj::lime_get_url,"lime_get_url");
	HX_VISIT_MEMBER_NAME(Lib_obj::lime_pause_animation,"lime_pause_animation");
	HX_VISIT_MEMBER_NAME(Lib_obj::lime_resume_animation,"lime_resume_animation");
};

#endif

hx::Class Lib_obj::__mClass;

static ::String Lib_obj_sStaticFields[] = {
	HX_HCSTRING("FULLSCREEN","\x3b","\xae","\xbd","\xeb"),
	HX_HCSTRING("BORDERLESS","\x45","\xba","\x7a","\x09"),
	HX_HCSTRING("RESIZABLE","\x4b","\xa7","\xa8","\xa4"),
	HX_HCSTRING("HARDWARE","\xa8","\x72","\x59","\xcf"),
	HX_HCSTRING("VSYNC","\xb1","\x65","\x96","\xbb"),
	HX_HCSTRING("HW_AA","\x50","\xa3","\xa3","\xae"),
	HX_HCSTRING("HW_AA_HIRES","\x70","\x13","\x75","\x95"),
	HX_HCSTRING("ALLOW_SHADERS","\x78","\x9c","\xd4","\x9c"),
	HX_HCSTRING("REQUIRE_SHADERS","\x54","\xb7","\x32","\x63"),
	HX_HCSTRING("DEPTH_BUFFER","\x1c","\x84","\x06","\x89"),
	HX_HCSTRING("STENCIL_BUFFER","\x43","\x1c","\x95","\x64"),
	HX_HCSTRING("company","\x3d","\x15","\x69","\x83"),
	HX_HCSTRING("current","\x39","\x9c","\xe3","\xcb"),
	HX_HCSTRING("file","\x7c","\xce","\xbb","\x43"),
	HX_HCSTRING("initHeight","\x17","\x63","\x91","\x06"),
	HX_HCSTRING("initWidth","\xd6","\xd0","\xf4","\xe5"),
	HX_HCSTRING("packageName","\xf1","\x04","\xad","\x04"),
	HX_HCSTRING("silentRecreate","\xa4","\x62","\xe5","\x0f"),
	HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84"),
	HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c"),
	HX_HCSTRING("__current","\x19","\xed","\x31","\x4d"),
	HX_HCSTRING("__isInit","\x3a","\x6b","\x51","\x0b"),
	HX_HCSTRING("__loadedNekoAPI","\x1a","\x25","\x3e","\xec"),
	HX_HCSTRING("__mainFrame","\x14","\x8a","\x53","\x4e"),
	HX_HCSTRING("__moduleNames","\x5c","\x9c","\x9c","\x28"),
	HX_HCSTRING("__sentWarnings","\x2f","\x1b","\x27","\x19"),
	HX_HCSTRING("__stage","\x9e","\xc3","\x69","\xee"),
	HX_HCSTRING("__uncaughtExceptionHandler","\x10","\x6f","\xb7","\x9e"),
	HX_HCSTRING("as","\xf2","\x54","\x00","\x00"),
	HX_HCSTRING("attach","\xc5","\xfb","\x0f","\xe0"),
	HX_HCSTRING("close","\xb8","\x17","\x63","\x48"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("createManagedStage","\xfb","\x8c","\x8b","\xd8"),
	HX_HCSTRING("findHaxeLib","\x86","\x2f","\x53","\x08"),
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	HX_HCSTRING("loaderTrace","\x72","\x91","\x40","\xa9"),
	HX_HCSTRING("notImplemented","\x6f","\x3a","\x1a","\x27"),
	HX_HCSTRING("rethrow","\x93","\xb0","\x2a","\xf6"),
	HX_HCSTRING("setUncaughtExceptionHandler","\xb2","\xa9","\xb6","\xc2"),
	HX_HCSTRING("sysName","\xf8","\x55","\x40","\x7a"),
	HX_HCSTRING("tryLoad","\x01","\xe9","\x75","\x4a"),
	HX_HCSTRING("exit","\x1e","\xf7","\x1d","\x43"),
	HX_HCSTRING("forceClose","\xcd","\x01","\x38","\xdf"),
	HX_HCSTRING("getTimer","\x4f","\xcf","\x0c","\x70"),
	HX_HCSTRING("getURL","\x79","\x48","\x28","\xa3"),
	HX_HCSTRING("pause","\xf6","\xd6","\x57","\xbd"),
	HX_HCSTRING("postUICallback","\x99","\xd0","\x5a","\xb0"),
	HX_HCSTRING("resume","\xad","\x69","\x84","\x08"),
	HX_HCSTRING("setIcon","\x3b","\x28","\x37","\x0b"),
	HX_HCSTRING("setPackage","\x04","\x50","\x90","\x94"),
	HX_HCSTRING("__setCurrentStage","\x67","\x53","\x27","\x6d"),
	HX_HCSTRING("trace","\x85","\x8e","\x1f","\x16"),
	HX_HCSTRING("get_current","\x50","\xfc","\xdd","\x51"),
	HX_HCSTRING("get_stage","\x15","\xc7","\xb4","\xc7"),
	HX_HCSTRING("lime_set_package","\x3f","\x23","\x66","\xc4"),
	HX_HCSTRING("lime_get_frame_stage","\x19","\x55","\xf8","\x98"),
	HX_HCSTRING("lime_get_url","\x9c","\x01","\x76","\x11"),
	HX_HCSTRING("lime_pause_animation","\xd1","\x64","\xc2","\x88"),
	HX_HCSTRING("lime_resume_animation","\x5c","\x1e","\xb8","\x40"),
	::String(null())
};

void Lib_obj::__register()
{
	hx::Object *dummy = new Lib_obj;
	Lib_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.Lib","\xc1","\xa5","\x5c","\xfc");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Lib_obj::__GetStatic;
	__mClass->mSetStaticField = &Lib_obj::__SetStatic;
	__mClass->mMarkFunc = Lib_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Lib_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Lib_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Lib_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Lib_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Lib_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Lib_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_24_boot)
HXDLIN(  24)		FULLSCREEN = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_25_boot)
HXDLIN(  25)		BORDERLESS = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_26_boot)
HXDLIN(  26)		RESIZABLE = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_27_boot)
HXDLIN(  27)		HARDWARE = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_28_boot)
HXDLIN(  28)		VSYNC = (int)16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_29_boot)
HXDLIN(  29)		HW_AA = (int)32;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_30_boot)
HXDLIN(  30)		HW_AA_HIRES = (int)96;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_31_boot)
HXDLIN(  31)		ALLOW_SHADERS = (int)128;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_32_boot)
HXDLIN(  32)		REQUIRE_SHADERS = (int)256;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_33_boot)
HXDLIN(  33)		DEPTH_BUFFER = (int)512;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_34_boot)
HXDLIN(  34)		STENCIL_BUFFER = (int)1024;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_46_boot)
HXDLIN(  46)		silentRecreate = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_50_boot)
HXDLIN(  50)		_hx___current = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_51_boot)
HXDLIN(  51)		_hx___isInit = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_53_boot)
HXDLIN(  53)		_hx___mainFrame = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_54_boot)
HXDLIN(  54)		_hx___moduleNames = null();
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_773a6020cc03a680_55_boot)
HXDLIN(  55)		_hx___sentWarnings =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_56_boot)
HXDLIN(  56)		_hx___stage = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_57_boot)
HXDLIN(  57)		_hx___uncaughtExceptionHandler = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_602_boot)
HXDLIN( 602)		lime_set_package = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_set_package",9d,d2,4a,02),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_603_boot)
HXDLIN( 603)		lime_get_frame_stage = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_get_frame_stage",77,0b,0b,d8),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_604_boot)
HXDLIN( 604)		lime_get_url = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_get_url",fa,29,7c,ad),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_605_boot)
HXDLIN( 605)		lime_pause_animation = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_pause_animation",2f,1b,d5,c7),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_773a6020cc03a680_606_boot)
HXDLIN( 606)		lime_resume_animation = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_resume_animation",3e,fa,04,32),(int)0);
            	}
}

} // end namespace openfl
} // end namespace _legacy
