// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_BitmapData
#include <openfl/_legacy/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_MovieClip
#include <openfl/_legacy/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Stage
#include <openfl/_legacy/display/Stage.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GL
#include <openfl/_legacy/gl/GL.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLBuffer
#include <openfl/_legacy/gl/GLBuffer.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLFramebuffer
#include <openfl/_legacy/gl/GLFramebuffer.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLObject
#include <openfl/_legacy/gl/GLObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLProgram
#include <openfl/_legacy/gl/GLProgram.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLRenderbuffer
#include <openfl/_legacy/gl/GLRenderbuffer.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLShader
#include <openfl/_legacy/gl/GLShader.h>
#endif
#ifndef INCLUDED_openfl__legacy_gl_GLTexture
#include <openfl/_legacy/gl/GLTexture.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_ArrayBufferView
#include <openfl/_legacy/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_ByteArray
#include <openfl/_legacy/utils/ByteArray.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_Float32Array
#include <openfl/_legacy/utils/Float32Array.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_IDataInput
#include <openfl/_legacy/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_IDataOutput
#include <openfl/_legacy/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_IMemoryRange
#include <openfl/_legacy/utils/IMemoryRange.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix3D
#include <openfl/geom/Matrix3D.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_438_activeTexture,"openfl._legacy.gl.GL","activeTexture",0x456c22b1,"openfl._legacy.gl.GL.activeTexture","openfl/_legacy/gl/GL.hx",438,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_441_attachShader,"openfl._legacy.gl.GL","attachShader",0xdcddb54e,"openfl._legacy.gl.GL.attachShader","openfl/_legacy/gl/GL.hx",441,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_448_bindAttribLocation,"openfl._legacy.gl.GL","bindAttribLocation",0x312ac5c0,"openfl._legacy.gl.GL.bindAttribLocation","openfl/_legacy/gl/GL.hx",448,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_453_bindBitmapDataTexture,"openfl._legacy.gl.GL","bindBitmapDataTexture",0x89cc44a1,"openfl._legacy.gl.GL.bindBitmapDataTexture","openfl/_legacy/gl/GL.hx",453,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_458_bindBuffer,"openfl._legacy.gl.GL","bindBuffer",0x294b8e21,"openfl._legacy.gl.GL.bindBuffer","openfl/_legacy/gl/GL.hx",458,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_466_bindFramebuffer,"openfl._legacy.gl.GL","bindFramebuffer",0x96028c2c,"openfl._legacy.gl.GL.bindFramebuffer","openfl/_legacy/gl/GL.hx",466,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_471_bindRenderbuffer,"openfl._legacy.gl.GL","bindRenderbuffer",0x32c42cb7,"openfl._legacy.gl.GL.bindRenderbuffer","openfl/_legacy/gl/GL.hx",471,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_476_bindTexture,"openfl._legacy.gl.GL","bindTexture",0xe620f49a,"openfl._legacy.gl.GL.bindTexture","openfl/_legacy/gl/GL.hx",476,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_481_blendColor,"openfl._legacy.gl.GL","blendColor",0x13412ed6,"openfl._legacy.gl.GL.blendColor","openfl/_legacy/gl/GL.hx",481,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_486_blendEquation,"openfl._legacy.gl.GL","blendEquation",0xf16fa7f9,"openfl._legacy.gl.GL.blendEquation","openfl/_legacy/gl/GL.hx",486,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_491_blendEquationSeparate,"openfl._legacy.gl.GL","blendEquationSeparate",0x018ba47c,"openfl._legacy.gl.GL.blendEquationSeparate","openfl/_legacy/gl/GL.hx",491,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_496_blendFunc,"openfl._legacy.gl.GL","blendFunc",0xa3f3dd31,"openfl._legacy.gl.GL.blendFunc","openfl/_legacy/gl/GL.hx",496,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_501_blendFuncSeparate,"openfl._legacy.gl.GL","blendFuncSeparate",0xf79bd1b4,"openfl._legacy.gl.GL.blendFuncSeparate","openfl/_legacy/gl/GL.hx",501,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_506_bufferData,"openfl._legacy.gl.GL","bufferData",0xc400bace,"openfl._legacy.gl.GL.bufferData","openfl/_legacy/gl/GL.hx",506,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_511_bufferSubData,"openfl._legacy.gl.GL","bufferSubData",0x34a705a6,"openfl._legacy.gl.GL.bufferSubData","openfl/_legacy/gl/GL.hx",511,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_516_checkFramebufferStatus,"openfl._legacy.gl.GL","checkFramebufferStatus",0x8f4f579b,"openfl._legacy.gl.GL.checkFramebufferStatus","openfl/_legacy/gl/GL.hx",516,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_521_clear,"openfl._legacy.gl.GL","clear",0x3a782489,"openfl._legacy.gl.GL.clear","openfl/_legacy/gl/GL.hx",521,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_526_clearColor,"openfl._legacy.gl.GL","clearColor",0x4ff3ac1a,"openfl._legacy.gl.GL.clearColor","openfl/_legacy/gl/GL.hx",526,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_531_clearDepth,"openfl._legacy.gl.GL","clearDepth",0xdcc12bba,"openfl._legacy.gl.GL.clearDepth","openfl/_legacy/gl/GL.hx",531,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_536_clearStencil,"openfl._legacy.gl.GL","clearStencil",0x85e85473,"openfl._legacy.gl.GL.clearStencil","openfl/_legacy/gl/GL.hx",536,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_541_colorMask,"openfl._legacy.gl.GL","colorMask",0xc01baceb,"openfl._legacy.gl.GL.colorMask","openfl/_legacy/gl/GL.hx",541,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_546_compileShader,"openfl._legacy.gl.GL","compileShader",0xc9747ff4,"openfl._legacy.gl.GL.compileShader","openfl/_legacy/gl/GL.hx",546,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_551_compressedTexImage2D,"openfl._legacy.gl.GL","compressedTexImage2D",0x81c1e12b,"openfl._legacy.gl.GL.compressedTexImage2D","openfl/_legacy/gl/GL.hx",551,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_556_compressedTexSubImage2D,"openfl._legacy.gl.GL","compressedTexSubImage2D",0xf08ed7cf,"openfl._legacy.gl.GL.compressedTexSubImage2D","openfl/_legacy/gl/GL.hx",556,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_561_copyTexImage2D,"openfl._legacy.gl.GL","copyTexImage2D",0xdf81de5f,"openfl._legacy.gl.GL.copyTexImage2D","openfl/_legacy/gl/GL.hx",561,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_566_copyTexSubImage2D,"openfl._legacy.gl.GL","copyTexSubImage2D",0xd18a131b,"openfl._legacy.gl.GL.copyTexSubImage2D","openfl/_legacy/gl/GL.hx",566,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_571_createBuffer,"openfl._legacy.gl.GL","createBuffer",0x1d4fe1a0,"openfl._legacy.gl.GL.createBuffer","openfl/_legacy/gl/GL.hx",571,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_576_createFramebuffer,"openfl._legacy.gl.GL","createFramebuffer",0xf9c42c4d,"openfl._legacy.gl.GL.createFramebuffer","openfl/_legacy/gl/GL.hx",576,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_581_createProgram,"openfl._legacy.gl.GL","createProgram",0xcafe31e4,"openfl._legacy.gl.GL.createProgram","openfl/_legacy/gl/GL.hx",581,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_586_createRenderbuffer,"openfl._legacy.gl.GL","createRenderbuffer",0x186ea976,"openfl._legacy.gl.GL.createRenderbuffer","openfl/_legacy/gl/GL.hx",586,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_591_createShader,"openfl._legacy.gl.GL","createShader",0x69dbe3c5,"openfl._legacy.gl.GL.createShader","openfl/_legacy/gl/GL.hx",591,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_596_createTexture,"openfl._legacy.gl.GL","createTexture",0x75e5b03b,"openfl._legacy.gl.GL.createTexture","openfl/_legacy/gl/GL.hx",596,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_601_cullFace,"openfl._legacy.gl.GL","cullFace",0x422239f3,"openfl._legacy.gl.GL.cullFace","openfl/_legacy/gl/GL.hx",601,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_605_deleteBuffer,"openfl._legacy.gl.GL","deleteBuffer",0x6192c80f,"openfl._legacy.gl.GL.deleteBuffer","openfl/_legacy/gl/GL.hx",605,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_611_deleteFramebuffer,"openfl._legacy.gl.GL","deleteFramebuffer",0x7cdc937e,"openfl._legacy.gl.GL.deleteFramebuffer","openfl/_legacy/gl/GL.hx",611,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_617_deleteProgram,"openfl._legacy.gl.GL","deleteProgram",0x4144ec95,"openfl._legacy.gl.GL.deleteProgram","openfl/_legacy/gl/GL.hx",617,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_623_deleteRenderbuffer,"openfl._legacy.gl.GL","deleteRenderbuffer",0x4ab08d25,"openfl._legacy.gl.GL.deleteRenderbuffer","openfl/_legacy/gl/GL.hx",623,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_629_deleteShader,"openfl._legacy.gl.GL","deleteShader",0xae1eca34,"openfl._legacy.gl.GL.deleteShader","openfl/_legacy/gl/GL.hx",629,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_635_deleteTexture,"openfl._legacy.gl.GL","deleteTexture",0xec2c6aec,"openfl._legacy.gl.GL.deleteTexture","openfl/_legacy/gl/GL.hx",635,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_642_depthFunc,"openfl._legacy.gl.GL","depthFunc",0x36a026e3,"openfl._legacy.gl.GL.depthFunc","openfl/_legacy/gl/GL.hx",642,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_647_depthMask,"openfl._legacy.gl.GL","depthMask",0x3b317c8b,"openfl._legacy.gl.GL.depthMask","openfl/_legacy/gl/GL.hx",647,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_652_depthRange,"openfl._legacy.gl.GL","depthRange",0x7118953e,"openfl._legacy.gl.GL.depthRange","openfl/_legacy/gl/GL.hx",652,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_657_detachShader,"openfl._legacy.gl.GL","detachShader",0x1513b55c,"openfl._legacy.gl.GL.detachShader","openfl/_legacy/gl/GL.hx",657,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_662_disable,"openfl._legacy.gl.GL","disable",0xea44d3e4,"openfl._legacy.gl.GL.disable","openfl/_legacy/gl/GL.hx",662,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_667_disableVertexAttribArray,"openfl._legacy.gl.GL","disableVertexAttribArray",0x5f610467,"openfl._legacy.gl.GL.disableVertexAttribArray","openfl/_legacy/gl/GL.hx",667,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_672_drawArrays,"openfl._legacy.gl.GL","drawArrays",0x2a40ef62,"openfl._legacy.gl.GL.drawArrays","openfl/_legacy/gl/GL.hx",672,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_677_drawElements,"openfl._legacy.gl.GL","drawElements",0x841da6df,"openfl._legacy.gl.GL.drawElements","openfl/_legacy/gl/GL.hx",677,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_682_enable,"openfl._legacy.gl.GL","enable",0xdf879807,"openfl._legacy.gl.GL.enable","openfl/_legacy/gl/GL.hx",682,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_687_enableVertexAttribArray,"openfl._legacy.gl.GL","enableVertexAttribArray",0x666b68e4,"openfl._legacy.gl.GL.enableVertexAttribArray","openfl/_legacy/gl/GL.hx",687,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_692_finish,"openfl._legacy.gl.GL","finish",0x6d7f29d7,"openfl._legacy.gl.GL.finish","openfl/_legacy/gl/GL.hx",692,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_697_flush,"openfl._legacy.gl.GL","flush",0xf4b815c0,"openfl._legacy.gl.GL.flush","openfl/_legacy/gl/GL.hx",697,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_702_framebufferRenderbuffer,"openfl._legacy.gl.GL","framebufferRenderbuffer",0xf0c3ff5f,"openfl._legacy.gl.GL.framebufferRenderbuffer","openfl/_legacy/gl/GL.hx",702,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_707_framebufferTexture2D,"openfl._legacy.gl.GL","framebufferTexture2D",0x81866f44,"openfl._legacy.gl.GL.framebufferTexture2D","openfl/_legacy/gl/GL.hx",707,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_712_frontFace,"openfl._legacy.gl.GL","frontFace",0x1d18e2e2,"openfl._legacy.gl.GL.frontFace","openfl/_legacy/gl/GL.hx",712,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_717_generateMipmap,"openfl._legacy.gl.GL","generateMipmap",0x5618e421,"openfl._legacy.gl.GL.generateMipmap","openfl/_legacy/gl/GL.hx",717,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_722_getActiveAttrib,"openfl._legacy.gl.GL","getActiveAttrib",0x11c35162,"openfl._legacy.gl.GL.getActiveAttrib","openfl/_legacy/gl/GL.hx",722,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_727_getActiveUniform,"openfl._legacy.gl.GL","getActiveUniform",0xf55aac1c,"openfl._legacy.gl.GL.getActiveUniform","openfl/_legacy/gl/GL.hx",727,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_732_getAttachedShaders,"openfl._legacy.gl.GL","getAttachedShaders",0xa6714e38,"openfl._legacy.gl.GL.getAttachedShaders","openfl/_legacy/gl/GL.hx",732,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_737_getAttribLocation,"openfl._legacy.gl.GL","getAttribLocation",0x89eb57d1,"openfl._legacy.gl.GL.getAttribLocation","openfl/_legacy/gl/GL.hx",737,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_742_getBufferParameter,"openfl._legacy.gl.GL","getBufferParameter",0x27ae7817,"openfl._legacy.gl.GL.getBufferParameter","openfl/_legacy/gl/GL.hx",742,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_746_getContextAttributes,"openfl._legacy.gl.GL","getContextAttributes",0x0b45e2b4,"openfl._legacy.gl.GL.getContextAttributes","openfl/_legacy/gl/GL.hx",746,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_755_getError,"openfl._legacy.gl.GL","getError",0x68f12dd6,"openfl._legacy.gl.GL.getError","openfl/_legacy/gl/GL.hx",755,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_761_getExtension,"openfl._legacy.gl.GL","getExtension",0x1ecd148d,"openfl._legacy.gl.GL.getExtension","openfl/_legacy/gl/GL.hx",761,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_766_getFramebufferAttachmentParameter,"openfl._legacy.gl.GL","getFramebufferAttachmentParameter",0xdfa3b48b,"openfl._legacy.gl.GL.getFramebufferAttachmentParameter","openfl/_legacy/gl/GL.hx",766,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_771_getParameter,"openfl._legacy.gl.GL","getParameter",0x826cb6b7,"openfl._legacy.gl.GL.getParameter","openfl/_legacy/gl/GL.hx",771,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_776_getProgramInfoLog,"openfl._legacy.gl.GL","getProgramInfoLog",0xface2ec4,"openfl._legacy.gl.GL.getProgramInfoLog","openfl/_legacy/gl/GL.hx",776,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_781_getProgramParameter,"openfl._legacy.gl.GL","getProgramParameter",0x1e7e3737,"openfl._legacy.gl.GL.getProgramParameter","openfl/_legacy/gl/GL.hx",781,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_786_getRenderbufferParameter,"openfl._legacy.gl.GL","getRenderbufferParameter",0x51c45c01,"openfl._legacy.gl.GL.getRenderbufferParameter","openfl/_legacy/gl/GL.hx",786,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_791_getShaderInfoLog,"openfl._legacy.gl.GL","getShaderInfoLog",0x11d5341f,"openfl._legacy.gl.GL.getShaderInfoLog","openfl/_legacy/gl/GL.hx",791,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_796_getShaderParameter,"openfl._legacy.gl.GL","getShaderParameter",0x49558952,"openfl._legacy.gl.GL.getShaderParameter","openfl/_legacy/gl/GL.hx",796,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_801_getShaderPrecisionFormat,"openfl._legacy.gl.GL","getShaderPrecisionFormat",0xe3bc537e,"openfl._legacy.gl.GL.getShaderPrecisionFormat","openfl/_legacy/gl/GL.hx",801,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_806_getShaderSource,"openfl._legacy.gl.GL","getShaderSource",0x73a56992,"openfl._legacy.gl.GL.getShaderSource","openfl/_legacy/gl/GL.hx",806,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_810_getSupportedExtensions,"openfl._legacy.gl.GL","getSupportedExtensions",0x2647aa70,"openfl._legacy.gl.GL.getSupportedExtensions","openfl/_legacy/gl/GL.hx",810,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_818_getTexParameter,"openfl._legacy.gl.GL","getTexParameter",0x81745e74,"openfl._legacy.gl.GL.getTexParameter","openfl/_legacy/gl/GL.hx",818,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_823_getUniform,"openfl._legacy.gl.GL","getUniform",0x3552c2c2,"openfl._legacy.gl.GL.getUniform","openfl/_legacy/gl/GL.hx",823,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_828_getUniformLocation,"openfl._legacy.gl.GL","getUniformLocation",0x62ce7f17,"openfl._legacy.gl.GL.getUniformLocation","openfl/_legacy/gl/GL.hx",828,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_833_getVertexAttrib,"openfl._legacy.gl.GL","getVertexAttrib",0x51bcf580,"openfl._legacy.gl.GL.getVertexAttrib","openfl/_legacy/gl/GL.hx",833,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_838_getVertexAttribOffset,"openfl._legacy.gl.GL","getVertexAttribOffset",0xb0f22133,"openfl._legacy.gl.GL.getVertexAttribOffset","openfl/_legacy/gl/GL.hx",838,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_843_hint,"openfl._legacy.gl.GL","hint",0xf939fe0b,"openfl._legacy.gl.GL.hint","openfl/_legacy/gl/GL.hx",843,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_848_isBuffer,"openfl._legacy.gl.GL","isBuffer",0xbeeeab0e,"openfl._legacy.gl.GL.isBuffer","openfl/_legacy/gl/GL.hx",848,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_855_isEnabled,"openfl._legacy.gl.GL","isEnabled",0x1e8762b3,"openfl._legacy.gl.GL.isEnabled","openfl/_legacy/gl/GL.hx",855,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_860_isFramebuffer,"openfl._legacy.gl.GL","isFramebuffer",0x722e741f,"openfl._legacy.gl.GL.isFramebuffer","openfl/_legacy/gl/GL.hx",860,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_865_isProgram,"openfl._legacy.gl.GL","isProgram",0x944fa8b6,"openfl._legacy.gl.GL.isProgram","openfl/_legacy/gl/GL.hx",865,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_870_isRenderbuffer,"openfl._legacy.gl.GL","isRenderbuffer",0xfd033964,"openfl._legacy.gl.GL.isRenderbuffer","openfl/_legacy/gl/GL.hx",870,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_875_isShader,"openfl._legacy.gl.GL","isShader",0x0b7aad33,"openfl._legacy.gl.GL.isShader","openfl/_legacy/gl/GL.hx",875,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_880_isTexture,"openfl._legacy.gl.GL","isTexture",0x3f37270d,"openfl._legacy.gl.GL.isTexture","openfl/_legacy/gl/GL.hx",880,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_885_lineWidth,"openfl._legacy.gl.GL","lineWidth",0xadb59a6e,"openfl._legacy.gl.GL.lineWidth","openfl/_legacy/gl/GL.hx",885,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_890_linkProgram,"openfl._legacy.gl.GL","linkProgram",0xd44ac5a6,"openfl._legacy.gl.GL.linkProgram","openfl/_legacy/gl/GL.hx",890,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_895_load,"openfl._legacy.gl.GL","load",0xfbe35aaa,"openfl._legacy.gl.GL.load","openfl/_legacy/gl/GL.hx",895,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_908_pixelStorei,"openfl._legacy.gl.GL","pixelStorei",0xcb974c8a,"openfl._legacy.gl.GL.pixelStorei","openfl/_legacy/gl/GL.hx",908,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_913_polygonOffset,"openfl._legacy.gl.GL","polygonOffset",0x550f34a9,"openfl._legacy.gl.GL.polygonOffset","openfl/_legacy/gl/GL.hx",913,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_918_readPixels,"openfl._legacy.gl.GL","readPixels",0xb6b2cea7,"openfl._legacy.gl.GL.readPixels","openfl/_legacy/gl/GL.hx",918,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_923_renderbufferStorage,"openfl._legacy.gl.GL","renderbufferStorage",0x0f521501,"openfl._legacy.gl.GL.renderbufferStorage","openfl/_legacy/gl/GL.hx",923,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_928_sampleCoverage,"openfl._legacy.gl.GL","sampleCoverage",0x368c75b6,"openfl._legacy.gl.GL.sampleCoverage","openfl/_legacy/gl/GL.hx",928,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_933_scissor,"openfl._legacy.gl.GL","scissor",0x3dd39218,"openfl._legacy.gl.GL.scissor","openfl/_legacy/gl/GL.hx",933,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_938_shaderSource,"openfl._legacy.gl.GL","shaderSource",0xcc803264,"openfl._legacy.gl.GL.shaderSource","openfl/_legacy/gl/GL.hx",938,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_943_stencilFunc,"openfl._legacy.gl.GL","stencilFunc",0x8b8d9b5c,"openfl._legacy.gl.GL.stencilFunc","openfl/_legacy/gl/GL.hx",943,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_948_stencilFuncSeparate,"openfl._legacy.gl.GL","stencilFuncSeparate",0x3ab032df,"openfl._legacy.gl.GL.stencilFuncSeparate","openfl/_legacy/gl/GL.hx",948,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_953_stencilMask,"openfl._legacy.gl.GL","stencilMask",0x901ef104,"openfl._legacy.gl.GL.stencilMask","openfl/_legacy/gl/GL.hx",953,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_958_stencilMaskSeparate,"openfl._legacy.gl.GL","stencilMaskSeparate",0x4e8b7087,"openfl._legacy.gl.GL.stencilMaskSeparate","openfl/_legacy/gl/GL.hx",958,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_963_stencilOp,"openfl._legacy.gl.GL","stencilOp",0xf3445b39,"openfl._legacy.gl.GL.stencilOp","openfl/_legacy/gl/GL.hx",963,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_968_stencilOpSeparate,"openfl._legacy.gl.GL","stencilOpSeparate",0x802597bc,"openfl._legacy.gl.GL.stencilOpSeparate","openfl/_legacy/gl/GL.hx",968,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_973_texImage2D,"openfl._legacy.gl.GL","texImage2D",0xe9f4784a,"openfl._legacy.gl.GL.texImage2D","openfl/_legacy/gl/GL.hx",973,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_978_texParameterf,"openfl._legacy.gl.GL","texParameterf",0x2af33660,"openfl._legacy.gl.GL.texParameterf","openfl/_legacy/gl/GL.hx",978,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_983_texParameteri,"openfl._legacy.gl.GL","texParameteri",0x2af33663,"openfl._legacy.gl.GL.texParameteri","openfl/_legacy/gl/GL.hx",983,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_988_texSubImage2D,"openfl._legacy.gl.GL","texSubImage2D",0x17523e10,"openfl._legacy.gl.GL.texSubImage2D","openfl/_legacy/gl/GL.hx",988,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_993_uniform1f,"openfl._legacy.gl.GL","uniform1f",0xa4360245,"openfl._legacy.gl.GL.uniform1f","openfl/_legacy/gl/GL.hx",993,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_998_uniform1fv,"openfl._legacy.gl.GL","uniform1fv",0x0b0bfa91,"openfl._legacy.gl.GL.uniform1fv","openfl/_legacy/gl/GL.hx",998,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1003_uniform1i,"openfl._legacy.gl.GL","uniform1i",0xa4360248,"openfl._legacy.gl.GL.uniform1i","openfl/_legacy/gl/GL.hx",1003,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1008_uniform1iv,"openfl._legacy.gl.GL","uniform1iv",0x0b0bfd2e,"openfl._legacy.gl.GL.uniform1iv","openfl/_legacy/gl/GL.hx",1008,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1013_uniform2f,"openfl._legacy.gl.GL","uniform2f",0xa4360324,"openfl._legacy.gl.GL.uniform2f","openfl/_legacy/gl/GL.hx",1013,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1018_uniform2fv,"openfl._legacy.gl.GL","uniform2fv",0x0b0cbcd2,"openfl._legacy.gl.GL.uniform2fv","openfl/_legacy/gl/GL.hx",1018,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1023_uniform2i,"openfl._legacy.gl.GL","uniform2i",0xa4360327,"openfl._legacy.gl.GL.uniform2i","openfl/_legacy/gl/GL.hx",1023,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1028_uniform2iv,"openfl._legacy.gl.GL","uniform2iv",0x0b0cbf6f,"openfl._legacy.gl.GL.uniform2iv","openfl/_legacy/gl/GL.hx",1028,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1033_uniform3f,"openfl._legacy.gl.GL","uniform3f",0xa4360403,"openfl._legacy.gl.GL.uniform3f","openfl/_legacy/gl/GL.hx",1033,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1038_uniform3fv,"openfl._legacy.gl.GL","uniform3fv",0x0b0d7f13,"openfl._legacy.gl.GL.uniform3fv","openfl/_legacy/gl/GL.hx",1038,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1043_uniform3i,"openfl._legacy.gl.GL","uniform3i",0xa4360406,"openfl._legacy.gl.GL.uniform3i","openfl/_legacy/gl/GL.hx",1043,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1048_uniform3iv,"openfl._legacy.gl.GL","uniform3iv",0x0b0d81b0,"openfl._legacy.gl.GL.uniform3iv","openfl/_legacy/gl/GL.hx",1048,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1053_uniform4f,"openfl._legacy.gl.GL","uniform4f",0xa43604e2,"openfl._legacy.gl.GL.uniform4f","openfl/_legacy/gl/GL.hx",1053,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1058_uniform4fv,"openfl._legacy.gl.GL","uniform4fv",0x0b0e4154,"openfl._legacy.gl.GL.uniform4fv","openfl/_legacy/gl/GL.hx",1058,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1063_uniform4i,"openfl._legacy.gl.GL","uniform4i",0xa43604e5,"openfl._legacy.gl.GL.uniform4i","openfl/_legacy/gl/GL.hx",1063,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1068_uniform4iv,"openfl._legacy.gl.GL","uniform4iv",0x0b0e43f1,"openfl._legacy.gl.GL.uniform4iv","openfl/_legacy/gl/GL.hx",1068,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1078_uniformMatrix2fv,"openfl._legacy.gl.GL","uniformMatrix2fv",0xe3660111,"openfl._legacy.gl.GL.uniformMatrix2fv","openfl/_legacy/gl/GL.hx",1078,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1088_uniformMatrix3fv,"openfl._legacy.gl.GL","uniformMatrix3fv",0xe366c352,"openfl._legacy.gl.GL.uniformMatrix3fv","openfl/_legacy/gl/GL.hx",1088,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1099_uniformMatrix4fv,"openfl._legacy.gl.GL","uniformMatrix4fv",0xe3678593,"openfl._legacy.gl.GL.uniformMatrix4fv","openfl/_legacy/gl/GL.hx",1099,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1104_uniformMatrix3D,"openfl._legacy.gl.GL","uniformMatrix3D",0xcd5c4c82,"openfl._legacy.gl.GL.uniformMatrix3D","openfl/_legacy/gl/GL.hx",1104,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1109_useProgram,"openfl._legacy.gl.GL","useProgram",0x27396881,"openfl._legacy.gl.GL.useProgram","openfl/_legacy/gl/GL.hx",1109,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1114_validateProgram,"openfl._legacy.gl.GL","validateProgram",0x9db0468a,"openfl._legacy.gl.GL.validateProgram","openfl/_legacy/gl/GL.hx",1114,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1119_vertexAttrib1f,"openfl._legacy.gl.GL","vertexAttrib1f",0x4ec1a1e7,"openfl._legacy.gl.GL.vertexAttrib1f","openfl/_legacy/gl/GL.hx",1119,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1124_vertexAttrib1fv,"openfl._legacy.gl.GL","vertexAttrib1fv",0x9aac08af,"openfl._legacy.gl.GL.vertexAttrib1fv","openfl/_legacy/gl/GL.hx",1124,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1129_vertexAttrib2f,"openfl._legacy.gl.GL","vertexAttrib2f",0x4ec1a2c6,"openfl._legacy.gl.GL.vertexAttrib2f","openfl/_legacy/gl/GL.hx",1129,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1134_vertexAttrib2fv,"openfl._legacy.gl.GL","vertexAttrib2fv",0x9aaccaf0,"openfl._legacy.gl.GL.vertexAttrib2fv","openfl/_legacy/gl/GL.hx",1134,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1139_vertexAttrib3f,"openfl._legacy.gl.GL","vertexAttrib3f",0x4ec1a3a5,"openfl._legacy.gl.GL.vertexAttrib3f","openfl/_legacy/gl/GL.hx",1139,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1144_vertexAttrib3fv,"openfl._legacy.gl.GL","vertexAttrib3fv",0x9aad8d31,"openfl._legacy.gl.GL.vertexAttrib3fv","openfl/_legacy/gl/GL.hx",1144,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1149_vertexAttrib4f,"openfl._legacy.gl.GL","vertexAttrib4f",0x4ec1a484,"openfl._legacy.gl.GL.vertexAttrib4f","openfl/_legacy/gl/GL.hx",1149,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1154_vertexAttrib4fv,"openfl._legacy.gl.GL","vertexAttrib4fv",0x9aae4f72,"openfl._legacy.gl.GL.vertexAttrib4fv","openfl/_legacy/gl/GL.hx",1154,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1159_vertexAttribPointer,"openfl._legacy.gl.GL","vertexAttribPointer",0xc797788b,"openfl._legacy.gl.GL.vertexAttribPointer","openfl/_legacy/gl/GL.hx",1159,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1164_viewport,"openfl._legacy.gl.GL","viewport",0x32959eea,"openfl._legacy.gl.GL.viewport","openfl/_legacy/gl/GL.hx",1164,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1175_get_drawingBufferHeight,"openfl._legacy.gl.GL","get_drawingBufferHeight",0xc31cde18,"openfl._legacy.gl.GL.get_drawingBufferHeight","openfl/_legacy/gl/GL.hx",1175,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1176_get_drawingBufferWidth,"openfl._legacy.gl.GL","get_drawingBufferWidth",0xa9f570f5,"openfl._legacy.gl.GL.get_drawingBufferWidth","openfl/_legacy/gl/GL.hx",1176,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1177_get_version,"openfl._legacy.gl.GL","get_version",0x4dbb5f2b,"openfl._legacy.gl.GL.get_version","openfl/_legacy/gl/GL.hx",1177,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_18_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",18,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_19_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",19,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_20_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",20,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_23_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",23,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_24_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",24,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_25_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",25,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_26_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",26,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_27_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",27,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_28_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",28,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_29_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",29,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_41_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",41,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_42_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",42,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_43_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",43,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_44_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",44,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_45_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",45,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_46_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",46,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_47_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",47,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_48_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",48,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_53_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",53,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_54_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",54,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_55_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",55,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_61_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",61,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_62_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",62,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_63_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",63,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_64_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",64,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_67_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",67,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_68_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",68,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_71_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",71,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_72_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",72,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_73_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",73,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_74_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",74,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_75_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",75,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_76_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",76,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_77_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",77,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_78_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",78,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_79_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",79,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_82_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",82,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_83_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",83,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_84_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",84,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_85_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",85,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_87_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",87,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_88_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",88,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_89_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",89,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_91_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",91,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_92_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",92,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_94_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",94,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_97_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",97,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_98_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",98,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_99_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",99,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_112_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",112,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_113_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",113,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_114_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",114,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_115_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",115,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_116_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",116,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_117_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",117,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_118_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",118,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_119_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",119,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_120_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",120,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_123_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",123,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_124_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",124,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_125_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",125,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_126_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",126,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_127_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",127,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_130_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",130,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_131_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",131,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_134_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",134,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_135_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",135,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_136_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",136,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_137_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",137,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_138_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",138,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_139_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",139,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_140_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",140,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_141_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",141,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_142_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",142,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_143_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",143,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_144_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",144,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_145_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",145,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_146_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",146,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_147_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",147,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_148_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",148,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_149_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",149,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_150_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",150,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_151_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",151,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_152_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",152,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_153_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",153,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_154_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",154,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_155_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",155,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_156_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",156,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_157_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",157,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_158_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",158,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_159_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",159,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_161_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",161,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_162_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",162,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_163_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",163,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_164_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",164,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_165_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",165,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_166_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",166,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_167_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",167,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_168_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",168,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_169_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",169,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_170_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",170,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_171_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",171,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_172_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",172,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_173_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",173,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_174_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",174,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_176_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",176,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_177_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",177,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_178_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",178,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_179_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",179,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_180_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",180,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_181_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",181,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_188_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",188,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_191_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",191,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_192_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",192,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_193_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",193,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_196_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",196,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_199_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",199,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_200_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",200,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_201_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",201,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_202_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",202,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_203_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",203,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_204_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",204,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_205_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",205,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_208_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",208,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_209_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",209,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_210_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",210,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_211_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",211,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_212_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",212,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_213_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",213,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_217_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",217,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_218_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",218,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_219_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",219,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_222_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",222,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_223_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",223,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_224_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",224,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_225_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",225,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_226_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",226,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_227_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",227,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_228_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",228,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_229_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",229,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_230_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",230,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_231_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",231,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_232_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",232,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_233_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",233,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_234_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",234,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_235_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",235,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_236_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",236,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_237_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",237,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_238_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",238,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_239_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",239,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_242_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",242,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_243_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",243,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_244_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",244,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_245_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",245,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_246_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",246,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_247_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",247,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_248_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",248,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_249_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",249,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_253_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",253,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_254_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",254,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_255_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",255,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_256_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",256,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_257_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",257,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_258_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",258,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_259_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",259,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_262_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",262,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_263_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",263,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_264_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",264,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_267_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",267,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_268_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",268,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_273_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",273,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_274_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",274,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_275_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",275,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_276_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",276,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_279_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",279,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_280_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",280,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_281_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",281,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_282_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",282,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_285_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",285,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_286_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",286,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_288_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",288,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_289_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",289,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_290_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",290,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_291_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",291,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_292_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",292,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_293_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",293,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_294_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",294,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_295_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",295,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_296_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",296,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_299_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",299,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_300_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",300,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_301_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",301,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_302_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",302,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_303_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",303,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_304_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",304,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_305_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",305,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_306_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",306,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_307_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",307,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_308_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",308,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_309_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",309,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_310_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",310,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_311_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",311,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_312_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",312,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_313_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",313,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_314_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",314,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_315_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",315,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_316_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",316,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_317_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",317,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_318_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",318,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_319_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",319,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_320_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",320,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_321_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",321,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_322_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",322,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_323_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",323,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_324_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",324,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_325_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",325,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_326_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",326,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_327_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",327,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_328_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",328,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_329_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",329,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_330_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",330,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_331_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",331,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_334_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",334,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_335_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",335,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_336_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",336,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_339_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",339,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_340_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",340,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_341_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",341,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_342_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",342,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_343_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",343,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_344_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",344,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_345_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",345,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_346_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",346,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_347_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",347,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_348_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",348,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_349_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",349,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_350_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",350,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_351_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",351,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_352_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",352,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_353_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",353,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_356_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",356,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_357_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",357,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_358_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",358,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_359_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",359,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_360_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",360,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_361_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",361,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_362_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",362,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_365_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",365,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_366_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",366,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_369_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",369,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_372_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",372,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_373_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",373,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_374_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",374,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_375_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",375,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_376_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",376,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_377_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",377,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_380_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",380,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_381_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",381,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_383_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",383,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_384_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",384,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_385_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",385,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_386_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",386,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_387_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",387,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_388_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",388,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_389_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",389,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_391_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",391,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_392_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",392,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_393_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",393,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_394_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",394,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_395_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",395,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_396_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",396,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_397_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",397,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_398_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",398,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_399_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",399,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_401_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",401,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_402_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",402,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_403_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",403,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_404_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",404,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_406_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",406,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_407_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",407,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_408_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",408,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_409_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",409,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_411_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",411,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_413_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",413,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_414_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",414,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_415_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",415,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_416_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",416,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_417_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",417,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_419_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",419,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_420_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",420,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_421_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",421,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_423_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",423,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_426_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",426,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_427_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",427,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_428_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",428,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_429_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",429,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_430_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",430,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1187_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1187,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1188_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1188,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1189_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1189,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1190_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1190,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1191_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1191,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1192_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1192,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1193_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1193,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1194_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1194,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1195_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1195,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1196_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1196,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1197_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1197,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1198_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1198,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1199_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1199,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1200_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1200,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1201_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1201,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1202_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1202,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1203_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1203,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1204_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1204,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1205_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1205,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1206_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1206,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1207_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1207,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1208_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1208,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1209_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1209,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1210_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1210,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1211_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1211,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1212_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1212,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1213_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1213,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1214_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1214,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1215_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1215,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1216_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1216,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1217_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1217,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1218_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1218,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1219_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1219,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1220_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1220,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1221_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1221,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1222_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1222,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1223_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1223,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1224_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1224,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1225_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1225,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1226_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1226,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1227_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1227,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1228_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1228,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1229_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1229,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1230_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1230,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1231_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1231,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1232_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1232,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1233_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1233,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1234_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1234,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1235_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1235,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1236_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1236,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1237_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1237,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1238_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1238,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1239_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1239,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1240_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1240,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1241_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1241,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1242_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1242,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1243_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1243,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1244_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1244,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1245_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1245,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1246_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1246,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1247_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1247,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1248_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1248,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1249_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1249,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1250_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1250,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1251_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1251,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1252_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1252,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1253_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1253,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1254_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1254,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1255_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1255,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1256_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1256,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1257_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1257,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1258_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1258,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1259_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1259,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1260_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1260,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1261_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1261,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1262_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1262,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1263_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1263,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1264_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1264,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1265_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1265,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1266_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1266,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1267_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1267,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1268_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1268,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1269_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1269,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1270_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1270,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1271_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1271,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1272_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1272,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1273_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1273,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1274_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1274,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1275_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1275,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1276_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1276,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1277_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1277,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1278_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1278,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1279_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1279,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1280_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1280,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1281_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1281,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1282_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1282,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1283_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1283,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1284_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1284,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1285_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1285,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1286_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1286,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1287_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1287,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1288_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1288,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1289_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1289,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1290_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1290,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1291_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1291,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1292_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1292,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1293_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1293,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1294_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1294,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1295_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1295,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1296_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1296,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1297_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1297,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1298_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1298,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1299_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1299,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1300_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1300,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1301_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1301,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1302_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1302,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1303_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1303,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1304_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1304,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1305_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1305,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1306_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1306,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1307_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1307,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1308_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1308,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1309_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1309,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1310_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1310,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1311_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1311,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1312_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1312,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1313_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1313,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1314_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1314,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1315_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1315,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1316_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1316,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1317_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1317,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1318_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1318,0x4e24c9f5)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8cd4b2a031400b_1319_boot,"openfl._legacy.gl.GL","boot",0xf54744b6,"openfl._legacy.gl.GL.boot","openfl/_legacy/gl/GL.hx",1319,0x4e24c9f5)
namespace openfl{
namespace _legacy{
namespace gl{

void GL_obj::__construct() { }

Dynamic GL_obj::__CreateEmpty() { return new GL_obj; }

void *GL_obj::_hx_vtable = 0;

Dynamic GL_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GL_obj > _hx_result = new GL_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GL_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x17eaf3fe;
}

int GL_obj::DEPTH_BUFFER_BIT;

int GL_obj::STENCIL_BUFFER_BIT;

int GL_obj::COLOR_BUFFER_BIT;

int GL_obj::POINTS;

int GL_obj::LINES;

int GL_obj::LINE_LOOP;

int GL_obj::LINE_STRIP;

int GL_obj::TRIANGLES;

int GL_obj::TRIANGLE_STRIP;

int GL_obj::TRIANGLE_FAN;

int GL_obj::ZERO;

int GL_obj::ONE;

int GL_obj::SRC_COLOR;

int GL_obj::ONE_MINUS_SRC_COLOR;

int GL_obj::SRC_ALPHA;

int GL_obj::ONE_MINUS_SRC_ALPHA;

int GL_obj::DST_ALPHA;

int GL_obj::ONE_MINUS_DST_ALPHA;

int GL_obj::DST_COLOR;

int GL_obj::ONE_MINUS_DST_COLOR;

int GL_obj::SRC_ALPHA_SATURATE;

int GL_obj::FUNC_ADD;

int GL_obj::BLEND_EQUATION;

int GL_obj::BLEND_EQUATION_RGB;

int GL_obj::BLEND_EQUATION_ALPHA;

int GL_obj::FUNC_SUBTRACT;

int GL_obj::FUNC_REVERSE_SUBTRACT;

int GL_obj::BLEND_DST_RGB;

int GL_obj::BLEND_SRC_RGB;

int GL_obj::BLEND_DST_ALPHA;

int GL_obj::BLEND_SRC_ALPHA;

int GL_obj::CONSTANT_COLOR;

int GL_obj::ONE_MINUS_CONSTANT_COLOR;

int GL_obj::CONSTANT_ALPHA;

int GL_obj::ONE_MINUS_CONSTANT_ALPHA;

int GL_obj::BLEND_COLOR;

int GL_obj::ARRAY_BUFFER;

int GL_obj::ELEMENT_ARRAY_BUFFER;

int GL_obj::ARRAY_BUFFER_BINDING;

int GL_obj::ELEMENT_ARRAY_BUFFER_BINDING;

int GL_obj::STREAM_DRAW;

int GL_obj::STATIC_DRAW;

int GL_obj::DYNAMIC_DRAW;

int GL_obj::BUFFER_SIZE;

int GL_obj::BUFFER_USAGE;

int GL_obj::CURRENT_VERTEX_ATTRIB;

int GL_obj::FRONT;

int GL_obj::BACK;

int GL_obj::FRONT_AND_BACK;

int GL_obj::CULL_FACE;

int GL_obj::BLEND;

int GL_obj::DITHER;

int GL_obj::STENCIL_TEST;

int GL_obj::DEPTH_TEST;

int GL_obj::SCISSOR_TEST;

int GL_obj::POLYGON_OFFSET_FILL;

int GL_obj::SAMPLE_ALPHA_TO_COVERAGE;

int GL_obj::SAMPLE_COVERAGE;

int GL_obj::NO_ERROR;

int GL_obj::INVALID_ENUM;

int GL_obj::INVALID_VALUE;

int GL_obj::INVALID_OPERATION;

int GL_obj::OUT_OF_MEMORY;

int GL_obj::CW;

int GL_obj::CCW;

int GL_obj::LINE_WIDTH;

int GL_obj::ALIASED_POINT_SIZE_RANGE;

int GL_obj::ALIASED_LINE_WIDTH_RANGE;

int GL_obj::CULL_FACE_MODE;

int GL_obj::FRONT_FACE;

int GL_obj::DEPTH_RANGE;

int GL_obj::DEPTH_WRITEMASK;

int GL_obj::DEPTH_CLEAR_VALUE;

int GL_obj::DEPTH_FUNC;

int GL_obj::STENCIL_CLEAR_VALUE;

int GL_obj::STENCIL_FUNC;

int GL_obj::STENCIL_FAIL;

int GL_obj::STENCIL_PASS_DEPTH_FAIL;

int GL_obj::STENCIL_PASS_DEPTH_PASS;

int GL_obj::STENCIL_REF;

int GL_obj::STENCIL_VALUE_MASK;

int GL_obj::STENCIL_WRITEMASK;

int GL_obj::STENCIL_BACK_FUNC;

int GL_obj::STENCIL_BACK_FAIL;

int GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL;

int GL_obj::STENCIL_BACK_PASS_DEPTH_PASS;

int GL_obj::STENCIL_BACK_REF;

int GL_obj::STENCIL_BACK_VALUE_MASK;

int GL_obj::STENCIL_BACK_WRITEMASK;

int GL_obj::VIEWPORT;

int GL_obj::SCISSOR_BOX;

int GL_obj::COLOR_CLEAR_VALUE;

int GL_obj::COLOR_WRITEMASK;

int GL_obj::UNPACK_ALIGNMENT;

int GL_obj::PACK_ALIGNMENT;

int GL_obj::MAX_TEXTURE_SIZE;

int GL_obj::MAX_VIEWPORT_DIMS;

int GL_obj::SUBPIXEL_BITS;

int GL_obj::RED_BITS;

int GL_obj::GREEN_BITS;

int GL_obj::BLUE_BITS;

int GL_obj::ALPHA_BITS;

int GL_obj::DEPTH_BITS;

int GL_obj::STENCIL_BITS;

int GL_obj::POLYGON_OFFSET_UNITS;

int GL_obj::POLYGON_OFFSET_FACTOR;

int GL_obj::TEXTURE_BINDING_2D;

int GL_obj::SAMPLE_BUFFERS;

int GL_obj::SAMPLES;

int GL_obj::SAMPLE_COVERAGE_VALUE;

int GL_obj::SAMPLE_COVERAGE_INVERT;

int GL_obj::COMPRESSED_TEXTURE_FORMATS;

int GL_obj::DONT_CARE;

int GL_obj::FASTEST;

int GL_obj::NICEST;

int GL_obj::GENERATE_MIPMAP_HINT;

int GL_obj::BYTE;

int GL_obj::UNSIGNED_BYTE;

int GL_obj::SHORT;

int GL_obj::UNSIGNED_SHORT;

int GL_obj::INT;

int GL_obj::UNSIGNED_INT;

int GL_obj::FLOAT;

int GL_obj::DEPTH_COMPONENT;

int GL_obj::ALPHA;

int GL_obj::RGB;

int GL_obj::RGBA;

int GL_obj::LUMINANCE;

int GL_obj::LUMINANCE_ALPHA;

int GL_obj::UNSIGNED_SHORT_4_4_4_4;

int GL_obj::UNSIGNED_SHORT_5_5_5_1;

int GL_obj::UNSIGNED_SHORT_5_6_5;

int GL_obj::FRAGMENT_SHADER;

int GL_obj::VERTEX_SHADER;

int GL_obj::MAX_VERTEX_ATTRIBS;

int GL_obj::MAX_VERTEX_UNIFORM_VECTORS;

int GL_obj::MAX_VARYING_VECTORS;

int GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS;

int GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS;

int GL_obj::MAX_TEXTURE_IMAGE_UNITS;

int GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS;

int GL_obj::SHADER_TYPE;

int GL_obj::DELETE_STATUS;

int GL_obj::LINK_STATUS;

int GL_obj::VALIDATE_STATUS;

int GL_obj::ATTACHED_SHADERS;

int GL_obj::ACTIVE_UNIFORMS;

int GL_obj::ACTIVE_ATTRIBUTES;

int GL_obj::SHADING_LANGUAGE_VERSION;

int GL_obj::CURRENT_PROGRAM;

int GL_obj::NEVER;

int GL_obj::LESS;

int GL_obj::EQUAL;

int GL_obj::LEQUAL;

int GL_obj::GREATER;

int GL_obj::NOTEQUAL;

int GL_obj::GEQUAL;

int GL_obj::ALWAYS;

int GL_obj::KEEP;

int GL_obj::REPLACE;

int GL_obj::INCR;

int GL_obj::DECR;

int GL_obj::INVERT;

int GL_obj::INCR_WRAP;

int GL_obj::DECR_WRAP;

int GL_obj::VENDOR;

int GL_obj::RENDERER;

int GL_obj::VERSION;

int GL_obj::NEAREST;

int GL_obj::LINEAR;

int GL_obj::NEAREST_MIPMAP_NEAREST;

int GL_obj::LINEAR_MIPMAP_NEAREST;

int GL_obj::NEAREST_MIPMAP_LINEAR;

int GL_obj::LINEAR_MIPMAP_LINEAR;

int GL_obj::TEXTURE_MAG_FILTER;

int GL_obj::TEXTURE_MIN_FILTER;

int GL_obj::TEXTURE_WRAP_S;

int GL_obj::TEXTURE_WRAP_T;

int GL_obj::TEXTURE_2D;

int GL_obj::TEXTURE;

int GL_obj::TEXTURE_CUBE_MAP;

int GL_obj::TEXTURE_BINDING_CUBE_MAP;

int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X;

int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X;

int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y;

int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y;

int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z;

int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z;

int GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE;

int GL_obj::TEXTURE0;

int GL_obj::TEXTURE1;

int GL_obj::TEXTURE2;

int GL_obj::TEXTURE3;

int GL_obj::TEXTURE4;

int GL_obj::TEXTURE5;

int GL_obj::TEXTURE6;

int GL_obj::TEXTURE7;

int GL_obj::TEXTURE8;

int GL_obj::TEXTURE9;

int GL_obj::TEXTURE10;

int GL_obj::TEXTURE11;

int GL_obj::TEXTURE12;

int GL_obj::TEXTURE13;

int GL_obj::TEXTURE14;

int GL_obj::TEXTURE15;

int GL_obj::TEXTURE16;

int GL_obj::TEXTURE17;

int GL_obj::TEXTURE18;

int GL_obj::TEXTURE19;

int GL_obj::TEXTURE20;

int GL_obj::TEXTURE21;

int GL_obj::TEXTURE22;

int GL_obj::TEXTURE23;

int GL_obj::TEXTURE24;

int GL_obj::TEXTURE25;

int GL_obj::TEXTURE26;

int GL_obj::TEXTURE27;

int GL_obj::TEXTURE28;

int GL_obj::TEXTURE29;

int GL_obj::TEXTURE30;

int GL_obj::TEXTURE31;

int GL_obj::ACTIVE_TEXTURE;

int GL_obj::REPEAT;

int GL_obj::CLAMP_TO_EDGE;

int GL_obj::MIRRORED_REPEAT;

int GL_obj::FLOAT_VEC2;

int GL_obj::FLOAT_VEC3;

int GL_obj::FLOAT_VEC4;

int GL_obj::INT_VEC2;

int GL_obj::INT_VEC3;

int GL_obj::INT_VEC4;

int GL_obj::BOOL;

int GL_obj::BOOL_VEC2;

int GL_obj::BOOL_VEC3;

int GL_obj::BOOL_VEC4;

int GL_obj::FLOAT_MAT2;

int GL_obj::FLOAT_MAT3;

int GL_obj::FLOAT_MAT4;

int GL_obj::SAMPLER_2D;

int GL_obj::SAMPLER_CUBE;

int GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED;

int GL_obj::VERTEX_ATTRIB_ARRAY_SIZE;

int GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE;

int GL_obj::VERTEX_ATTRIB_ARRAY_TYPE;

int GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED;

int GL_obj::VERTEX_ATTRIB_ARRAY_POINTER;

int GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;

int GL_obj::VERTEX_PROGRAM_POINT_SIZE;

int GL_obj::POINT_SPRITE;

int GL_obj::COMPILE_STATUS;

int GL_obj::LOW_FLOAT;

int GL_obj::MEDIUM_FLOAT;

int GL_obj::HIGH_FLOAT;

int GL_obj::LOW_INT;

int GL_obj::MEDIUM_INT;

int GL_obj::HIGH_INT;

int GL_obj::FRAMEBUFFER;

int GL_obj::RENDERBUFFER;

int GL_obj::RGBA4;

int GL_obj::RGB5_A1;

int GL_obj::RGB565;

int GL_obj::DEPTH_COMPONENT16;

int GL_obj::STENCIL_INDEX;

int GL_obj::STENCIL_INDEX8;

int GL_obj::DEPTH_STENCIL;

int GL_obj::RENDERBUFFER_WIDTH;

int GL_obj::RENDERBUFFER_HEIGHT;

int GL_obj::RENDERBUFFER_INTERNAL_FORMAT;

int GL_obj::RENDERBUFFER_RED_SIZE;

int GL_obj::RENDERBUFFER_GREEN_SIZE;

int GL_obj::RENDERBUFFER_BLUE_SIZE;

int GL_obj::RENDERBUFFER_ALPHA_SIZE;

int GL_obj::RENDERBUFFER_DEPTH_SIZE;

int GL_obj::RENDERBUFFER_STENCIL_SIZE;

int GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;

int GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;

int GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;

int GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;

int GL_obj::COLOR_ATTACHMENT0;

int GL_obj::DEPTH_ATTACHMENT;

int GL_obj::STENCIL_ATTACHMENT;

int GL_obj::DEPTH_STENCIL_ATTACHMENT;

int GL_obj::NONE;

int GL_obj::FRAMEBUFFER_COMPLETE;

int GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT;

int GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;

int GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS;

int GL_obj::FRAMEBUFFER_UNSUPPORTED;

int GL_obj::FRAMEBUFFER_BINDING;

int GL_obj::RENDERBUFFER_BINDING;

int GL_obj::MAX_RENDERBUFFER_SIZE;

int GL_obj::INVALID_FRAMEBUFFER_OPERATION;

int GL_obj::UNPACK_FLIP_Y_WEBGL;

int GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL;

int GL_obj::CONTEXT_LOST_WEBGL;

int GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL;

int GL_obj::BROWSER_DEFAULT_WEBGL;

int GL_obj::drawingBufferHeight;

int GL_obj::drawingBufferWidth;

int GL_obj::version;

 ::openfl::_legacy::gl::GLFramebuffer GL_obj::defaultFramebuffer;

void GL_obj::activeTexture(int texture){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_438_activeTexture)
HXDLIN( 438)		::openfl::_legacy::gl::GL_obj::lime_gl_active_texture(texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,activeTexture,(void))

void GL_obj::attachShader( ::openfl::_legacy::gl::GLProgram program, ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_441_attachShader)
HXLINE( 442)		program->attach(shader);
HXLINE( 443)		::openfl::_legacy::gl::GL_obj::lime_gl_attach_shader(program->id,shader->id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,attachShader,(void))

void GL_obj::bindAttribLocation( ::openfl::_legacy::gl::GLProgram program,int index,::String name){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_448_bindAttribLocation)
HXDLIN( 448)		::openfl::_legacy::gl::GL_obj::lime_gl_bind_attrib_location(program->id,index,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bindAttribLocation,(void))

void GL_obj::bindBitmapDataTexture( ::openfl::_legacy::display::BitmapData texture){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_453_bindBitmapDataTexture)
HXDLIN( 453)		::openfl::_legacy::gl::GL_obj::lime_gl_bind_bitmap_data_texture(texture->_hx___handle);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,bindBitmapDataTexture,(void))

void GL_obj::bindBuffer(int target, ::openfl::_legacy::gl::GLBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_458_bindBuffer)
HXDLIN( 458)		 ::Dynamic _hx_tmp;
HXDLIN( 458)		if (hx::IsNull( buffer )) {
HXDLIN( 458)			_hx_tmp = null();
            		}
            		else {
HXDLIN( 458)			_hx_tmp = buffer->id;
            		}
HXDLIN( 458)		::openfl::_legacy::gl::GL_obj::lime_gl_bind_buffer(target,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindBuffer,(void))

void GL_obj::bindFramebuffer(int target, ::openfl::_legacy::gl::GLFramebuffer framebuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_466_bindFramebuffer)
HXDLIN( 466)		 ::Dynamic _hx_tmp;
HXDLIN( 466)		if (hx::IsNull( framebuffer )) {
HXDLIN( 466)			_hx_tmp = null();
            		}
            		else {
HXDLIN( 466)			_hx_tmp = framebuffer->id;
            		}
HXDLIN( 466)		::openfl::_legacy::gl::GL_obj::lime_gl_bind_framebuffer(target,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindFramebuffer,(void))

void GL_obj::bindRenderbuffer(int target, ::openfl::_legacy::gl::GLRenderbuffer renderbuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_471_bindRenderbuffer)
HXDLIN( 471)		 ::Dynamic _hx_tmp;
HXDLIN( 471)		if (hx::IsNull( renderbuffer )) {
HXDLIN( 471)			_hx_tmp = null();
            		}
            		else {
HXDLIN( 471)			_hx_tmp = renderbuffer->id;
            		}
HXDLIN( 471)		::openfl::_legacy::gl::GL_obj::lime_gl_bind_renderbuffer(target,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindRenderbuffer,(void))

void GL_obj::bindTexture(int target, ::openfl::_legacy::gl::GLTexture texture){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_476_bindTexture)
HXDLIN( 476)		 ::Dynamic _hx_tmp;
HXDLIN( 476)		if (hx::IsNull( texture )) {
HXDLIN( 476)			_hx_tmp = null();
            		}
            		else {
HXDLIN( 476)			_hx_tmp = texture->id;
            		}
HXDLIN( 476)		::openfl::_legacy::gl::GL_obj::lime_gl_bind_texture(target,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindTexture,(void))

void GL_obj::blendColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_481_blendColor)
HXDLIN( 481)		::openfl::_legacy::gl::GL_obj::lime_gl_blend_color(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,blendColor,(void))

void GL_obj::blendEquation(int mode){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_486_blendEquation)
HXDLIN( 486)		::openfl::_legacy::gl::GL_obj::lime_gl_blend_equation(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,blendEquation,(void))

void GL_obj::blendEquationSeparate(int modeRGB,int modeAlpha){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_491_blendEquationSeparate)
HXDLIN( 491)		::openfl::_legacy::gl::GL_obj::lime_gl_blend_equation_separate(modeRGB,modeAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,blendEquationSeparate,(void))

void GL_obj::blendFunc(int sfactor,int dfactor){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_496_blendFunc)
HXDLIN( 496)		::openfl::_legacy::gl::GL_obj::lime_gl_blend_func(sfactor,dfactor);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,blendFunc,(void))

void GL_obj::blendFuncSeparate(int srcRGB,int dstRGB,int srcAlpha,int dstAlpha){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_501_blendFuncSeparate)
HXDLIN( 501)		::openfl::_legacy::gl::GL_obj::lime_gl_blend_func_separate(srcRGB,dstRGB,srcAlpha,dstAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,blendFuncSeparate,(void))

void GL_obj::bufferData(int target,::Dynamic data,int usage){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_506_bufferData)
HXDLIN( 506)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 506)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1 = ::openfl::_legacy::utils::IMemoryRange_obj::getByteBuffer(data);
HXDLIN( 506)		int _hx_tmp2 = ::openfl::_legacy::utils::IMemoryRange_obj::getStart(data);
HXDLIN( 506)		int _hx_tmp3 = ::openfl::_legacy::utils::IMemoryRange_obj::getLength(data);
HXDLIN( 506)		::openfl::_legacy::gl::GL_obj::lime_gl_buffer_data(target,_hx_tmp1,_hx_tmp2,_hx_tmp3,usage);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bufferData,(void))

void GL_obj::bufferSubData(int target,int offset,::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_511_bufferSubData)
HXDLIN( 511)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 511)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1 = ::openfl::_legacy::utils::IMemoryRange_obj::getByteBuffer(data);
HXDLIN( 511)		int _hx_tmp2 = ::openfl::_legacy::utils::IMemoryRange_obj::getStart(data);
HXDLIN( 511)		int _hx_tmp3 = ::openfl::_legacy::utils::IMemoryRange_obj::getLength(data);
HXDLIN( 511)		::openfl::_legacy::gl::GL_obj::lime_gl_buffer_sub_data(target,offset,_hx_tmp1,_hx_tmp2,_hx_tmp3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bufferSubData,(void))

int GL_obj::checkFramebufferStatus(int target){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_516_checkFramebufferStatus)
HXDLIN( 516)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_check_framebuffer_status(target)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,checkFramebufferStatus,return )

void GL_obj::clear(int mask){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_521_clear)
HXDLIN( 521)		::openfl::_legacy::gl::GL_obj::lime_gl_clear(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clear,(void))

void GL_obj::clearColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_526_clearColor)
HXDLIN( 526)		::openfl::_legacy::gl::GL_obj::lime_gl_clear_color(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,clearColor,(void))

void GL_obj::clearDepth(Float depth){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_531_clearDepth)
HXDLIN( 531)		::openfl::_legacy::gl::GL_obj::lime_gl_clear_depth(depth);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clearDepth,(void))

void GL_obj::clearStencil(int s){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_536_clearStencil)
HXDLIN( 536)		::openfl::_legacy::gl::GL_obj::lime_gl_clear_stencil(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clearStencil,(void))

void GL_obj::colorMask(bool red,bool green,bool blue,bool alpha){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_541_colorMask)
HXDLIN( 541)		::openfl::_legacy::gl::GL_obj::lime_gl_color_mask(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,colorMask,(void))

void GL_obj::compileShader( ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_546_compileShader)
HXDLIN( 546)		::openfl::_legacy::gl::GL_obj::lime_gl_compile_shader(shader->id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,compileShader,(void))

void GL_obj::compressedTexImage2D(int target,int level,int internalformat,int width,int height,int border,::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_551_compressedTexImage2D)
HXDLIN( 551)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 551)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1;
HXDLIN( 551)		if (hx::IsNull( data )) {
HXDLIN( 551)			_hx_tmp1 = null();
            		}
            		else {
HXDLIN( 551)			_hx_tmp1 = ::openfl::_legacy::utils::IMemoryRange_obj::getByteBuffer(data);
            		}
HXDLIN( 551)		 ::Dynamic _hx_tmp2;
HXDLIN( 551)		if (hx::IsNull( data )) {
HXDLIN( 551)			_hx_tmp2 = null();
            		}
            		else {
HXDLIN( 551)			_hx_tmp2 = ::openfl::_legacy::utils::IMemoryRange_obj::getStart(data);
            		}
HXDLIN( 551)		::openfl::_legacy::gl::GL_obj::lime_gl_compressed_tex_image_2d(target,level,internalformat,width,height,border,_hx_tmp1,_hx_tmp2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(GL_obj,compressedTexImage2D,(void))

void GL_obj::compressedTexSubImage2D(int target,int level,int xoffset,int yoffset,int width,int height,int format,::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_556_compressedTexSubImage2D)
HXDLIN( 556)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 556)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1;
HXDLIN( 556)		if (hx::IsNull( data )) {
HXDLIN( 556)			_hx_tmp1 = null();
            		}
            		else {
HXDLIN( 556)			_hx_tmp1 = ::openfl::_legacy::utils::IMemoryRange_obj::getByteBuffer(data);
            		}
HXDLIN( 556)		 ::Dynamic _hx_tmp2;
HXDLIN( 556)		if (hx::IsNull( data )) {
HXDLIN( 556)			_hx_tmp2 = null();
            		}
            		else {
HXDLIN( 556)			_hx_tmp2 = ::openfl::_legacy::utils::IMemoryRange_obj::getStart(data);
            		}
HXDLIN( 556)		::openfl::_legacy::gl::GL_obj::lime_gl_compressed_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,_hx_tmp1,_hx_tmp2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,compressedTexSubImage2D,(void))

void GL_obj::copyTexImage2D(int target,int level,int internalformat,int x,int y,int width,int height,int border){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_561_copyTexImage2D)
HXDLIN( 561)		::openfl::_legacy::gl::GL_obj::lime_gl_copy_tex_image_2d(target,level,internalformat,x,y,width,height,border);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,copyTexImage2D,(void))

void GL_obj::copyTexSubImage2D(int target,int level,int xoffset,int yoffset,int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_566_copyTexSubImage2D)
HXDLIN( 566)		::openfl::_legacy::gl::GL_obj::lime_gl_copy_tex_sub_image_2d(target,level,xoffset,yoffset,x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,copyTexSubImage2D,(void))

 ::openfl::_legacy::gl::GLBuffer GL_obj::createBuffer(){
            	HX_GC_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_571_createBuffer)
HXDLIN( 571)		int _hx_tmp = ::openfl::_legacy::gl::GL_obj::get_version();
HXDLIN( 571)		return  ::openfl::_legacy::gl::GLBuffer_obj::__alloc( HX_CTX ,_hx_tmp,::openfl::_legacy::gl::GL_obj::lime_gl_create_buffer());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createBuffer,return )

 ::openfl::_legacy::gl::GLFramebuffer GL_obj::createFramebuffer(){
            	HX_GC_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_576_createFramebuffer)
HXDLIN( 576)		int _hx_tmp = ::openfl::_legacy::gl::GL_obj::get_version();
HXDLIN( 576)		return  ::openfl::_legacy::gl::GLFramebuffer_obj::__alloc( HX_CTX ,_hx_tmp,::openfl::_legacy::gl::GL_obj::lime_gl_create_framebuffer());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createFramebuffer,return )

 ::openfl::_legacy::gl::GLProgram GL_obj::createProgram(){
            	HX_GC_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_581_createProgram)
HXDLIN( 581)		int _hx_tmp = ::openfl::_legacy::gl::GL_obj::get_version();
HXDLIN( 581)		return  ::openfl::_legacy::gl::GLProgram_obj::__alloc( HX_CTX ,_hx_tmp,::openfl::_legacy::gl::GL_obj::lime_gl_create_program());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createProgram,return )

 ::openfl::_legacy::gl::GLRenderbuffer GL_obj::createRenderbuffer(){
            	HX_GC_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_586_createRenderbuffer)
HXDLIN( 586)		int _hx_tmp = ::openfl::_legacy::gl::GL_obj::get_version();
HXDLIN( 586)		return  ::openfl::_legacy::gl::GLRenderbuffer_obj::__alloc( HX_CTX ,_hx_tmp,::openfl::_legacy::gl::GL_obj::lime_gl_create_render_buffer());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createRenderbuffer,return )

 ::openfl::_legacy::gl::GLShader GL_obj::createShader(int type){
            	HX_GC_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_591_createShader)
HXDLIN( 591)		int _hx_tmp = ::openfl::_legacy::gl::GL_obj::get_version();
HXDLIN( 591)		return  ::openfl::_legacy::gl::GLShader_obj::__alloc( HX_CTX ,_hx_tmp,::openfl::_legacy::gl::GL_obj::lime_gl_create_shader(type));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,createShader,return )

 ::openfl::_legacy::gl::GLTexture GL_obj::createTexture(){
            	HX_GC_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_596_createTexture)
HXDLIN( 596)		int _hx_tmp = ::openfl::_legacy::gl::GL_obj::get_version();
HXDLIN( 596)		return  ::openfl::_legacy::gl::GLTexture_obj::__alloc( HX_CTX ,_hx_tmp,::openfl::_legacy::gl::GL_obj::lime_gl_create_texture());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createTexture,return )

void GL_obj::cullFace(int mode){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_601_cullFace)
HXDLIN( 601)		::openfl::_legacy::gl::GL_obj::lime_gl_cull_face(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,cullFace,(void))

void GL_obj::deleteBuffer( ::openfl::_legacy::gl::GLBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_605_deleteBuffer)
HXLINE( 606)		::openfl::_legacy::gl::GL_obj::lime_gl_delete_buffer(buffer->id);
HXLINE( 607)		buffer->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteBuffer,(void))

void GL_obj::deleteFramebuffer( ::openfl::_legacy::gl::GLFramebuffer framebuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_611_deleteFramebuffer)
HXLINE( 612)		::openfl::_legacy::gl::GL_obj::lime_gl_delete_framebuffer(framebuffer->id);
HXLINE( 613)		framebuffer->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteFramebuffer,(void))

void GL_obj::deleteProgram( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_617_deleteProgram)
HXLINE( 618)		::openfl::_legacy::gl::GL_obj::lime_gl_delete_program(program->id);
HXLINE( 619)		program->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteProgram,(void))

void GL_obj::deleteRenderbuffer( ::openfl::_legacy::gl::GLRenderbuffer renderbuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_623_deleteRenderbuffer)
HXLINE( 624)		::openfl::_legacy::gl::GL_obj::lime_gl_delete_render_buffer(renderbuffer->id);
HXLINE( 625)		renderbuffer->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteRenderbuffer,(void))

void GL_obj::deleteShader( ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_629_deleteShader)
HXLINE( 630)		::openfl::_legacy::gl::GL_obj::lime_gl_delete_shader(shader->id);
HXLINE( 631)		shader->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteShader,(void))

void GL_obj::deleteTexture( ::openfl::_legacy::gl::GLTexture texture){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_635_deleteTexture)
HXLINE( 636)		::openfl::_legacy::gl::GL_obj::lime_gl_delete_texture(texture->id);
HXLINE( 637)		texture->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteTexture,(void))

void GL_obj::depthFunc(int func){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_642_depthFunc)
HXDLIN( 642)		::openfl::_legacy::gl::GL_obj::lime_gl_depth_func(func);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,depthFunc,(void))

void GL_obj::depthMask(bool flag){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_647_depthMask)
HXDLIN( 647)		::openfl::_legacy::gl::GL_obj::lime_gl_depth_mask(flag);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,depthMask,(void))

void GL_obj::depthRange(Float zNear,Float zFar){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_652_depthRange)
HXDLIN( 652)		::openfl::_legacy::gl::GL_obj::lime_gl_depth_range(zNear,zFar);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,depthRange,(void))

void GL_obj::detachShader( ::openfl::_legacy::gl::GLProgram program, ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_657_detachShader)
HXDLIN( 657)		::openfl::_legacy::gl::GL_obj::lime_gl_detach_shader(program->id,shader->id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,detachShader,(void))

void GL_obj::disable(int cap){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_662_disable)
HXDLIN( 662)		::openfl::_legacy::gl::GL_obj::lime_gl_disable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,disable,(void))

void GL_obj::disableVertexAttribArray(int index){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_667_disableVertexAttribArray)
HXDLIN( 667)		::openfl::_legacy::gl::GL_obj::lime_gl_disable_vertex_attrib_array(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,disableVertexAttribArray,(void))

void GL_obj::drawArrays(int mode,int first,int count){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_672_drawArrays)
HXDLIN( 672)		::openfl::_legacy::gl::GL_obj::lime_gl_draw_arrays(mode,first,count);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,drawArrays,(void))

void GL_obj::drawElements(int mode,int count,int type,int offset){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_677_drawElements)
HXDLIN( 677)		::openfl::_legacy::gl::GL_obj::lime_gl_draw_elements(mode,count,type,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,drawElements,(void))

void GL_obj::enable(int cap){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_682_enable)
HXDLIN( 682)		::openfl::_legacy::gl::GL_obj::lime_gl_enable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,enable,(void))

void GL_obj::enableVertexAttribArray(int index){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_687_enableVertexAttribArray)
HXDLIN( 687)		::openfl::_legacy::gl::GL_obj::lime_gl_enable_vertex_attrib_array(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,enableVertexAttribArray,(void))

void GL_obj::finish(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_692_finish)
HXDLIN( 692)		::openfl::_legacy::gl::GL_obj::lime_gl_finish();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,finish,(void))

void GL_obj::flush(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_697_flush)
HXDLIN( 697)		::openfl::_legacy::gl::GL_obj::lime_gl_flush();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,flush,(void))

void GL_obj::framebufferRenderbuffer(int target,int attachment,int renderbuffertarget, ::openfl::_legacy::gl::GLRenderbuffer renderbuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_702_framebufferRenderbuffer)
HXDLIN( 702)		::openfl::_legacy::gl::GL_obj::lime_gl_framebuffer_renderbuffer(target,attachment,renderbuffertarget,renderbuffer->id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,framebufferRenderbuffer,(void))

void GL_obj::framebufferTexture2D(int target,int attachment,int textarget, ::openfl::_legacy::gl::GLTexture texture,int level){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_707_framebufferTexture2D)
HXDLIN( 707)		::openfl::_legacy::gl::GL_obj::lime_gl_framebuffer_texture2D(target,attachment,textarget,texture->id,level);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,framebufferTexture2D,(void))

void GL_obj::frontFace(int mode){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_712_frontFace)
HXDLIN( 712)		::openfl::_legacy::gl::GL_obj::lime_gl_front_face(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,frontFace,(void))

void GL_obj::generateMipmap(int target){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_717_generateMipmap)
HXDLIN( 717)		::openfl::_legacy::gl::GL_obj::lime_gl_generate_mipmap(target);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,generateMipmap,(void))

 ::Dynamic GL_obj::getActiveAttrib( ::openfl::_legacy::gl::GLProgram program,int index){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_722_getActiveAttrib)
HXDLIN( 722)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_active_attrib(program->id,index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getActiveAttrib,return )

 ::Dynamic GL_obj::getActiveUniform( ::openfl::_legacy::gl::GLProgram program,int index){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_727_getActiveUniform)
HXDLIN( 727)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_active_uniform(program->id,index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getActiveUniform,return )

::Array< ::Dynamic> GL_obj::getAttachedShaders( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_732_getAttachedShaders)
HXDLIN( 732)		return program->getShaders();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getAttachedShaders,return )

int GL_obj::getAttribLocation( ::openfl::_legacy::gl::GLProgram program,::String name){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_737_getAttribLocation)
HXDLIN( 737)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_get_attrib_location(program->id,name)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getAttribLocation,return )

 ::Dynamic GL_obj::getBufferParameter(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_742_getBufferParameter)
HXDLIN( 742)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_buffer_paramerter(target,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getBufferParameter,return )

 ::Dynamic GL_obj::getContextAttributes(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_746_getContextAttributes)
HXLINE( 747)		 ::Dynamic base = ::openfl::_legacy::gl::GL_obj::lime_gl_get_context_attributes();
HXLINE( 748)		base->__SetField(HX_("premultipliedAlpha",28,8e,5c,1a),false,hx::paccDynamic);
HXLINE( 749)		base->__SetField(HX_("preserveDrawingBuffer",92,bb,1e,4b),false,hx::paccDynamic);
HXLINE( 750)		return base;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getContextAttributes,return )

int GL_obj::getError(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_755_getError)
HXDLIN( 755)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_get_error()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getError,return )

 ::Dynamic GL_obj::getExtension(::String name){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_761_getExtension)
HXDLIN( 761)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getExtension,return )

 ::Dynamic GL_obj::getFramebufferAttachmentParameter(int target,int attachment,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_766_getFramebufferAttachmentParameter)
HXDLIN( 766)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_framebuffer_attachment_parameter(target,attachment,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,getFramebufferAttachmentParameter,return )

 ::Dynamic GL_obj::getParameter(int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_771_getParameter)
HXDLIN( 771)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_parameter(pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getParameter,return )

::String GL_obj::getProgramInfoLog( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_776_getProgramInfoLog)
HXDLIN( 776)		return ( (::String)(::openfl::_legacy::gl::GL_obj::lime_gl_get_program_info_log(program->id)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getProgramInfoLog,return )

int GL_obj::getProgramParameter( ::openfl::_legacy::gl::GLProgram program,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_781_getProgramParameter)
HXDLIN( 781)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_get_program_parameter(program->id,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getProgramParameter,return )

 ::Dynamic GL_obj::getRenderbufferParameter(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_786_getRenderbufferParameter)
HXDLIN( 786)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_render_buffer_parameter(target,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getRenderbufferParameter,return )

::String GL_obj::getShaderInfoLog( ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_791_getShaderInfoLog)
HXDLIN( 791)		return ( (::String)(::openfl::_legacy::gl::GL_obj::lime_gl_get_shader_info_log(shader->id)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getShaderInfoLog,return )

int GL_obj::getShaderParameter( ::openfl::_legacy::gl::GLShader shader,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_796_getShaderParameter)
HXDLIN( 796)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_get_shader_parameter(shader->id,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getShaderParameter,return )

 ::Dynamic GL_obj::getShaderPrecisionFormat(int shadertype,int precisiontype){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_801_getShaderPrecisionFormat)
HXDLIN( 801)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_shader_precision_format(shadertype,precisiontype);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getShaderPrecisionFormat,return )

::String GL_obj::getShaderSource( ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_806_getShaderSource)
HXDLIN( 806)		return ( (::String)(::openfl::_legacy::gl::GL_obj::lime_gl_get_shader_source(shader->id)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getShaderSource,return )

::Array< ::String > GL_obj::getSupportedExtensions(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_810_getSupportedExtensions)
HXLINE( 811)		::Array< ::String > result = ::Array_obj< ::String >::__new();
HXLINE( 812)		::openfl::_legacy::gl::GL_obj::lime_gl_get_supported_extensions(result);
HXLINE( 813)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getSupportedExtensions,return )

 ::Dynamic GL_obj::getTexParameter(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_818_getTexParameter)
HXDLIN( 818)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_tex_parameter(target,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getTexParameter,return )

 ::Dynamic GL_obj::getUniform( ::openfl::_legacy::gl::GLProgram program, ::Dynamic location){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_823_getUniform)
HXDLIN( 823)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_uniform(program->id,location);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getUniform,return )

 ::Dynamic GL_obj::getUniformLocation( ::openfl::_legacy::gl::GLProgram program,::String name){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_828_getUniformLocation)
HXDLIN( 828)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_uniform_location(program->id,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getUniformLocation,return )

 ::Dynamic GL_obj::getVertexAttrib(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_833_getVertexAttrib)
HXDLIN( 833)		return ::openfl::_legacy::gl::GL_obj::lime_gl_get_vertex_attrib(index,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getVertexAttrib,return )

int GL_obj::getVertexAttribOffset(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_838_getVertexAttribOffset)
HXDLIN( 838)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_get_vertex_attrib_offset(index,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getVertexAttribOffset,return )

void GL_obj::hint(int target,int mode){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_843_hint)
HXDLIN( 843)		::openfl::_legacy::gl::GL_obj::lime_gl_hint(target,mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,hint,(void))

bool GL_obj::isBuffer( ::openfl::_legacy::gl::GLBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_848_isBuffer)
HXDLIN( 848)		if (hx::IsNotNull( buffer )) {
HXDLIN( 848)			return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_buffer(buffer->id)) );
            		}
            		else {
HXDLIN( 848)			return false;
            		}
HXDLIN( 848)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isBuffer,return )

bool GL_obj::isEnabled(int cap){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_855_isEnabled)
HXDLIN( 855)		return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_enabled(cap)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isEnabled,return )

bool GL_obj::isFramebuffer( ::openfl::_legacy::gl::GLFramebuffer framebuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_860_isFramebuffer)
HXDLIN( 860)		if (hx::IsNotNull( framebuffer )) {
HXDLIN( 860)			return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_framebuffer(framebuffer->id)) );
            		}
            		else {
HXDLIN( 860)			return false;
            		}
HXDLIN( 860)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isFramebuffer,return )

bool GL_obj::isProgram( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_865_isProgram)
HXDLIN( 865)		if (hx::IsNotNull( program )) {
HXDLIN( 865)			return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_program(program->id)) );
            		}
            		else {
HXDLIN( 865)			return false;
            		}
HXDLIN( 865)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isProgram,return )

bool GL_obj::isRenderbuffer( ::openfl::_legacy::gl::GLRenderbuffer renderbuffer){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_870_isRenderbuffer)
HXDLIN( 870)		if (hx::IsNotNull( renderbuffer )) {
HXDLIN( 870)			return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_renderbuffer(renderbuffer->id)) );
            		}
            		else {
HXDLIN( 870)			return false;
            		}
HXDLIN( 870)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isRenderbuffer,return )

bool GL_obj::isShader( ::openfl::_legacy::gl::GLShader shader){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_875_isShader)
HXDLIN( 875)		if (hx::IsNotNull( shader )) {
HXDLIN( 875)			return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_shader(shader->id)) );
            		}
            		else {
HXDLIN( 875)			return false;
            		}
HXDLIN( 875)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isShader,return )

bool GL_obj::isTexture( ::openfl::_legacy::gl::GLTexture texture){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_880_isTexture)
HXDLIN( 880)		if (hx::IsNotNull( texture )) {
HXDLIN( 880)			return ( (bool)(::openfl::_legacy::gl::GL_obj::lime_gl_is_texture(texture->id)) );
            		}
            		else {
HXDLIN( 880)			return false;
            		}
HXDLIN( 880)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isTexture,return )

void GL_obj::lineWidth(Float width){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_885_lineWidth)
HXDLIN( 885)		::openfl::_legacy::gl::GL_obj::lime_gl_line_width(width);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lineWidth,(void))

void GL_obj::linkProgram( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_890_linkProgram)
HXDLIN( 890)		::openfl::_legacy::gl::GL_obj::lime_gl_link_program(program->id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,linkProgram,(void))

 ::Dynamic GL_obj::load(::String inName,int inArgCount){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_895_load)
HXDLIN( 895)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 897)			return ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),inName,inArgCount);
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE( 901)				::haxe::Log_obj::trace(e,hx::SourceInfo(HX_("GL.hx",b9,a9,d2,13),901,HX_("openfl._legacy.gl.GL",6a,6e,c8,d6),HX_("load",26,9a,b7,47)));
HXLINE( 902)				return null();
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 895)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,load,return )

void GL_obj::pixelStorei(int pname,int param){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_908_pixelStorei)
HXDLIN( 908)		::openfl::_legacy::gl::GL_obj::lime_gl_pixel_storei(pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,pixelStorei,(void))

void GL_obj::polygonOffset(Float factor,Float units){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_913_polygonOffset)
HXDLIN( 913)		::openfl::_legacy::gl::GL_obj::lime_gl_polygon_offset(factor,units);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,polygonOffset,(void))

void GL_obj::readPixels(int x,int y,int width,int height,int format,int type, ::openfl::_legacy::utils::ByteArray pixels){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_918_readPixels)
HXDLIN( 918)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 918)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1;
HXDLIN( 918)		if (hx::IsNull( pixels )) {
HXDLIN( 918)			_hx_tmp1 = null();
            		}
            		else {
HXDLIN( 918)			_hx_tmp1 = pixels->getByteBuffer();
            		}
HXDLIN( 918)		 ::Dynamic _hx_tmp2;
HXDLIN( 918)		if (hx::IsNull( pixels )) {
HXDLIN( 918)			_hx_tmp2 = null();
            		}
            		else {
HXDLIN( 918)			_hx_tmp2 = pixels->getStart();
            		}
HXDLIN( 918)		::openfl::_legacy::gl::GL_obj::lime_gl_read_pixels(x,y,width,height,format,type,_hx_tmp1,_hx_tmp2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(GL_obj,readPixels,(void))

void GL_obj::renderbufferStorage(int target,int internalformat,int width,int height){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_923_renderbufferStorage)
HXDLIN( 923)		::openfl::_legacy::gl::GL_obj::lime_gl_renderbuffer_storage(target,internalformat,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,renderbufferStorage,(void))

void GL_obj::sampleCoverage(Float value,bool invert){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_928_sampleCoverage)
HXDLIN( 928)		::openfl::_legacy::gl::GL_obj::lime_gl_sample_coverage(value,invert);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,sampleCoverage,(void))

void GL_obj::scissor(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_933_scissor)
HXDLIN( 933)		::openfl::_legacy::gl::GL_obj::lime_gl_scissor(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,scissor,(void))

void GL_obj::shaderSource( ::openfl::_legacy::gl::GLShader shader,::String source){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_938_shaderSource)
HXDLIN( 938)		::openfl::_legacy::gl::GL_obj::lime_gl_shader_source(shader->id,source);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,shaderSource,(void))

void GL_obj::stencilFunc(int func,int ref,int mask){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_943_stencilFunc)
HXDLIN( 943)		::openfl::_legacy::gl::GL_obj::lime_gl_stencil_func(func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,stencilFunc,(void))

void GL_obj::stencilFuncSeparate(int face,int func,int ref,int mask){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_948_stencilFuncSeparate)
HXDLIN( 948)		::openfl::_legacy::gl::GL_obj::lime_gl_stencil_func_separate(face,func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,stencilFuncSeparate,(void))

void GL_obj::stencilMask(int mask){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_953_stencilMask)
HXDLIN( 953)		::openfl::_legacy::gl::GL_obj::lime_gl_stencil_mask(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,stencilMask,(void))

void GL_obj::stencilMaskSeparate(int face,int mask){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_958_stencilMaskSeparate)
HXDLIN( 958)		::openfl::_legacy::gl::GL_obj::lime_gl_stencil_mask_separate(face,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,stencilMaskSeparate,(void))

void GL_obj::stencilOp(int fail,int zfail,int zpass){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_963_stencilOp)
HXDLIN( 963)		::openfl::_legacy::gl::GL_obj::lime_gl_stencil_op(fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,stencilOp,(void))

void GL_obj::stencilOpSeparate(int face,int fail,int zfail,int zpass){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_968_stencilOpSeparate)
HXDLIN( 968)		::openfl::_legacy::gl::GL_obj::lime_gl_stencil_op_separate(face,fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,stencilOpSeparate,(void))

void GL_obj::texImage2D(int target,int level,int internalformat,int width,int height,int border,int format,int type, ::openfl::_legacy::utils::ArrayBufferView pixels){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_973_texImage2D)
HXDLIN( 973)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 973)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1;
HXDLIN( 973)		if (hx::IsNull( pixels )) {
HXDLIN( 973)			_hx_tmp1 = null();
            		}
            		else {
HXDLIN( 973)			_hx_tmp1 = pixels->getByteBuffer();
            		}
HXDLIN( 973)		 ::Dynamic _hx_tmp2;
HXDLIN( 973)		if (hx::IsNull( pixels )) {
HXDLIN( 973)			_hx_tmp2 = null();
            		}
            		else {
HXDLIN( 973)			_hx_tmp2 = pixels->getStart();
            		}
HXDLIN( 973)		::openfl::_legacy::gl::GL_obj::lime_gl_tex_image_2d(target,level,internalformat,width,height,border,format,type,_hx_tmp1,_hx_tmp2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,texImage2D,(void))

void GL_obj::texParameterf(int target,int pname,Float param){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_978_texParameterf)
HXDLIN( 978)		::openfl::_legacy::gl::GL_obj::lime_gl_tex_parameterf(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,texParameterf,(void))

void GL_obj::texParameteri(int target,int pname,int param){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_983_texParameteri)
HXDLIN( 983)		::openfl::_legacy::gl::GL_obj::lime_gl_tex_parameteri(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,texParameteri,(void))

void GL_obj::texSubImage2D(int target,int level,int xoffset,int yoffset,int width,int height,int format,int type, ::openfl::_legacy::utils::ArrayBufferView pixels){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_988_texSubImage2D)
HXDLIN( 988)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN( 988)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1;
HXDLIN( 988)		if (hx::IsNull( pixels )) {
HXDLIN( 988)			_hx_tmp1 = null();
            		}
            		else {
HXDLIN( 988)			_hx_tmp1 = pixels->getByteBuffer();
            		}
HXDLIN( 988)		 ::Dynamic _hx_tmp2;
HXDLIN( 988)		if (hx::IsNull( pixels )) {
HXDLIN( 988)			_hx_tmp2 = null();
            		}
            		else {
HXDLIN( 988)			_hx_tmp2 = pixels->getStart();
            		}
HXDLIN( 988)		::openfl::_legacy::gl::GL_obj::lime_gl_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,type,_hx_tmp1,_hx_tmp2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,texSubImage2D,(void))

void GL_obj::uniform1f( ::Dynamic location,Float x){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_993_uniform1f)
HXDLIN( 993)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform1f(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1f,(void))

void GL_obj::uniform1fv( ::Dynamic location, ::Dynamic x){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_998_uniform1fv)
HXDLIN( 998)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform1fv(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1fv,(void))

void GL_obj::uniform1i( ::Dynamic location,int x){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1003_uniform1i)
HXDLIN(1003)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform1i(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1i,(void))

void GL_obj::uniform1iv( ::Dynamic location,::Array< int > v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1008_uniform1iv)
HXDLIN(1008)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform1iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1iv,(void))

void GL_obj::uniform2f( ::Dynamic location,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1013_uniform2f)
HXDLIN(1013)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform2f(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniform2f,(void))

void GL_obj::uniform2fv( ::Dynamic location, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1018_uniform2fv)
HXDLIN(1018)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform2fv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform2fv,(void))

void GL_obj::uniform2i( ::Dynamic location,int x,int y){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1023_uniform2i)
HXDLIN(1023)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform2i(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniform2i,(void))

void GL_obj::uniform2iv( ::Dynamic location,::Array< int > v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1028_uniform2iv)
HXDLIN(1028)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform2iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform2iv,(void))

void GL_obj::uniform3f( ::Dynamic location,Float x,Float y,Float z){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1033_uniform3f)
HXDLIN(1033)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform3f(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,uniform3f,(void))

void GL_obj::uniform3fv( ::Dynamic location, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1038_uniform3fv)
HXDLIN(1038)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform3fv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform3fv,(void))

void GL_obj::uniform3i( ::Dynamic location,int x,int y,int z){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1043_uniform3i)
HXDLIN(1043)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform3i(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,uniform3i,(void))

void GL_obj::uniform3iv( ::Dynamic location,::Array< int > v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1048_uniform3iv)
HXDLIN(1048)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform3iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform3iv,(void))

void GL_obj::uniform4f( ::Dynamic location,Float x,Float y,Float z,Float w){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1053_uniform4f)
HXDLIN(1053)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform4f(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,uniform4f,(void))

void GL_obj::uniform4fv( ::Dynamic location, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1058_uniform4fv)
HXDLIN(1058)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform4fv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform4fv,(void))

void GL_obj::uniform4i( ::Dynamic location,int x,int y,int z,int w){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1063_uniform4i)
HXDLIN(1063)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform4i(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,uniform4i,(void))

void GL_obj::uniform4iv( ::Dynamic location, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1068_uniform4iv)
HXDLIN(1068)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform4iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform4iv,(void))

void GL_obj::uniformMatrix2fv( ::Dynamic location,bool transpose, ::openfl::_legacy::utils::Float32Array v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1078_uniformMatrix2fv)
HXDLIN(1078)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN(1078)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1 = v->getByteBuffer();
HXDLIN(1078)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform_matrix(location,transpose,_hx_tmp1,(int)2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix2fv,(void))

void GL_obj::uniformMatrix3fv( ::Dynamic location,bool transpose, ::openfl::_legacy::utils::Float32Array v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1088_uniformMatrix3fv)
HXDLIN(1088)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN(1088)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1 = v->getByteBuffer();
HXDLIN(1088)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform_matrix(location,transpose,_hx_tmp1,(int)3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix3fv,(void))

void GL_obj::uniformMatrix4fv( ::Dynamic location,bool transpose, ::openfl::_legacy::utils::Float32Array v){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1099_uniformMatrix4fv)
HXDLIN(1099)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN(1099)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1 = v->getByteBuffer();
HXDLIN(1099)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform_matrix(location,transpose,_hx_tmp1,(int)4);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix4fv,(void))

void GL_obj::uniformMatrix3D( ::Dynamic location,bool transpose, ::openfl::geom::Matrix3D matrix){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1104_uniformMatrix3D)
HXDLIN(1104)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::gl::GL >();
HXDLIN(1104)		 ::openfl::_legacy::utils::ByteArray _hx_tmp1 = ::openfl::_legacy::utils::Float32Array_obj::fromMatrix(matrix)->getByteBuffer();
HXDLIN(1104)		::openfl::_legacy::gl::GL_obj::lime_gl_uniform_matrix(location,transpose,_hx_tmp1,(int)4);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix3D,(void))

void GL_obj::useProgram( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1109_useProgram)
HXDLIN(1109)		 ::Dynamic _hx_tmp;
HXDLIN(1109)		if (hx::IsNull( program )) {
HXDLIN(1109)			_hx_tmp = null();
            		}
            		else {
HXDLIN(1109)			_hx_tmp = program->id;
            		}
HXDLIN(1109)		::openfl::_legacy::gl::GL_obj::lime_gl_use_program(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,useProgram,(void))

void GL_obj::validateProgram( ::openfl::_legacy::gl::GLProgram program){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1114_validateProgram)
HXDLIN(1114)		::openfl::_legacy::gl::GL_obj::lime_gl_validate_program(program->id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,validateProgram,(void))

void GL_obj::vertexAttrib1f(int indx,Float x){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1119_vertexAttrib1f)
HXDLIN(1119)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib1f(indx,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib1f,(void))

void GL_obj::vertexAttrib1fv(int indx, ::Dynamic values){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1124_vertexAttrib1fv)
HXDLIN(1124)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib1fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib1fv,(void))

void GL_obj::vertexAttrib2f(int indx,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1129_vertexAttrib2f)
HXDLIN(1129)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib2f(indx,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,vertexAttrib2f,(void))

void GL_obj::vertexAttrib2fv(int indx, ::Dynamic values){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1134_vertexAttrib2fv)
HXDLIN(1134)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib2fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib2fv,(void))

void GL_obj::vertexAttrib3f(int indx,Float x,Float y,Float z){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1139_vertexAttrib3f)
HXDLIN(1139)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib3f(indx,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,vertexAttrib3f,(void))

void GL_obj::vertexAttrib3fv(int indx, ::Dynamic values){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1144_vertexAttrib3fv)
HXDLIN(1144)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib3fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib3fv,(void))

void GL_obj::vertexAttrib4f(int indx,Float x,Float y,Float z,Float w){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1149_vertexAttrib4f)
HXDLIN(1149)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib4f(indx,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,vertexAttrib4f,(void))

void GL_obj::vertexAttrib4fv(int indx, ::Dynamic values){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1154_vertexAttrib4fv)
HXDLIN(1154)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib4fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib4fv,(void))

void GL_obj::vertexAttribPointer(int indx,int size,int type,bool normalized,int stride,int offset){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1159_vertexAttribPointer)
HXDLIN(1159)		::openfl::_legacy::gl::GL_obj::lime_gl_vertex_attrib_pointer(indx,size,type,normalized,stride,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(GL_obj,vertexAttribPointer,(void))

void GL_obj::viewport(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1164_viewport)
HXDLIN(1164)		::openfl::_legacy::gl::GL_obj::lime_gl_viewport(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,viewport,(void))

int GL_obj::get_drawingBufferHeight(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1175_get_drawingBufferHeight)
HXDLIN(1175)		return ::openfl::_legacy::Lib_obj::get_current()->get_stage()->get_stageHeight();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,get_drawingBufferHeight,return )

int GL_obj::get_drawingBufferWidth(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1176_get_drawingBufferWidth)
HXDLIN(1176)		return ::openfl::_legacy::Lib_obj::get_current()->get_stage()->get_stageWidth();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,get_drawingBufferWidth,return )

int GL_obj::get_version(){
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1177_get_version)
HXDLIN(1177)		return ( (int)(::openfl::_legacy::gl::GL_obj::lime_gl_version()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,get_version,return )

 ::Dynamic GL_obj::lime_gl_active_texture;

 ::Dynamic GL_obj::lime_gl_attach_shader;

 ::Dynamic GL_obj::lime_gl_bind_attrib_location;

 ::Dynamic GL_obj::lime_gl_bind_bitmap_data_texture;

 ::Dynamic GL_obj::lime_gl_bind_buffer;

 ::Dynamic GL_obj::lime_gl_bind_framebuffer;

 ::Dynamic GL_obj::lime_gl_bind_renderbuffer;

 ::Dynamic GL_obj::lime_gl_bind_texture;

 ::Dynamic GL_obj::lime_gl_blend_color;

 ::Dynamic GL_obj::lime_gl_blend_equation;

 ::Dynamic GL_obj::lime_gl_blend_equation_separate;

 ::Dynamic GL_obj::lime_gl_blend_func;

 ::Dynamic GL_obj::lime_gl_blend_func_separate;

 ::Dynamic GL_obj::lime_gl_buffer_data;

 ::Dynamic GL_obj::lime_gl_buffer_sub_data;

 ::Dynamic GL_obj::lime_gl_check_framebuffer_status;

 ::Dynamic GL_obj::lime_gl_clear;

 ::Dynamic GL_obj::lime_gl_clear_color;

 ::Dynamic GL_obj::lime_gl_clear_depth;

 ::Dynamic GL_obj::lime_gl_clear_stencil;

 ::Dynamic GL_obj::lime_gl_color_mask;

 ::Dynamic GL_obj::lime_gl_compile_shader;

 ::Dynamic GL_obj::lime_gl_compressed_tex_image_2d;

 ::Dynamic GL_obj::lime_gl_compressed_tex_sub_image_2d;

 ::Dynamic GL_obj::lime_gl_copy_tex_image_2d;

 ::Dynamic GL_obj::lime_gl_copy_tex_sub_image_2d;

 ::Dynamic GL_obj::lime_gl_create_buffer;

 ::Dynamic GL_obj::lime_gl_create_framebuffer;

 ::Dynamic GL_obj::lime_gl_create_program;

 ::Dynamic GL_obj::lime_gl_create_render_buffer;

 ::Dynamic GL_obj::lime_gl_create_shader;

 ::Dynamic GL_obj::lime_gl_create_texture;

 ::Dynamic GL_obj::lime_gl_cull_face;

 ::Dynamic GL_obj::lime_gl_delete_buffer;

 ::Dynamic GL_obj::lime_gl_delete_framebuffer;

 ::Dynamic GL_obj::lime_gl_delete_program;

 ::Dynamic GL_obj::lime_gl_delete_render_buffer;

 ::Dynamic GL_obj::lime_gl_delete_shader;

 ::Dynamic GL_obj::lime_gl_delete_texture;

 ::Dynamic GL_obj::lime_gl_depth_func;

 ::Dynamic GL_obj::lime_gl_depth_mask;

 ::Dynamic GL_obj::lime_gl_depth_range;

 ::Dynamic GL_obj::lime_gl_detach_shader;

 ::Dynamic GL_obj::lime_gl_disable;

 ::Dynamic GL_obj::lime_gl_disable_vertex_attrib_array;

 ::Dynamic GL_obj::lime_gl_draw_arrays;

 ::Dynamic GL_obj::lime_gl_draw_elements;

 ::Dynamic GL_obj::lime_gl_enable;

 ::Dynamic GL_obj::lime_gl_enable_vertex_attrib_array;

 ::Dynamic GL_obj::lime_gl_finish;

 ::Dynamic GL_obj::lime_gl_flush;

 ::Dynamic GL_obj::lime_gl_framebuffer_renderbuffer;

 ::Dynamic GL_obj::lime_gl_framebuffer_texture2D;

 ::Dynamic GL_obj::lime_gl_front_face;

 ::Dynamic GL_obj::lime_gl_generate_mipmap;

 ::Dynamic GL_obj::lime_gl_get_active_attrib;

 ::Dynamic GL_obj::lime_gl_get_active_uniform;

 ::Dynamic GL_obj::lime_gl_get_attrib_location;

 ::Dynamic GL_obj::lime_gl_get_buffer_paramerter;

 ::Dynamic GL_obj::lime_gl_get_context_attributes;

 ::Dynamic GL_obj::lime_gl_get_error;

 ::Dynamic GL_obj::lime_gl_get_framebuffer_attachment_parameter;

 ::Dynamic GL_obj::lime_gl_get_parameter;

 ::Dynamic GL_obj::lime_gl_get_program_info_log;

 ::Dynamic GL_obj::lime_gl_get_program_parameter;

 ::Dynamic GL_obj::lime_gl_get_render_buffer_parameter;

 ::Dynamic GL_obj::lime_gl_get_shader_info_log;

 ::Dynamic GL_obj::lime_gl_get_shader_parameter;

 ::Dynamic GL_obj::lime_gl_get_shader_precision_format;

 ::Dynamic GL_obj::lime_gl_get_shader_source;

 ::Dynamic GL_obj::lime_gl_get_supported_extensions;

 ::Dynamic GL_obj::lime_gl_get_tex_parameter;

 ::Dynamic GL_obj::lime_gl_get_uniform;

 ::Dynamic GL_obj::lime_gl_get_uniform_location;

 ::Dynamic GL_obj::lime_gl_get_vertex_attrib;

 ::Dynamic GL_obj::lime_gl_get_vertex_attrib_offset;

 ::Dynamic GL_obj::lime_gl_hint;

 ::Dynamic GL_obj::lime_gl_is_buffer;

 ::Dynamic GL_obj::lime_gl_is_enabled;

 ::Dynamic GL_obj::lime_gl_is_framebuffer;

 ::Dynamic GL_obj::lime_gl_is_program;

 ::Dynamic GL_obj::lime_gl_is_renderbuffer;

 ::Dynamic GL_obj::lime_gl_is_shader;

 ::Dynamic GL_obj::lime_gl_is_texture;

 ::Dynamic GL_obj::lime_gl_line_width;

 ::Dynamic GL_obj::lime_gl_link_program;

 ::Dynamic GL_obj::lime_gl_pixel_storei;

 ::Dynamic GL_obj::lime_gl_polygon_offset;

 ::Dynamic GL_obj::lime_gl_read_pixels;

 ::Dynamic GL_obj::lime_gl_renderbuffer_storage;

 ::Dynamic GL_obj::lime_gl_sample_coverage;

 ::Dynamic GL_obj::lime_gl_scissor;

 ::Dynamic GL_obj::lime_gl_shader_source;

 ::Dynamic GL_obj::lime_gl_stencil_func;

 ::Dynamic GL_obj::lime_gl_stencil_func_separate;

 ::Dynamic GL_obj::lime_gl_stencil_mask;

 ::Dynamic GL_obj::lime_gl_stencil_mask_separate;

 ::Dynamic GL_obj::lime_gl_stencil_op;

 ::Dynamic GL_obj::lime_gl_stencil_op_separate;

 ::Dynamic GL_obj::lime_gl_tex_image_2d;

 ::Dynamic GL_obj::lime_gl_tex_parameterf;

 ::Dynamic GL_obj::lime_gl_tex_parameteri;

 ::Dynamic GL_obj::lime_gl_tex_sub_image_2d;

 ::Dynamic GL_obj::lime_gl_uniform1f;

 ::Dynamic GL_obj::lime_gl_uniform1fv;

 ::Dynamic GL_obj::lime_gl_uniform1i;

 ::Dynamic GL_obj::lime_gl_uniform1iv;

 ::Dynamic GL_obj::lime_gl_uniform2f;

 ::Dynamic GL_obj::lime_gl_uniform2fv;

 ::Dynamic GL_obj::lime_gl_uniform2i;

 ::Dynamic GL_obj::lime_gl_uniform2iv;

 ::Dynamic GL_obj::lime_gl_uniform3f;

 ::Dynamic GL_obj::lime_gl_uniform3fv;

 ::Dynamic GL_obj::lime_gl_uniform3i;

 ::Dynamic GL_obj::lime_gl_uniform3iv;

 ::Dynamic GL_obj::lime_gl_uniform4f;

 ::Dynamic GL_obj::lime_gl_uniform4fv;

 ::Dynamic GL_obj::lime_gl_uniform4i;

 ::Dynamic GL_obj::lime_gl_uniform4iv;

 ::Dynamic GL_obj::lime_gl_uniform_matrix;

 ::Dynamic GL_obj::lime_gl_use_program;

 ::Dynamic GL_obj::lime_gl_validate_program;

 ::Dynamic GL_obj::lime_gl_version;

 ::Dynamic GL_obj::lime_gl_vertex_attrib1f;

 ::Dynamic GL_obj::lime_gl_vertex_attrib1fv;

 ::Dynamic GL_obj::lime_gl_vertex_attrib2f;

 ::Dynamic GL_obj::lime_gl_vertex_attrib2fv;

 ::Dynamic GL_obj::lime_gl_vertex_attrib3f;

 ::Dynamic GL_obj::lime_gl_vertex_attrib3fv;

 ::Dynamic GL_obj::lime_gl_vertex_attrib4f;

 ::Dynamic GL_obj::lime_gl_vertex_attrib4fv;

 ::Dynamic GL_obj::lime_gl_vertex_attrib_pointer;

 ::Dynamic GL_obj::lime_gl_viewport;


GL_obj::GL_obj()
{
}

bool GL_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"hint") ) { outValue = hint_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { outValue = clear_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"flush") ) { outValue = flush_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"enable") ) { outValue = enable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"finish") ) { outValue = finish_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = ( inCallProp == hx::paccAlways ? get_version() : version ); return true; }
		if (HX_FIELD_EQ(inName,"disable") ) { outValue = disable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"scissor") ) { outValue = scissor_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"cullFace") ) { outValue = cullFace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getError") ) { outValue = getError_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isBuffer") ) { outValue = isBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isShader") ) { outValue = isShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"viewport") ) { outValue = viewport_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"blendFunc") ) { outValue = blendFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"colorMask") ) { outValue = colorMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthFunc") ) { outValue = depthFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthMask") ) { outValue = depthMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"frontFace") ) { outValue = frontFace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEnabled") ) { outValue = isEnabled_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isProgram") ) { outValue = isProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isTexture") ) { outValue = isTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lineWidth") ) { outValue = lineWidth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilOp") ) { outValue = stencilOp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1f") ) { outValue = uniform1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1i") ) { outValue = uniform1i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2f") ) { outValue = uniform2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2i") ) { outValue = uniform2i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3f") ) { outValue = uniform3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3i") ) { outValue = uniform3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4f") ) { outValue = uniform4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4i") ) { outValue = uniform4i_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bindBuffer") ) { outValue = bindBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendColor") ) { outValue = blendColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferData") ) { outValue = bufferData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearColor") ) { outValue = clearColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearDepth") ) { outValue = clearDepth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthRange") ) { outValue = depthRange_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"drawArrays") ) { outValue = drawArrays_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUniform") ) { outValue = getUniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"readPixels") ) { outValue = readPixels_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texImage2D") ) { outValue = texImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1fv") ) { outValue = uniform1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1iv") ) { outValue = uniform1iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2fv") ) { outValue = uniform2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2iv") ) { outValue = uniform2iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3fv") ) { outValue = uniform3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3iv") ) { outValue = uniform3iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4fv") ) { outValue = uniform4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4iv") ) { outValue = uniform4iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"useProgram") ) { outValue = useProgram_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"bindTexture") ) { outValue = bindTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"linkProgram") ) { outValue = linkProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pixelStorei") ) { outValue = pixelStorei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilFunc") ) { outValue = stencilFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilMask") ) { outValue = stencilMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_version") ) { outValue = get_version_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"attachShader") ) { outValue = attachShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearStencil") ) { outValue = clearStencil_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createBuffer") ) { outValue = createBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createShader") ) { outValue = createShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteBuffer") ) { outValue = deleteBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteShader") ) { outValue = deleteShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"detachShader") ) { outValue = detachShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"drawElements") ) { outValue = drawElements_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getExtension") ) { outValue = getExtension_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getParameter") ) { outValue = getParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"shaderSource") ) { outValue = shaderSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_hint") ) { outValue = ( lime_gl_hint ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"activeTexture") ) { outValue = activeTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendEquation") ) { outValue = blendEquation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferSubData") ) { outValue = bufferSubData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"compileShader") ) { outValue = compileShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createProgram") ) { outValue = createProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createTexture") ) { outValue = createTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteProgram") ) { outValue = deleteProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteTexture") ) { outValue = deleteTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isFramebuffer") ) { outValue = isFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"polygonOffset") ) { outValue = polygonOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texParameterf") ) { outValue = texParameterf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texParameteri") ) { outValue = texParameteri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texSubImage2D") ) { outValue = texSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear") ) { outValue = ( lime_gl_clear ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_flush") ) { outValue = ( lime_gl_flush ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"copyTexImage2D") ) { outValue = copyTexImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"generateMipmap") ) { outValue = generateMipmap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isRenderbuffer") ) { outValue = isRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sampleCoverage") ) { outValue = sampleCoverage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib1f") ) { outValue = vertexAttrib1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib2f") ) { outValue = vertexAttrib2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib3f") ) { outValue = vertexAttrib3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib4f") ) { outValue = vertexAttrib4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_enable") ) { outValue = ( lime_gl_enable ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_finish") ) { outValue = ( lime_gl_finish ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"bindFramebuffer") ) { outValue = bindFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getActiveAttrib") ) { outValue = getActiveAttrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderSource") ) { outValue = getShaderSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getTexParameter") ) { outValue = getTexParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getVertexAttrib") ) { outValue = getVertexAttrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix3D") ) { outValue = uniformMatrix3D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"validateProgram") ) { outValue = validateProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib1fv") ) { outValue = vertexAttrib1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib2fv") ) { outValue = vertexAttrib2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib3fv") ) { outValue = vertexAttrib3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib4fv") ) { outValue = vertexAttrib4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_disable") ) { outValue = ( lime_gl_disable ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_scissor") ) { outValue = ( lime_gl_scissor ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_version") ) { outValue = ( lime_gl_version ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"bindRenderbuffer") ) { outValue = bindRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getActiveUniform") ) { outValue = getActiveUniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderInfoLog") ) { outValue = getShaderInfoLog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix2fv") ) { outValue = uniformMatrix2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix3fv") ) { outValue = uniformMatrix3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix4fv") ) { outValue = uniformMatrix4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_viewport") ) { outValue = ( lime_gl_viewport ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"blendFuncSeparate") ) { outValue = blendFuncSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copyTexSubImage2D") ) { outValue = copyTexSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createFramebuffer") ) { outValue = createFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteFramebuffer") ) { outValue = deleteFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAttribLocation") ) { outValue = getAttribLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getProgramInfoLog") ) { outValue = getProgramInfoLog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilOpSeparate") ) { outValue = stencilOpSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_cull_face") ) { outValue = ( lime_gl_cull_face ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_error") ) { outValue = ( lime_gl_get_error ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_buffer") ) { outValue = ( lime_gl_is_buffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_shader") ) { outValue = ( lime_gl_is_shader ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1f") ) { outValue = ( lime_gl_uniform1f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1i") ) { outValue = ( lime_gl_uniform1i ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2f") ) { outValue = ( lime_gl_uniform2f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2i") ) { outValue = ( lime_gl_uniform2i ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3f") ) { outValue = ( lime_gl_uniform3f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3i") ) { outValue = ( lime_gl_uniform3i ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4f") ) { outValue = ( lime_gl_uniform4f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4i") ) { outValue = ( lime_gl_uniform4i ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"drawingBufferWidth") ) { outValue = ( inCallProp == hx::paccAlways ? get_drawingBufferWidth() : drawingBufferWidth ); return true; }
		if (HX_FIELD_EQ(inName,"defaultFramebuffer") ) { outValue = ( defaultFramebuffer ); return true; }
		if (HX_FIELD_EQ(inName,"bindAttribLocation") ) { outValue = bindAttribLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createRenderbuffer") ) { outValue = createRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteRenderbuffer") ) { outValue = deleteRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAttachedShaders") ) { outValue = getAttachedShaders_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferParameter") ) { outValue = getBufferParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderParameter") ) { outValue = getShaderParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUniformLocation") ) { outValue = getUniformLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_func") ) { outValue = ( lime_gl_blend_func ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_color_mask") ) { outValue = ( lime_gl_color_mask ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_func") ) { outValue = ( lime_gl_depth_func ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_mask") ) { outValue = ( lime_gl_depth_mask ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_front_face") ) { outValue = ( lime_gl_front_face ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_enabled") ) { outValue = ( lime_gl_is_enabled ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_program") ) { outValue = ( lime_gl_is_program ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_texture") ) { outValue = ( lime_gl_is_texture ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_line_width") ) { outValue = ( lime_gl_line_width ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_op") ) { outValue = ( lime_gl_stencil_op ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1fv") ) { outValue = ( lime_gl_uniform1fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1iv") ) { outValue = ( lime_gl_uniform1iv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2fv") ) { outValue = ( lime_gl_uniform2fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2iv") ) { outValue = ( lime_gl_uniform2iv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3fv") ) { outValue = ( lime_gl_uniform3fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3iv") ) { outValue = ( lime_gl_uniform3iv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4fv") ) { outValue = ( lime_gl_uniform4fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4iv") ) { outValue = ( lime_gl_uniform4iv ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"drawingBufferHeight") ) { outValue = ( inCallProp == hx::paccAlways ? get_drawingBufferHeight() : drawingBufferHeight ); return true; }
		if (HX_FIELD_EQ(inName,"getProgramParameter") ) { outValue = getProgramParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"renderbufferStorage") ) { outValue = renderbufferStorage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilFuncSeparate") ) { outValue = stencilFuncSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilMaskSeparate") ) { outValue = stencilMaskSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttribPointer") ) { outValue = vertexAttribPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_buffer") ) { outValue = ( lime_gl_bind_buffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_color") ) { outValue = ( lime_gl_blend_color ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_buffer_data") ) { outValue = ( lime_gl_buffer_data ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_color") ) { outValue = ( lime_gl_clear_color ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_depth") ) { outValue = ( lime_gl_clear_depth ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_range") ) { outValue = ( lime_gl_depth_range ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_draw_arrays") ) { outValue = ( lime_gl_draw_arrays ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_uniform") ) { outValue = ( lime_gl_get_uniform ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_read_pixels") ) { outValue = ( lime_gl_read_pixels ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_use_program") ) { outValue = ( lime_gl_use_program ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"compressedTexImage2D") ) { outValue = compressedTexImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"framebufferTexture2D") ) { outValue = framebufferTexture2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getContextAttributes") ) { outValue = getContextAttributes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_texture") ) { outValue = ( lime_gl_bind_texture ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_link_program") ) { outValue = ( lime_gl_link_program ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_pixel_storei") ) { outValue = ( lime_gl_pixel_storei ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_func") ) { outValue = ( lime_gl_stencil_func ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_mask") ) { outValue = ( lime_gl_stencil_mask ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_image_2d") ) { outValue = ( lime_gl_tex_image_2d ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"bindBitmapDataTexture") ) { outValue = bindBitmapDataTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendEquationSeparate") ) { outValue = blendEquationSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getVertexAttribOffset") ) { outValue = getVertexAttribOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_attach_shader") ) { outValue = ( lime_gl_attach_shader ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_stencil") ) { outValue = ( lime_gl_clear_stencil ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_buffer") ) { outValue = ( lime_gl_create_buffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_shader") ) { outValue = ( lime_gl_create_shader ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_buffer") ) { outValue = ( lime_gl_delete_buffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_shader") ) { outValue = ( lime_gl_delete_shader ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_detach_shader") ) { outValue = ( lime_gl_detach_shader ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_draw_elements") ) { outValue = ( lime_gl_draw_elements ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_parameter") ) { outValue = ( lime_gl_get_parameter ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_shader_source") ) { outValue = ( lime_gl_shader_source ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"checkFramebufferStatus") ) { outValue = checkFramebufferStatus_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSupportedExtensions") ) { outValue = getSupportedExtensions_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_drawingBufferWidth") ) { outValue = get_drawingBufferWidth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_active_texture") ) { outValue = ( lime_gl_active_texture ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_equation") ) { outValue = ( lime_gl_blend_equation ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_compile_shader") ) { outValue = ( lime_gl_compile_shader ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_program") ) { outValue = ( lime_gl_create_program ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_texture") ) { outValue = ( lime_gl_create_texture ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_program") ) { outValue = ( lime_gl_delete_program ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_texture") ) { outValue = ( lime_gl_delete_texture ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_framebuffer") ) { outValue = ( lime_gl_is_framebuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_polygon_offset") ) { outValue = ( lime_gl_polygon_offset ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_parameterf") ) { outValue = ( lime_gl_tex_parameterf ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_parameteri") ) { outValue = ( lime_gl_tex_parameteri ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform_matrix") ) { outValue = ( lime_gl_uniform_matrix ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"compressedTexSubImage2D") ) { outValue = compressedTexSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"enableVertexAttribArray") ) { outValue = enableVertexAttribArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"framebufferRenderbuffer") ) { outValue = framebufferRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_drawingBufferHeight") ) { outValue = get_drawingBufferHeight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_buffer_sub_data") ) { outValue = ( lime_gl_buffer_sub_data ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_generate_mipmap") ) { outValue = ( lime_gl_generate_mipmap ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_renderbuffer") ) { outValue = ( lime_gl_is_renderbuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_sample_coverage") ) { outValue = ( lime_gl_sample_coverage ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib1f") ) { outValue = ( lime_gl_vertex_attrib1f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib2f") ) { outValue = ( lime_gl_vertex_attrib2f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib3f") ) { outValue = ( lime_gl_vertex_attrib3f ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib4f") ) { outValue = ( lime_gl_vertex_attrib4f ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"disableVertexAttribArray") ) { outValue = disableVertexAttribArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getRenderbufferParameter") ) { outValue = getRenderbufferParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderPrecisionFormat") ) { outValue = getShaderPrecisionFormat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_framebuffer") ) { outValue = ( lime_gl_bind_framebuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_sub_image_2d") ) { outValue = ( lime_gl_tex_sub_image_2d ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_validate_program") ) { outValue = ( lime_gl_validate_program ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib1fv") ) { outValue = ( lime_gl_vertex_attrib1fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib2fv") ) { outValue = ( lime_gl_vertex_attrib2fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib3fv") ) { outValue = ( lime_gl_vertex_attrib3fv ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib4fv") ) { outValue = ( lime_gl_vertex_attrib4fv ); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_renderbuffer") ) { outValue = ( lime_gl_bind_renderbuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_copy_tex_image_2d") ) { outValue = ( lime_gl_copy_tex_image_2d ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_active_attrib") ) { outValue = ( lime_gl_get_active_attrib ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_source") ) { outValue = ( lime_gl_get_shader_source ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_tex_parameter") ) { outValue = ( lime_gl_get_tex_parameter ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_vertex_attrib") ) { outValue = ( lime_gl_get_vertex_attrib ); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_gl_create_framebuffer") ) { outValue = ( lime_gl_create_framebuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_framebuffer") ) { outValue = ( lime_gl_delete_framebuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_active_uniform") ) { outValue = ( lime_gl_get_active_uniform ); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"lime_gl_blend_func_separate") ) { outValue = ( lime_gl_blend_func_separate ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_attrib_location") ) { outValue = ( lime_gl_get_attrib_location ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_info_log") ) { outValue = ( lime_gl_get_shader_info_log ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_op_separate") ) { outValue = ( lime_gl_stencil_op_separate ); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_attrib_location") ) { outValue = ( lime_gl_bind_attrib_location ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_render_buffer") ) { outValue = ( lime_gl_create_render_buffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_render_buffer") ) { outValue = ( lime_gl_delete_render_buffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_program_info_log") ) { outValue = ( lime_gl_get_program_info_log ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_parameter") ) { outValue = ( lime_gl_get_shader_parameter ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_uniform_location") ) { outValue = ( lime_gl_get_uniform_location ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_renderbuffer_storage") ) { outValue = ( lime_gl_renderbuffer_storage ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"lime_gl_copy_tex_sub_image_2d") ) { outValue = ( lime_gl_copy_tex_sub_image_2d ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_framebuffer_texture2D") ) { outValue = ( lime_gl_framebuffer_texture2D ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_buffer_paramerter") ) { outValue = ( lime_gl_get_buffer_paramerter ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_program_parameter") ) { outValue = ( lime_gl_get_program_parameter ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_func_separate") ) { outValue = ( lime_gl_stencil_func_separate ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_mask_separate") ) { outValue = ( lime_gl_stencil_mask_separate ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib_pointer") ) { outValue = ( lime_gl_vertex_attrib_pointer ); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_gl_get_context_attributes") ) { outValue = ( lime_gl_get_context_attributes ); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"lime_gl_blend_equation_separate") ) { outValue = ( lime_gl_blend_equation_separate ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_compressed_tex_image_2d") ) { outValue = ( lime_gl_compressed_tex_image_2d ); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_bitmap_data_texture") ) { outValue = ( lime_gl_bind_bitmap_data_texture ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_check_framebuffer_status") ) { outValue = ( lime_gl_check_framebuffer_status ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_framebuffer_renderbuffer") ) { outValue = ( lime_gl_framebuffer_renderbuffer ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_supported_extensions") ) { outValue = ( lime_gl_get_supported_extensions ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_vertex_attrib_offset") ) { outValue = ( lime_gl_get_vertex_attrib_offset ); return true; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"getFramebufferAttachmentParameter") ) { outValue = getFramebufferAttachmentParameter_dyn(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_gl_enable_vertex_attrib_array") ) { outValue = ( lime_gl_enable_vertex_attrib_array ); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_gl_compressed_tex_sub_image_2d") ) { outValue = ( lime_gl_compressed_tex_sub_image_2d ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_disable_vertex_attrib_array") ) { outValue = ( lime_gl_disable_vertex_attrib_array ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_render_buffer_parameter") ) { outValue = ( lime_gl_get_render_buffer_parameter ); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_precision_format") ) { outValue = ( lime_gl_get_shader_precision_format ); return true; }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"lime_gl_get_framebuffer_attachment_parameter") ) { outValue = ( lime_gl_get_framebuffer_attachment_parameter ); return true; }
	}
	return false;
}

bool GL_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< int >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"lime_gl_hint") ) { lime_gl_hint=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"lime_gl_clear") ) { lime_gl_clear=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_flush") ) { lime_gl_flush=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"lime_gl_enable") ) { lime_gl_enable=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_finish") ) { lime_gl_finish=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lime_gl_disable") ) { lime_gl_disable=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_scissor") ) { lime_gl_scissor=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_version") ) { lime_gl_version=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"lime_gl_viewport") ) { lime_gl_viewport=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"lime_gl_cull_face") ) { lime_gl_cull_face=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_error") ) { lime_gl_get_error=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_buffer") ) { lime_gl_is_buffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_shader") ) { lime_gl_is_shader=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1f") ) { lime_gl_uniform1f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1i") ) { lime_gl_uniform1i=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2f") ) { lime_gl_uniform2f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2i") ) { lime_gl_uniform2i=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3f") ) { lime_gl_uniform3f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3i") ) { lime_gl_uniform3i=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4f") ) { lime_gl_uniform4f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4i") ) { lime_gl_uniform4i=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"drawingBufferWidth") ) { drawingBufferWidth=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"defaultFramebuffer") ) { defaultFramebuffer=ioValue.Cast<  ::openfl::_legacy::gl::GLFramebuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_func") ) { lime_gl_blend_func=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_color_mask") ) { lime_gl_color_mask=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_func") ) { lime_gl_depth_func=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_mask") ) { lime_gl_depth_mask=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_front_face") ) { lime_gl_front_face=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_enabled") ) { lime_gl_is_enabled=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_program") ) { lime_gl_is_program=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_texture") ) { lime_gl_is_texture=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_line_width") ) { lime_gl_line_width=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_op") ) { lime_gl_stencil_op=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1fv") ) { lime_gl_uniform1fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1iv") ) { lime_gl_uniform1iv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2fv") ) { lime_gl_uniform2fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2iv") ) { lime_gl_uniform2iv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3fv") ) { lime_gl_uniform3fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3iv") ) { lime_gl_uniform3iv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4fv") ) { lime_gl_uniform4fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4iv") ) { lime_gl_uniform4iv=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"drawingBufferHeight") ) { drawingBufferHeight=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_buffer") ) { lime_gl_bind_buffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_color") ) { lime_gl_blend_color=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_buffer_data") ) { lime_gl_buffer_data=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_color") ) { lime_gl_clear_color=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_depth") ) { lime_gl_clear_depth=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_range") ) { lime_gl_depth_range=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_draw_arrays") ) { lime_gl_draw_arrays=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_uniform") ) { lime_gl_get_uniform=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_read_pixels") ) { lime_gl_read_pixels=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_use_program") ) { lime_gl_use_program=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_texture") ) { lime_gl_bind_texture=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_link_program") ) { lime_gl_link_program=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_pixel_storei") ) { lime_gl_pixel_storei=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_func") ) { lime_gl_stencil_func=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_mask") ) { lime_gl_stencil_mask=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_image_2d") ) { lime_gl_tex_image_2d=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_gl_attach_shader") ) { lime_gl_attach_shader=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_stencil") ) { lime_gl_clear_stencil=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_buffer") ) { lime_gl_create_buffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_shader") ) { lime_gl_create_shader=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_buffer") ) { lime_gl_delete_buffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_shader") ) { lime_gl_delete_shader=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_detach_shader") ) { lime_gl_detach_shader=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_draw_elements") ) { lime_gl_draw_elements=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_parameter") ) { lime_gl_get_parameter=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_shader_source") ) { lime_gl_shader_source=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_gl_active_texture") ) { lime_gl_active_texture=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_equation") ) { lime_gl_blend_equation=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_compile_shader") ) { lime_gl_compile_shader=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_program") ) { lime_gl_create_program=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_texture") ) { lime_gl_create_texture=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_program") ) { lime_gl_delete_program=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_texture") ) { lime_gl_delete_texture=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_framebuffer") ) { lime_gl_is_framebuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_polygon_offset") ) { lime_gl_polygon_offset=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_parameterf") ) { lime_gl_tex_parameterf=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_parameteri") ) { lime_gl_tex_parameteri=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform_matrix") ) { lime_gl_uniform_matrix=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_gl_buffer_sub_data") ) { lime_gl_buffer_sub_data=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_generate_mipmap") ) { lime_gl_generate_mipmap=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_renderbuffer") ) { lime_gl_is_renderbuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_sample_coverage") ) { lime_gl_sample_coverage=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib1f") ) { lime_gl_vertex_attrib1f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib2f") ) { lime_gl_vertex_attrib2f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib3f") ) { lime_gl_vertex_attrib3f=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib4f") ) { lime_gl_vertex_attrib4f=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_framebuffer") ) { lime_gl_bind_framebuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_sub_image_2d") ) { lime_gl_tex_sub_image_2d=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_validate_program") ) { lime_gl_validate_program=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib1fv") ) { lime_gl_vertex_attrib1fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib2fv") ) { lime_gl_vertex_attrib2fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib3fv") ) { lime_gl_vertex_attrib3fv=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib4fv") ) { lime_gl_vertex_attrib4fv=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_renderbuffer") ) { lime_gl_bind_renderbuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_copy_tex_image_2d") ) { lime_gl_copy_tex_image_2d=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_active_attrib") ) { lime_gl_get_active_attrib=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_source") ) { lime_gl_get_shader_source=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_tex_parameter") ) { lime_gl_get_tex_parameter=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_vertex_attrib") ) { lime_gl_get_vertex_attrib=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_gl_create_framebuffer") ) { lime_gl_create_framebuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_framebuffer") ) { lime_gl_delete_framebuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_active_uniform") ) { lime_gl_get_active_uniform=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"lime_gl_blend_func_separate") ) { lime_gl_blend_func_separate=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_attrib_location") ) { lime_gl_get_attrib_location=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_info_log") ) { lime_gl_get_shader_info_log=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_op_separate") ) { lime_gl_stencil_op_separate=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_attrib_location") ) { lime_gl_bind_attrib_location=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_render_buffer") ) { lime_gl_create_render_buffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_render_buffer") ) { lime_gl_delete_render_buffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_program_info_log") ) { lime_gl_get_program_info_log=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_parameter") ) { lime_gl_get_shader_parameter=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_uniform_location") ) { lime_gl_get_uniform_location=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_renderbuffer_storage") ) { lime_gl_renderbuffer_storage=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"lime_gl_copy_tex_sub_image_2d") ) { lime_gl_copy_tex_sub_image_2d=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_framebuffer_texture2D") ) { lime_gl_framebuffer_texture2D=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_buffer_paramerter") ) { lime_gl_get_buffer_paramerter=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_program_parameter") ) { lime_gl_get_program_parameter=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_func_separate") ) { lime_gl_stencil_func_separate=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_mask_separate") ) { lime_gl_stencil_mask_separate=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib_pointer") ) { lime_gl_vertex_attrib_pointer=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_gl_get_context_attributes") ) { lime_gl_get_context_attributes=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"lime_gl_blend_equation_separate") ) { lime_gl_blend_equation_separate=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_compressed_tex_image_2d") ) { lime_gl_compressed_tex_image_2d=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_bitmap_data_texture") ) { lime_gl_bind_bitmap_data_texture=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_check_framebuffer_status") ) { lime_gl_check_framebuffer_status=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_framebuffer_renderbuffer") ) { lime_gl_framebuffer_renderbuffer=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_supported_extensions") ) { lime_gl_get_supported_extensions=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_vertex_attrib_offset") ) { lime_gl_get_vertex_attrib_offset=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_gl_enable_vertex_attrib_array") ) { lime_gl_enable_vertex_attrib_array=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_gl_compressed_tex_sub_image_2d") ) { lime_gl_compressed_tex_sub_image_2d=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_disable_vertex_attrib_array") ) { lime_gl_disable_vertex_attrib_array=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_render_buffer_parameter") ) { lime_gl_get_render_buffer_parameter=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_precision_format") ) { lime_gl_get_shader_precision_format=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"lime_gl_get_framebuffer_attachment_parameter") ) { lime_gl_get_framebuffer_attachment_parameter=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *GL_obj_sMemberStorageInfo = 0;
static hx::StaticInfo GL_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &GL_obj::DEPTH_BUFFER_BIT,HX_HCSTRING("DEPTH_BUFFER_BIT","\xca","\x5b","\xce","\xc6")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BUFFER_BIT,HX_HCSTRING("STENCIL_BUFFER_BIT","\x71","\x93","\x29","\xde")},
	{hx::fsInt,(void *) &GL_obj::COLOR_BUFFER_BIT,HX_HCSTRING("COLOR_BUFFER_BIT","\x6a","\xf7","\x74","\xfb")},
	{hx::fsInt,(void *) &GL_obj::POINTS,HX_HCSTRING("POINTS","\x23","\xbe","\xb0","\xa9")},
	{hx::fsInt,(void *) &GL_obj::LINES,HX_HCSTRING("LINES","\xdf","\x15","\xf0","\xf2")},
	{hx::fsInt,(void *) &GL_obj::LINE_LOOP,HX_HCSTRING("LINE_LOOP","\xcf","\x55","\xc1","\x16")},
	{hx::fsInt,(void *) &GL_obj::LINE_STRIP,HX_HCSTRING("LINE_STRIP","\xed","\x20","\x88","\xdd")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLES,HX_HCSTRING("TRIANGLES","\x8b","\xa0","\x99","\x7a")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLE_STRIP,HX_HCSTRING("TRIANGLE_STRIP","\xc1","\x66","\x6c","\xf6")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLE_FAN,HX_HCSTRING("TRIANGLE_FAN","\x7c","\xee","\x2e","\x91")},
	{hx::fsInt,(void *) &GL_obj::ZERO,HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b")},
	{hx::fsInt,(void *) &GL_obj::ONE,HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00")},
	{hx::fsInt,(void *) &GL_obj::SRC_COLOR,HX_HCSTRING("SRC_COLOR","\x48","\x9e","\xbd","\x5c")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_SRC_COLOR,HX_HCSTRING("ONE_MINUS_SRC_COLOR","\x20","\x3b","\xe1","\x48")},
	{hx::fsInt,(void *) &GL_obj::SRC_ALPHA,HX_HCSTRING("SRC_ALPHA","\x43","\xd4","\xf7","\x33")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_SRC_ALPHA,HX_HCSTRING("ONE_MINUS_SRC_ALPHA","\x1b","\x71","\x1b","\x20")},
	{hx::fsInt,(void *) &GL_obj::DST_ALPHA,HX_HCSTRING("DST_ALPHA","\x24","\x02","\xf2","\xd3")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_DST_ALPHA,HX_HCSTRING("ONE_MINUS_DST_ALPHA","\xfc","\x9e","\x15","\xc0")},
	{hx::fsInt,(void *) &GL_obj::DST_COLOR,HX_HCSTRING("DST_COLOR","\x29","\xcc","\xb7","\xfc")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_DST_COLOR,HX_HCSTRING("ONE_MINUS_DST_COLOR","\x01","\x69","\xdb","\xe8")},
	{hx::fsInt,(void *) &GL_obj::SRC_ALPHA_SATURATE,HX_HCSTRING("SRC_ALPHA_SATURATE","\xab","\xe2","\x3d","\x33")},
	{hx::fsInt,(void *) &GL_obj::FUNC_ADD,HX_HCSTRING("FUNC_ADD","\x46","\x78","\x17","\x75")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION,HX_HCSTRING("BLEND_EQUATION","\x9a","\x14","\x92","\x71")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION_RGB,HX_HCSTRING("BLEND_EQUATION_RGB","\x88","\x25","\xeb","\x90")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION_ALPHA,HX_HCSTRING("BLEND_EQUATION_ALPHA","\x99","\xaa","\xae","\x37")},
	{hx::fsInt,(void *) &GL_obj::FUNC_SUBTRACT,HX_HCSTRING("FUNC_SUBTRACT","\xaf","\xc0","\xa0","\x17")},
	{hx::fsInt,(void *) &GL_obj::FUNC_REVERSE_SUBTRACT,HX_HCSTRING("FUNC_REVERSE_SUBTRACT","\xcc","\x8d","\xef","\xf3")},
	{hx::fsInt,(void *) &GL_obj::BLEND_DST_RGB,HX_HCSTRING("BLEND_DST_RGB","\x05","\x87","\xf5","\xec")},
	{hx::fsInt,(void *) &GL_obj::BLEND_SRC_RGB,HX_HCSTRING("BLEND_SRC_RGB","\x64","\x43","\x8c","\x2c")},
	{hx::fsInt,(void *) &GL_obj::BLEND_DST_ALPHA,HX_HCSTRING("BLEND_DST_ALPHA","\x56","\x25","\x32","\x74")},
	{hx::fsInt,(void *) &GL_obj::BLEND_SRC_ALPHA,HX_HCSTRING("BLEND_SRC_ALPHA","\x75","\xf7","\x37","\xd4")},
	{hx::fsInt,(void *) &GL_obj::CONSTANT_COLOR,HX_HCSTRING("CONSTANT_COLOR","\xe8","\x64","\x8a","\xc8")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_CONSTANT_COLOR,HX_HCSTRING("ONE_MINUS_CONSTANT_COLOR","\x10","\x39","\xe7","\x06")},
	{hx::fsInt,(void *) &GL_obj::CONSTANT_ALPHA,HX_HCSTRING("CONSTANT_ALPHA","\xe3","\x9a","\xc4","\x9f")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_CONSTANT_ALPHA,HX_HCSTRING("ONE_MINUS_CONSTANT_ALPHA","\x0b","\x6f","\x21","\xde")},
	{hx::fsInt,(void *) &GL_obj::BLEND_COLOR,HX_HCSTRING("BLEND_COLOR","\x75","\xcb","\xc8","\x67")},
	{hx::fsInt,(void *) &GL_obj::ARRAY_BUFFER,HX_HCSTRING("ARRAY_BUFFER","\x46","\x66","\x17","\xf4")},
	{hx::fsInt,(void *) &GL_obj::ELEMENT_ARRAY_BUFFER,HX_HCSTRING("ELEMENT_ARRAY_BUFFER","\x09","\x05","\x53","\x3d")},
	{hx::fsInt,(void *) &GL_obj::ARRAY_BUFFER_BINDING,HX_HCSTRING("ARRAY_BUFFER_BINDING","\xec","\xd4","\xa9","\x79")},
	{hx::fsInt,(void *) &GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,HX_HCSTRING("ELEMENT_ARRAY_BUFFER_BINDING","\xaf","\x6e","\x96","\xa2")},
	{hx::fsInt,(void *) &GL_obj::STREAM_DRAW,HX_HCSTRING("STREAM_DRAW","\x63","\x7f","\x28","\x15")},
	{hx::fsInt,(void *) &GL_obj::STATIC_DRAW,HX_HCSTRING("STATIC_DRAW","\x75","\x50","\x2f","\xba")},
	{hx::fsInt,(void *) &GL_obj::DYNAMIC_DRAW,HX_HCSTRING("DYNAMIC_DRAW","\x24","\x04","\x1f","\x24")},
	{hx::fsInt,(void *) &GL_obj::BUFFER_SIZE,HX_HCSTRING("BUFFER_SIZE","\xa0","\x7b","\x91","\x4c")},
	{hx::fsInt,(void *) &GL_obj::BUFFER_USAGE,HX_HCSTRING("BUFFER_USAGE","\x42","\x05","\x11","\xe0")},
	{hx::fsInt,(void *) &GL_obj::CURRENT_VERTEX_ATTRIB,HX_HCSTRING("CURRENT_VERTEX_ATTRIB","\x1f","\x8c","\x2f","\xab")},
	{hx::fsInt,(void *) &GL_obj::FRONT,HX_HCSTRING("FRONT","\x89","\x50","\x7c","\x84")},
	{hx::fsInt,(void *) &GL_obj::BACK,HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b")},
	{hx::fsInt,(void *) &GL_obj::FRONT_AND_BACK,HX_HCSTRING("FRONT_AND_BACK","\xa5","\x3d","\x6a","\xc1")},
	{hx::fsInt,(void *) &GL_obj::CULL_FACE,HX_HCSTRING("CULL_FACE","\x8a","\xa5","\xf4","\xcf")},
	{hx::fsInt,(void *) &GL_obj::BLEND,HX_HCSTRING("BLEND","\x31","\x20","\xe3","\x32")},
	{hx::fsInt,(void *) &GL_obj::DITHER,HX_HCSTRING("DITHER","\xe6","\xac","\x41","\x70")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_TEST,HX_HCSTRING("STENCIL_TEST","\xd5","\xdc","\x69","\xd5")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_TEST,HX_HCSTRING("DEPTH_TEST","\x6e","\x6c","\x25","\x28")},
	{hx::fsInt,(void *) &GL_obj::SCISSOR_TEST,HX_HCSTRING("SCISSOR_TEST","\xb5","\xbe","\x51","\x59")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_FILL,HX_HCSTRING("POLYGON_OFFSET_FILL","\x4a","\x3d","\x32","\xac")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_ALPHA_TO_COVERAGE,HX_HCSTRING("SAMPLE_ALPHA_TO_COVERAGE","\x16","\x3e","\x56","\xe1")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE,HX_HCSTRING("SAMPLE_COVERAGE","\xdd","\xb7","\x0e","\xc1")},
	{hx::fsInt,(void *) &GL_obj::NO_ERROR,HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f")},
	{hx::fsInt,(void *) &GL_obj::INVALID_ENUM,HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13")},
	{hx::fsInt,(void *) &GL_obj::INVALID_VALUE,HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0")},
	{hx::fsInt,(void *) &GL_obj::INVALID_OPERATION,HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29")},
	{hx::fsInt,(void *) &GL_obj::OUT_OF_MEMORY,HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1")},
	{hx::fsInt,(void *) &GL_obj::CW,HX_HCSTRING("CW","\xb4","\x3a","\x00","\x00")},
	{hx::fsInt,(void *) &GL_obj::CCW,HX_HCSTRING("CCW","\xb7","\x11","\x33","\x00")},
	{hx::fsInt,(void *) &GL_obj::LINE_WIDTH,HX_HCSTRING("LINE_WIDTH","\x1b","\x84","\xd2","\x23")},
	{hx::fsInt,(void *) &GL_obj::ALIASED_POINT_SIZE_RANGE,HX_HCSTRING("ALIASED_POINT_SIZE_RANGE","\xfe","\xf6","\xa4","\x7b")},
	{hx::fsInt,(void *) &GL_obj::ALIASED_LINE_WIDTH_RANGE,HX_HCSTRING("ALIASED_LINE_WIDTH_RANGE","\xe9","\x22","\xd5","\x8a")},
	{hx::fsInt,(void *) &GL_obj::CULL_FACE_MODE,HX_HCSTRING("CULL_FACE_MODE","\x78","\xbd","\x87","\xd1")},
	{hx::fsInt,(void *) &GL_obj::FRONT_FACE,HX_HCSTRING("FRONT_FACE","\x53","\xb7","\x4d","\xef")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_RANGE,HX_HCSTRING("DEPTH_RANGE","\x01","\x9a","\x23","\xcf")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_WRITEMASK,HX_HCSTRING("DEPTH_WRITEMASK","\x8f","\x37","\x3f","\x66")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_CLEAR_VALUE,HX_HCSTRING("DEPTH_CLEAR_VALUE","\x23","\x17","\x0d","\x1b")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_FUNC,HX_HCSTRING("DEPTH_FUNC","\x60","\x8f","\xf0","\x1e")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_CLEAR_VALUE,HX_HCSTRING("STENCIL_CLEAR_VALUE","\x9c","\x91","\x82","\x73")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_FUNC,HX_HCSTRING("STENCIL_FUNC","\xc7","\xff","\x34","\xcc")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_FAIL,HX_HCSTRING("STENCIL_FAIL","\x61","\xce","\x25","\xcc")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_PASS_DEPTH_FAIL,HX_HCSTRING("STENCIL_PASS_DEPTH_FAIL","\x45","\xca","\xb9","\xc8")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_PASS_DEPTH_PASS,HX_HCSTRING("STENCIL_PASS_DEPTH_PASS","\x38","\xf5","\x55","\xcf")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_REF,HX_HCSTRING("STENCIL_REF","\x10","\x6a","\xa5","\x3c")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_VALUE_MASK,HX_HCSTRING("STENCIL_VALUE_MASK","\x9d","\x58","\x5e","\xa0")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_WRITEMASK,HX_HCSTRING("STENCIL_WRITEMASK","\xc8","\xf1","\xa6","\x49")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_FUNC,HX_HCSTRING("STENCIL_BACK_FUNC","\x39","\x78","\xa2","\x90")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_FAIL,HX_HCSTRING("STENCIL_BACK_FAIL","\xd3","\x46","\x93","\x90")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_FAIL","\x13","\x23","\x0e","\x34")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_PASS","\x06","\x4e","\xaa","\x3a")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_REF,HX_HCSTRING("STENCIL_BACK_REF","\xde","\x45","\xb8","\x08")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_VALUE_MASK,HX_HCSTRING("STENCIL_BACK_VALUE_MASK","\x8f","\xb2","\xc4","\x88")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_WRITEMASK,HX_HCSTRING("STENCIL_BACK_WRITEMASK","\x16","\x9c","\x15","\xc2")},
	{hx::fsInt,(void *) &GL_obj::VIEWPORT,HX_HCSTRING("VIEWPORT","\x66","\xdc","\x2a","\xf6")},
	{hx::fsInt,(void *) &GL_obj::SCISSOR_BOX,HX_HCSTRING("SCISSOR_BOX","\xe8","\x48","\x4c","\x55")},
	{hx::fsInt,(void *) &GL_obj::COLOR_CLEAR_VALUE,HX_HCSTRING("COLOR_CLEAR_VALUE","\x83","\xa7","\x2e","\xf8")},
	{hx::fsInt,(void *) &GL_obj::COLOR_WRITEMASK,HX_HCSTRING("COLOR_WRITEMASK","\xef","\xef","\xf9","\x14")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_ALIGNMENT,HX_HCSTRING("UNPACK_ALIGNMENT","\xb6","\x2a","\x2e","\x4b")},
	{hx::fsInt,(void *) &GL_obj::PACK_ALIGNMENT,HX_HCSTRING("PACK_ALIGNMENT","\x9d","\xd6","\x85","\xc3")},
	{hx::fsInt,(void *) &GL_obj::MAX_TEXTURE_SIZE,HX_HCSTRING("MAX_TEXTURE_SIZE","\xe0","\x0b","\x5b","\xfb")},
	{hx::fsInt,(void *) &GL_obj::MAX_VIEWPORT_DIMS,HX_HCSTRING("MAX_VIEWPORT_DIMS","\xa9","\x2d","\xfb","\x08")},
	{hx::fsInt,(void *) &GL_obj::SUBPIXEL_BITS,HX_HCSTRING("SUBPIXEL_BITS","\x1f","\xac","\x14","\x0a")},
	{hx::fsInt,(void *) &GL_obj::RED_BITS,HX_HCSTRING("RED_BITS","\x14","\xf8","\x9e","\x96")},
	{hx::fsInt,(void *) &GL_obj::GREEN_BITS,HX_HCSTRING("GREEN_BITS","\x62","\xa9","\x9b","\x94")},
	{hx::fsInt,(void *) &GL_obj::BLUE_BITS,HX_HCSTRING("BLUE_BITS","\x0b","\x26","\x60","\xa1")},
	{hx::fsInt,(void *) &GL_obj::ALPHA_BITS,HX_HCSTRING("ALPHA_BITS","\xe7","\xfe","\x7b","\xe0")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_BITS,HX_HCSTRING("DEPTH_BITS","\x22","\x9f","\x42","\x1c")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BITS,HX_HCSTRING("STENCIL_BITS","\x89","\x0f","\x87","\xc9")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_UNITS,HX_HCSTRING("POLYGON_OFFSET_UNITS","\xa8","\xe8","\x11","\xa6")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_FACTOR,HX_HCSTRING("POLYGON_OFFSET_FACTOR","\x56","\x6b","\x12","\x2a")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_BINDING_2D,HX_HCSTRING("TEXTURE_BINDING_2D","\x30","\xec","\x98","\xb1")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_BUFFERS,HX_HCSTRING("SAMPLE_BUFFERS","\xfe","\x16","\x71","\x3c")},
	{hx::fsInt,(void *) &GL_obj::SAMPLES,HX_HCSTRING("SAMPLES","\xe9","\x98","\x9d","\x03")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE_VALUE,HX_HCSTRING("SAMPLE_COVERAGE_VALUE","\x2f","\x7a","\x07","\x69")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE_INVERT,HX_HCSTRING("SAMPLE_COVERAGE_INVERT","\x78","\x52","\xa5","\xcd")},
	{hx::fsInt,(void *) &GL_obj::COMPRESSED_TEXTURE_FORMATS,HX_HCSTRING("COMPRESSED_TEXTURE_FORMATS","\x7a","\x13","\xe3","\x12")},
	{hx::fsInt,(void *) &GL_obj::DONT_CARE,HX_HCSTRING("DONT_CARE","\x7f","\x9b","\xc1","\xcf")},
	{hx::fsInt,(void *) &GL_obj::FASTEST,HX_HCSTRING("FASTEST","\x0a","\xa3","\x0d","\x5e")},
	{hx::fsInt,(void *) &GL_obj::NICEST,HX_HCSTRING("NICEST","\x7e","\x6d","\x94","\x64")},
	{hx::fsInt,(void *) &GL_obj::GENERATE_MIPMAP_HINT,HX_HCSTRING("GENERATE_MIPMAP_HINT","\x94","\xd3","\xd5","\x83")},
	{hx::fsInt,(void *) &GL_obj::BYTE,HX_HCSTRING("BYTE","\x08","\xe7","\xe3","\x2b")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_BYTE,HX_HCSTRING("UNSIGNED_BYTE","\xd2","\x79","\x6b","\x01")},
	{hx::fsInt,(void *) &GL_obj::SHORT,HX_HCSTRING("SHORT","\x5c","\xbc","\x15","\xfa")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT,HX_HCSTRING("UNSIGNED_SHORT","\x52","\x9a","\x2e","\xfb")},
	{hx::fsInt,(void *) &GL_obj::INT,HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_INT,HX_HCSTRING("UNSIGNED_INT","\x45","\xfd","\xb9","\x1c")},
	{hx::fsInt,(void *) &GL_obj::FLOAT,HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_COMPONENT,HX_HCSTRING("DEPTH_COMPONENT","\x01","\x1f","\x62","\x0f")},
	{hx::fsInt,(void *) &GL_obj::ALPHA,HX_HCSTRING("ALPHA","\x3e","\xdf","\x84","\x9f")},
	{hx::fsInt,(void *) &GL_obj::RGB,HX_HCSTRING("RGB","\xed","\x76","\x3e","\x00")},
	{hx::fsInt,(void *) &GL_obj::RGBA,HX_HCSTRING("RGBA","\xb4","\x98","\x69","\x36")},
	{hx::fsInt,(void *) &GL_obj::LUMINANCE,HX_HCSTRING("LUMINANCE","\xd8","\xa7","\xe0","\x63")},
	{hx::fsInt,(void *) &GL_obj::LUMINANCE_ALPHA,HX_HCSTRING("LUMINANCE_ALPHA","\x57","\x40","\xe0","\xbd")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_4_4_4_4,HX_HCSTRING("UNSIGNED_SHORT_4_4_4_4","\xa6","\x33","\x71","\x7b")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_5_5_5_1,HX_HCSTRING("UNSIGNED_SHORT_5_5_5_1","\x26","\x01","\x6e","\x38")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_5_6_5,HX_HCSTRING("UNSIGNED_SHORT_5_6_5","\x75","\xbb","\x16","\x8c")},
	{hx::fsInt,(void *) &GL_obj::FRAGMENT_SHADER,HX_HCSTRING("FRAGMENT_SHADER","\xf4","\x26","\x78","\xe9")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_SHADER,HX_HCSTRING("VERTEX_SHADER","\xe0","\x69","\x73","\x49")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_ATTRIBS,HX_HCSTRING("MAX_VERTEX_ATTRIBS","\x49","\xc9","\x15","\x5f")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_UNIFORM_VECTORS,HX_HCSTRING("MAX_VERTEX_UNIFORM_VECTORS","\x45","\x6c","\x16","\x5a")},
	{hx::fsInt,(void *) &GL_obj::MAX_VARYING_VECTORS,HX_HCSTRING("MAX_VARYING_VECTORS","\x06","\xb9","\xf7","\x37")},
	{hx::fsInt,(void *) &GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_COMBINED_TEXTURE_IMAGE_UNITS","\xa8","\xd1","\xa6","\x77")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_VERTEX_TEXTURE_IMAGE_UNITS","\xc7","\x90","\x95","\x2b")},
	{hx::fsInt,(void *) &GL_obj::MAX_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_TEXTURE_IMAGE_UNITS","\xcc","\x6c","\x61","\x54")},
	{hx::fsInt,(void *) &GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,HX_HCSTRING("MAX_FRAGMENT_UNIFORM_VECTORS","\x71","\x49","\xf5","\x0a")},
	{hx::fsInt,(void *) &GL_obj::SHADER_TYPE,HX_HCSTRING("SHADER_TYPE","\x54","\xe5","\x27","\x87")},
	{hx::fsInt,(void *) &GL_obj::DELETE_STATUS,HX_HCSTRING("DELETE_STATUS","\x06","\xe4","\x98","\x1e")},
	{hx::fsInt,(void *) &GL_obj::LINK_STATUS,HX_HCSTRING("LINK_STATUS","\x17","\x18","\x8f","\x45")},
	{hx::fsInt,(void *) &GL_obj::VALIDATE_STATUS,HX_HCSTRING("VALIDATE_STATUS","\xfb","\x22","\x07","\xc6")},
	{hx::fsInt,(void *) &GL_obj::ATTACHED_SHADERS,HX_HCSTRING("ATTACHED_SHADERS","\x73","\xd2","\x76","\x75")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_UNIFORMS,HX_HCSTRING("ACTIVE_UNIFORMS","\x98","\x7d","\x3a","\x2c")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_ATTRIBUTES,HX_HCSTRING("ACTIVE_ATTRIBUTES","\xf0","\xe5","\xc7","\x4a")},
	{hx::fsInt,(void *) &GL_obj::SHADING_LANGUAGE_VERSION,HX_HCSTRING("SHADING_LANGUAGE_VERSION","\xe6","\xc4","\xef","\x70")},
	{hx::fsInt,(void *) &GL_obj::CURRENT_PROGRAM,HX_HCSTRING("CURRENT_PROGRAM","\xfe","\x28","\xc0","\x3f")},
	{hx::fsInt,(void *) &GL_obj::NEVER,HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17")},
	{hx::fsInt,(void *) &GL_obj::LESS,HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32")},
	{hx::fsInt,(void *) &GL_obj::EQUAL,HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0")},
	{hx::fsInt,(void *) &GL_obj::LEQUAL,HX_HCSTRING("LEQUAL","\xc8","\x73","\x90","\x53")},
	{hx::fsInt,(void *) &GL_obj::GREATER,HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37")},
	{hx::fsInt,(void *) &GL_obj::NOTEQUAL,HX_HCSTRING("NOTEQUAL","\xc1","\xc1","\xe9","\xc8")},
	{hx::fsInt,(void *) &GL_obj::GEQUAL,HX_HCSTRING("GEQUAL","\xed","\xa5","\xc7","\x53")},
	{hx::fsInt,(void *) &GL_obj::ALWAYS,HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9")},
	{hx::fsInt,(void *) &GL_obj::KEEP,HX_HCSTRING("KEEP","\x85","\x98","\xc7","\x31")},
	{hx::fsInt,(void *) &GL_obj::REPLACE,HX_HCSTRING("REPLACE","\x14","\x1c","\xfc","\x2a")},
	{hx::fsInt,(void *) &GL_obj::INCR,HX_HCSTRING("INCR","\xd4","\xfd","\x7b","\x30")},
	{hx::fsInt,(void *) &GL_obj::DECR,HX_HCSTRING("DECR","\x70","\x18","\x27","\x2d")},
	{hx::fsInt,(void *) &GL_obj::INVERT,HX_HCSTRING("INVERT","\x16","\x93","\x5b","\x52")},
	{hx::fsInt,(void *) &GL_obj::INCR_WRAP,HX_HCSTRING("INCR_WRAP","\x55","\x7f","\x68","\x2c")},
	{hx::fsInt,(void *) &GL_obj::DECR_WRAP,HX_HCSTRING("DECR_WRAP","\x39","\x6f","\xeb","\x0a")},
	{hx::fsInt,(void *) &GL_obj::VENDOR,HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51")},
	{hx::fsInt,(void *) &GL_obj::RENDERER,HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c")},
	{hx::fsInt,(void *) &GL_obj::VERSION,HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc")},
	{hx::fsInt,(void *) &GL_obj::NEAREST,HX_HCSTRING("NEAREST","\x3e","\xec","\x9d","\xe5")},
	{hx::fsInt,(void *) &GL_obj::LINEAR,HX_HCSTRING("LINEAR","\xe5","\xfd","\x22","\x9f")},
	{hx::fsInt,(void *) &GL_obj::NEAREST_MIPMAP_NEAREST,HX_HCSTRING("NEAREST_MIPMAP_NEAREST","\x68","\xb9","\x63","\x7e")},
	{hx::fsInt,(void *) &GL_obj::LINEAR_MIPMAP_NEAREST,HX_HCSTRING("LINEAR_MIPMAP_NEAREST","\xa1","\x9b","\xa4","\x65")},
	{hx::fsInt,(void *) &GL_obj::NEAREST_MIPMAP_LINEAR,HX_HCSTRING("NEAREST_MIPMAP_LINEAR","\xfb","\x83","\xf2","\x3b")},
	{hx::fsInt,(void *) &GL_obj::LINEAR_MIPMAP_LINEAR,HX_HCSTRING("LINEAR_MIPMAP_LINEAR","\xe2","\x8b","\xf8","\x99")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_MAG_FILTER,HX_HCSTRING("TEXTURE_MAG_FILTER","\x88","\xff","\xd5","\x1e")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_MIN_FILTER,HX_HCSTRING("TEXTURE_MIN_FILTER","\x69","\x66","\xc2","\x46")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_WRAP_S,HX_HCSTRING("TEXTURE_WRAP_S","\xa2","\x2d","\xc3","\xfe")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_WRAP_T,HX_HCSTRING("TEXTURE_WRAP_T","\xa3","\x2d","\xc3","\xfe")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_2D,HX_HCSTRING("TEXTURE_2D","\x16","\x0c","\xf8","\xa2")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE,HX_HCSTRING("TEXTURE","\xbb","\x9c","\xb4","\x1e")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP,HX_HCSTRING("TEXTURE_CUBE_MAP","\x36","\x7a","\xe1","\xad")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_BINDING_CUBE_MAP,HX_HCSTRING("TEXTURE_BINDING_CUBE_MAP","\xd0","\x69","\x98","\x75")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_X","\xbb","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_X","\x77","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Y","\xbc","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Y","\x78","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Z","\xbd","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Z","\x79","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,HX_HCSTRING("MAX_CUBE_MAP_TEXTURE_SIZE","\x77","\xb9","\x24","\x9d")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE0,HX_HCSTRING("TEXTURE0","\x15","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE1,HX_HCSTRING("TEXTURE1","\x16","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE2,HX_HCSTRING("TEXTURE2","\x17","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE3,HX_HCSTRING("TEXTURE3","\x18","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE4,HX_HCSTRING("TEXTURE4","\x19","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE5,HX_HCSTRING("TEXTURE5","\x1a","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE6,HX_HCSTRING("TEXTURE6","\x1b","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE7,HX_HCSTRING("TEXTURE7","\x1c","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE8,HX_HCSTRING("TEXTURE8","\x1d","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE9,HX_HCSTRING("TEXTURE9","\x1e","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE10,HX_HCSTRING("TEXTURE10","\x5a","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE11,HX_HCSTRING("TEXTURE11","\x5b","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE12,HX_HCSTRING("TEXTURE12","\x5c","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE13,HX_HCSTRING("TEXTURE13","\x5d","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE14,HX_HCSTRING("TEXTURE14","\x5e","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE15,HX_HCSTRING("TEXTURE15","\x5f","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE16,HX_HCSTRING("TEXTURE16","\x60","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE17,HX_HCSTRING("TEXTURE17","\x61","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE18,HX_HCSTRING("TEXTURE18","\x62","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE19,HX_HCSTRING("TEXTURE19","\x63","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE20,HX_HCSTRING("TEXTURE20","\x39","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE21,HX_HCSTRING("TEXTURE21","\x3a","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE22,HX_HCSTRING("TEXTURE22","\x3b","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE23,HX_HCSTRING("TEXTURE23","\x3c","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE24,HX_HCSTRING("TEXTURE24","\x3d","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE25,HX_HCSTRING("TEXTURE25","\x3e","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE26,HX_HCSTRING("TEXTURE26","\x3f","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE27,HX_HCSTRING("TEXTURE27","\x40","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE28,HX_HCSTRING("TEXTURE28","\x41","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE29,HX_HCSTRING("TEXTURE29","\x42","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE30,HX_HCSTRING("TEXTURE30","\x18","\xae","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE31,HX_HCSTRING("TEXTURE31","\x19","\xae","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_TEXTURE,HX_HCSTRING("ACTIVE_TEXTURE","\x02","\x1a","\x22","\xce")},
	{hx::fsInt,(void *) &GL_obj::REPEAT,HX_HCSTRING("REPEAT","\x5b","\x43","\xff","\xb8")},
	{hx::fsInt,(void *) &GL_obj::CLAMP_TO_EDGE,HX_HCSTRING("CLAMP_TO_EDGE","\x1d","\xfc","\x5a","\x96")},
	{hx::fsInt,(void *) &GL_obj::MIRRORED_REPEAT,HX_HCSTRING("MIRRORED_REPEAT","\x5c","\x94","\x80","\x4a")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC2,HX_HCSTRING("FLOAT_VEC2","\x61","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC3,HX_HCSTRING("FLOAT_VEC3","\x62","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC4,HX_HCSTRING("FLOAT_VEC4","\x63","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC2,HX_HCSTRING("INT_VEC2","\x2e","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC3,HX_HCSTRING("INT_VEC3","\x2f","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC4,HX_HCSTRING("INT_VEC4","\x30","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::BOOL,HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC2,HX_HCSTRING("BOOL_VEC2","\xf3","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC3,HX_HCSTRING("BOOL_VEC3","\xf4","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC4,HX_HCSTRING("BOOL_VEC4","\xf5","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT2,HX_HCSTRING("FLOAT_MAT2","\x95","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT3,HX_HCSTRING("FLOAT_MAT3","\x96","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT4,HX_HCSTRING("FLOAT_MAT4","\x97","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::SAMPLER_2D,HX_HCSTRING("SAMPLER_2D","\x09","\x2a","\x93","\x6e")},
	{hx::fsInt,(void *) &GL_obj::SAMPLER_CUBE,HX_HCSTRING("SAMPLER_CUBE","\xec","\x3e","\x82","\xa4")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_ENABLED","\x61","\x99","\x09","\x66")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_SIZE","\xc1","\x07","\xfd","\x08")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_STRIDE","\x19","\x2b","\x41","\x58")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_TYPE","\xba","\x59","\xb2","\x09")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_NORMALIZED","\x37","\xb7","\x22","\x78")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_POINTER","\x9d","\x55","\xfa","\x38")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","\xa6","\x80","\x67","\x97")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_PROGRAM_POINT_SIZE,HX_HCSTRING("VERTEX_PROGRAM_POINT_SIZE","\xe6","\x56","\xbe","\x34")},
	{hx::fsInt,(void *) &GL_obj::POINT_SPRITE,HX_HCSTRING("POINT_SPRITE","\x74","\x93","\x5c","\x14")},
	{hx::fsInt,(void *) &GL_obj::COMPILE_STATUS,HX_HCSTRING("COMPILE_STATUS","\xde","\xcb","\x4e","\x8c")},
	{hx::fsInt,(void *) &GL_obj::LOW_FLOAT,HX_HCSTRING("LOW_FLOAT","\x31","\x04","\x74","\xe4")},
	{hx::fsInt,(void *) &GL_obj::MEDIUM_FLOAT,HX_HCSTRING("MEDIUM_FLOAT","\xf2","\x8a","\x46","\xb9")},
	{hx::fsInt,(void *) &GL_obj::HIGH_FLOAT,HX_HCSTRING("HIGH_FLOAT","\x9f","\xf9","\x3b","\x47")},
	{hx::fsInt,(void *) &GL_obj::LOW_INT,HX_HCSTRING("LOW_INT","\x44","\x28","\x70","\x45")},
	{hx::fsInt,(void *) &GL_obj::MEDIUM_INT,HX_HCSTRING("MEDIUM_INT","\xc5","\xcc","\xaf","\x4f")},
	{hx::fsInt,(void *) &GL_obj::HIGH_INT,HX_HCSTRING("HIGH_INT","\x32","\x46","\x02","\x09")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER,HX_HCSTRING("FRAMEBUFFER","\xcd","\x20","\x84","\x50")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER,HX_HCSTRING("RENDERBUFFER","\xd6","\xa4","\xa4","\xa9")},
	{hx::fsInt,(void *) &GL_obj::RGBA4,HX_HCSTRING("RGBA4","\x00","\x05","\xfc","\x65")},
	{hx::fsInt,(void *) &GL_obj::RGB5_A1,HX_HCSTRING("RGB5_A1","\x47","\x8f","\xf9","\xd8")},
	{hx::fsInt,(void *) &GL_obj::RGB565,HX_HCSTRING("RGB565","\xe7","\x41","\x7f","\xd6")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_COMPONENT16,HX_HCSTRING("DEPTH_COMPONENT16","\x26","\xcc","\x68","\x43")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_INDEX,HX_HCSTRING("STENCIL_INDEX","\x0f","\x79","\xb6","\x97")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_INDEX8,HX_HCSTRING("STENCIL_INDEX8","\x49","\x74","\xf3","\x27")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_STENCIL,HX_HCSTRING("DEPTH_STENCIL","\x40","\x2f","\x20","\x2b")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_WIDTH,HX_HCSTRING("RENDERBUFFER_WIDTH","\x7d","\x1e","\xe1","\x43")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_HEIGHT,HX_HCSTRING("RENDERBUFFER_HEIGHT","\x70","\x07","\x69","\xd7")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_INTERNAL_FORMAT,HX_HCSTRING("RENDERBUFFER_INTERNAL_FORMAT","\x90","\xda","\xeb","\xb5")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_RED_SIZE,HX_HCSTRING("RENDERBUFFER_RED_SIZE","\x98","\xa5","\x58","\x5e")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_GREEN_SIZE,HX_HCSTRING("RENDERBUFFER_GREEN_SIZE","\x26","\x9b","\x7d","\x3b")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_BLUE_SIZE,HX_HCSTRING("RENDERBUFFER_BLUE_SIZE","\xdd","\x93","\x86","\xdd")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_ALPHA_SIZE,HX_HCSTRING("RENDERBUFFER_ALPHA_SIZE","\xab","\xf0","\x5d","\x87")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_DEPTH_SIZE,HX_HCSTRING("RENDERBUFFER_DEPTH_SIZE","\xe6","\x90","\x24","\xc3")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_STENCIL_SIZE,HX_HCSTRING("RENDERBUFFER_STENCIL_SIZE","\x8d","\xd5","\x5a","\x9d")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","\x50","\x22","\x44","\x50")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","\xe1","\xa1","\x3a","\x4c")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","\xf6","\x9b","\xba","\x81")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","\xdc","\x4c","\x39","\x8a")},
	{hx::fsInt,(void *) &GL_obj::COLOR_ATTACHMENT0,HX_HCSTRING("COLOR_ATTACHMENT0","\xb1","\x9a","\xfe","\x86")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_ATTACHMENT,HX_HCSTRING("DEPTH_ATTACHMENT","\xff","\x54","\xcd","\xe9")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_ATTACHMENT,HX_HCSTRING("STENCIL_ATTACHMENT","\xa6","\x8c","\x28","\x01")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_STENCIL_ATTACHMENT,HX_HCSTRING("DEPTH_STENCIL_ATTACHMENT","\xc2","\xe1","\xe1","\x9f")},
	{hx::fsInt,(void *) &GL_obj::NONE,HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_COMPLETE,HX_HCSTRING("FRAMEBUFFER_COMPLETE","\xab","\x65","\x7d","\xea")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_ATTACHMENT","\xf2","\xcf","\xb7","\x1d")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","\x8b","\x0a","\xcd","\x77")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_DIMENSIONS","\x5c","\x86","\xe4","\x1c")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_UNSUPPORTED,HX_HCSTRING("FRAMEBUFFER_UNSUPPORTED","\xe3","\xa6","\x4e","\xc8")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_BINDING,HX_HCSTRING("FRAMEBUFFER_BINDING","\x73","\xee","\xae","\xc5")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_BINDING,HX_HCSTRING("RENDERBUFFER_BINDING","\x7c","\x23","\x70","\x23")},
	{hx::fsInt,(void *) &GL_obj::MAX_RENDERBUFFER_SIZE,HX_HCSTRING("MAX_RENDERBUFFER_SIZE","\x4f","\xd4","\x3d","\x65")},
	{hx::fsInt,(void *) &GL_obj::INVALID_FRAMEBUFFER_OPERATION,HX_HCSTRING("INVALID_FRAMEBUFFER_OPERATION","\x2d","\xd4","\xc5","\x43")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_FLIP_Y_WEBGL,HX_HCSTRING("UNPACK_FLIP_Y_WEBGL","\x0e","\x9f","\x94","\x9d")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,HX_HCSTRING("UNPACK_PREMULTIPLY_ALPHA_WEBGL","\x73","\x5d","\xcb","\xc6")},
	{hx::fsInt,(void *) &GL_obj::CONTEXT_LOST_WEBGL,HX_HCSTRING("CONTEXT_LOST_WEBGL","\x6e","\x67","\x71","\x45")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,HX_HCSTRING("UNPACK_COLORSPACE_CONVERSION_WEBGL","\x9f","\xd9","\xf0","\xb9")},
	{hx::fsInt,(void *) &GL_obj::BROWSER_DEFAULT_WEBGL,HX_HCSTRING("BROWSER_DEFAULT_WEBGL","\x04","\x04","\x92","\xc0")},
	{hx::fsInt,(void *) &GL_obj::drawingBufferHeight,HX_HCSTRING("drawingBufferHeight","\x85","\x15","\xb6","\x00")},
	{hx::fsInt,(void *) &GL_obj::drawingBufferWidth,HX_HCSTRING("drawingBufferWidth","\x28","\xc6","\x86","\xcb")},
	{hx::fsInt,(void *) &GL_obj::version,HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c")},
	{hx::fsObject /*::openfl::_legacy::gl::GLFramebuffer*/ ,(void *) &GL_obj::defaultFramebuffer,HX_HCSTRING("defaultFramebuffer","\xac","\x79","\x67","\x39")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_active_texture,HX_HCSTRING("lime_gl_active_texture","\x52","\xdf","\x77","\xb3")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_attach_shader,HX_HCSTRING("lime_gl_attach_shader","\x6f","\x78","\x09","\x06")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_bind_attrib_location,HX_HCSTRING("lime_gl_bind_attrib_location","\x78","\xd0","\x23","\x1a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_bind_bitmap_data_texture,HX_HCSTRING("lime_gl_bind_bitmap_data_texture","\x84","\x86","\x5b","\xff")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_bind_buffer,HX_HCSTRING("lime_gl_bind_buffer","\x52","\x57","\xd9","\xe2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_bind_framebuffer,HX_HCSTRING("lime_gl_bind_framebuffer","\x5b","\xd1","\x58","\x70")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_bind_renderbuffer,HX_HCSTRING("lime_gl_bind_renderbuffer","\xa8","\x70","\xea","\x63")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_bind_texture,HX_HCSTRING("lime_gl_bind_texture","\x49","\x36","\xa3","\x88")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_blend_color,HX_HCSTRING("lime_gl_blend_color","\x85","\xd0","\xce","\x3a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_blend_equation,HX_HCSTRING("lime_gl_blend_equation","\xaa","\xfd","\x08","\x1f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_blend_equation_separate,HX_HCSTRING("lime_gl_blend_equation_separate","\xd8","\x13","\x95","\x58")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_blend_func,HX_HCSTRING("lime_gl_blend_func","\x62","\x46","\x02","\xe9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_blend_func_separate,HX_HCSTRING("lime_gl_blend_func_separate","\x20","\xf4","\xb8","\x2e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_buffer_data,HX_HCSTRING("lime_gl_buffer_data","\xd9","\x31","\x40","\x74")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_buffer_sub_data,HX_HCSTRING("lime_gl_buffer_sub_data","\xb8","\x37","\x6c","\xab")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_check_framebuffer_status,HX_HCSTRING("lime_gl_check_framebuffer_status","\x0b","\x35","\xe1","\xea")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_clear,HX_HCSTRING("lime_gl_clear","\x5d","\x92","\x00","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_clear_color,HX_HCSTRING("lime_gl_clear_color","\xc1","\xee","\x49","\x1a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_clear_depth,HX_HCSTRING("lime_gl_clear_depth","\x61","\x6e","\x17","\xa7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_clear_stencil,HX_HCSTRING("lime_gl_clear_stencil","\xda","\xce","\x51","\x44")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_color_mask,HX_HCSTRING("lime_gl_color_mask","\xb8","\xf1","\xa7","\x79")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_compile_shader,HX_HCSTRING("lime_gl_compile_shader","\xe1","\xd4","\x68","\x7c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_compressed_tex_image_2d,HX_HCSTRING("lime_gl_compressed_tex_image_2d","\xbc","\x70","\xb8","\x76")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_compressed_tex_sub_image_2d,HX_HCSTRING("lime_gl_compressed_tex_sub_image_2d","\x9b","\x19","\x2d","\x07")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_copy_tex_image_2d,HX_HCSTRING("lime_gl_copy_tex_image_2d","\x08","\x15","\x17","\x3a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_copy_tex_sub_image_2d,HX_HCSTRING("lime_gl_copy_tex_sub_image_2d","\xe7","\xd3","\x21","\x4b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_create_buffer,HX_HCSTRING("lime_gl_create_buffer","\xf3","\xef","\xe7","\x8a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_create_framebuffer,HX_HCSTRING("lime_gl_create_framebuffer","\x1a","\x51","\xd8","\x73")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_create_program,HX_HCSTRING("lime_gl_create_program","\x31","\xac","\x72","\x42")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_create_render_buffer,HX_HCSTRING("lime_gl_create_render_buffer","\x76","\x7b","\xe1","\x18")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_create_shader,HX_HCSTRING("lime_gl_create_shader","\x18","\xf2","\x73","\xd7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_create_texture,HX_HCSTRING("lime_gl_create_texture","\x88","\x2a","\x5a","\xed")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_cull_face,HX_HCSTRING("lime_gl_cull_face","\x5a","\x6e","\xd7","\xa6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_delete_buffer,HX_HCSTRING("lime_gl_delete_buffer","\xa4","\xaa","\x2e","\x01")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_delete_framebuffer,HX_HCSTRING("lime_gl_delete_framebuffer","\xc9","\x34","\x1a","\xa6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_delete_program,HX_HCSTRING("lime_gl_delete_program","\x60","\x4c","\x0f","\x4a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_delete_render_buffer,HX_HCSTRING("lime_gl_delete_render_buffer","\xe5","\xe8","\x26","\xca")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_delete_shader,HX_HCSTRING("lime_gl_delete_shader","\xc9","\xac","\xba","\x4d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_delete_texture,HX_HCSTRING("lime_gl_delete_texture","\xb7","\xca","\xf6","\xf4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_depth_func,HX_HCSTRING("lime_gl_depth_func","\x70","\x78","\x16","\xad")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_depth_mask,HX_HCSTRING("lime_gl_depth_mask","\x18","\xce","\xa7","\xb1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_depth_range,HX_HCSTRING("lime_gl_depth_range","\x11","\x9f","\x29","\xa2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_detach_shader,HX_HCSTRING("lime_gl_detach_shader","\xa1","\x84","\x13","\xfd")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_disable,HX_HCSTRING("lime_gl_disable","\xb8","\x5e","\x23","\x70")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_disable_vertex_attrib_array,HX_HCSTRING("lime_gl_disable_vertex_attrib_array","\x58","\xba","\x8e","\x0a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_draw_arrays,HX_HCSTRING("lime_gl_draw_arrays","\xa5","\x43","\x0c","\x17")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_draw_elements,HX_HCSTRING("lime_gl_draw_elements","\xe2","\xd1","\x98","\xb9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_enable,HX_HCSTRING("lime_gl_enable","\xb3","\x43","\x5f","\x56")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_enable_vertex_attrib_array,HX_HCSTRING("lime_gl_enable_vertex_attrib_array","\xd3","\x1e","\xa2","\xea")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_finish,HX_HCSTRING("lime_gl_finish","\x83","\xd5","\x56","\xe4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_flush,HX_HCSTRING("lime_gl_flush","\x94","\x83","\x40","\xf5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_framebuffer_renderbuffer,HX_HCSTRING("lime_gl_framebuffer_renderbuffer","\xd8","\x1b","\x4b","\x9a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_framebuffer_texture2D,HX_HCSTRING("lime_gl_framebuffer_texture2D","\x2b","\xbd","\x7d","\x0a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_front_face,HX_HCSTRING("lime_gl_front_face","\x63","\xa0","\x73","\x7d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_generate_mipmap,HX_HCSTRING("lime_gl_generate_mipmap","\x62","\xa5","\x38","\xe6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_active_attrib,HX_HCSTRING("lime_gl_get_active_attrib","\x0a","\x40","\xb7","\xd1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_active_uniform,HX_HCSTRING("lime_gl_get_active_uniform","\x74","\x90","\xd7","\x2a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_attrib_location,HX_HCSTRING("lime_gl_get_attrib_location","\xf1","\x00","\xcb","\xa5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_buffer_paramerter,HX_HCSTRING("lime_gl_get_buffer_paramerter","\xad","\x9b","\x49","\xb2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_context_attributes,HX_HCSTRING("lime_gl_get_context_attributes","\xe0","\xc6","\xc6","\x3e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_error,HX_HCSTRING("lime_gl_get_error","\xef","\xf0","\xe0","\xf5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_framebuffer_attachment_parameter,HX_HCSTRING("lime_gl_get_framebuffer_attachment_parameter","\x18","\x53","\xfb","\x61")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_parameter,HX_HCSTRING("lime_gl_get_parameter","\x50","\x7a","\xfe","\x3a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_program_info_log,HX_HCSTRING("lime_gl_get_program_info_log","\x87","\x8b","\x1c","\x48")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_program_parameter,HX_HCSTRING("lime_gl_get_program_parameter","\x95","\x8c","\xe9","\x12")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_render_buffer_parameter,HX_HCSTRING("lime_gl_get_render_buffer_parameter","\x9a","\x8b","\x13","\xf8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_shader_info_log,HX_HCSTRING("lime_gl_get_shader_info_log","\x74","\x08","\x6b","\x9a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_shader_parameter,HX_HCSTRING("lime_gl_get_shader_parameter","\x08","\x5f","\x48","\xc5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_shader_precision_format,HX_HCSTRING("lime_gl_get_shader_precision_format","\xd9","\x5f","\xb1","\x89")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_shader_source,HX_HCSTRING("lime_gl_get_shader_source","\x1c","\x86","\xa3","\xe7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_supported_extensions,HX_HCSTRING("lime_gl_get_supported_extensions","\x7e","\xb4","\x30","\x92")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_tex_parameter,HX_HCSTRING("lime_gl_get_tex_parameter","\x38","\x3a","\xff","\x30")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_uniform,HX_HCSTRING("lime_gl_get_uniform","\x1b","\x3e","\x0c","\xb0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_uniform_location,HX_HCSTRING("lime_gl_get_uniform_location","\x19","\x0c","\x33","\x6c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_vertex_attrib,HX_HCSTRING("lime_gl_get_vertex_attrib","\x2c","\x36","\x2d","\x8c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_get_vertex_attrib_offset,HX_HCSTRING("lime_gl_get_vertex_attrib_offset","\x86","\xd0","\xe7","\x4a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_hint,HX_HCSTRING("lime_gl_hint","\xb7","\x26","\x75","\xcc")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_buffer,HX_HCSTRING("lime_gl_is_buffer","\xc5","\xec","\xc6","\xb4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_enabled,HX_HCSTRING("lime_gl_is_enabled","\x1c","\xa1","\xe8","\x45")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_framebuffer,HX_HCSTRING("lime_gl_is_framebuffer","\x08","\x9b","\x19","\xab")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_program,HX_HCSTRING("lime_gl_is_program","\x1f","\xe7","\xb0","\xbb")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_renderbuffer,HX_HCSTRING("lime_gl_is_renderbuffer","\x5b","\x1e","\xda","\x91")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_shader,HX_HCSTRING("lime_gl_is_shader","\xea","\xee","\x52","\x01")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_is_texture,HX_HCSTRING("lime_gl_is_texture","\x76","\x65","\x98","\x66")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_line_width,HX_HCSTRING("lime_gl_line_width","\x6b","\x71","\x5f","\x53")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_link_program,HX_HCSTRING("lime_gl_link_program","\x2f","\xdf","\xcf","\x33")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_pixel_storei,HX_HCSTRING("lime_gl_pixel_storei","\x71","\xb2","\x56","\x3d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_polygon_offset,HX_HCSTRING("lime_gl_polygon_offset","\x28","\x8f","\x6c","\xe3")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_read_pixels,HX_HCSTRING("lime_gl_read_pixels","\x06","\x09","\x69","\xf5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_renderbuffer_storage,HX_HCSTRING("lime_gl_renderbuffer_storage","\xc2","\x94","\xf1","\x7b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_sample_coverage,HX_HCSTRING("lime_gl_sample_coverage","\xad","\x98","\xc5","\x86")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_scissor,HX_HCSTRING("lime_gl_scissor","\xec","\x1c","\xb2","\xc3")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_shader_source,HX_HCSTRING("lime_gl_shader_source","\xc5","\xd2","\xe2","\x7f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_stencil_func,HX_HCSTRING("lime_gl_stencil_func","\xd7","\xb0","\x4f","\x64")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_stencil_func_separate,HX_HCSTRING("lime_gl_stencil_func_separate","\x0b","\x13","\x77","\x19")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_stencil_mask,HX_HCSTRING("lime_gl_stencil_mask","\x7f","\x06","\xe1","\x68")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_stencil_mask_separate,HX_HCSTRING("lime_gl_stencil_mask_separate","\x63","\xc8","\x71","\x65")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_stencil_op,HX_HCSTRING("lime_gl_stencil_op","\xf4","\x8b","\x0c","\xa5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_stencil_op_separate,HX_HCSTRING("lime_gl_stencil_op_separate","\x4e","\x6c","\x36","\x5e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_tex_image_2d,HX_HCSTRING("lime_gl_tex_image_2d","\x5e","\xab","\x7a","\x34")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_tex_parameterf,HX_HCSTRING("lime_gl_tex_parameterf","\x65","\x7e","\x77","\x4d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_tex_parameteri,HX_HCSTRING("lime_gl_tex_parameteri","\x68","\x7e","\x77","\x4d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_tex_sub_image_2d,HX_HCSTRING("lime_gl_tex_sub_image_2d","\x3d","\x4d","\x7e","\x52")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform1f,HX_HCSTRING("lime_gl_uniform1f","\x19","\xea","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform1fv,HX_HCSTRING("lime_gl_uniform1fv","\x3d","\xec","\x80","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform1i,HX_HCSTRING("lime_gl_uniform1i","\x1c","\xea","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform1iv,HX_HCSTRING("lime_gl_uniform1iv","\xda","\xee","\x80","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform2f,HX_HCSTRING("lime_gl_uniform2f","\xf8","\xea","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform2fv,HX_HCSTRING("lime_gl_uniform2fv","\x7e","\xae","\x81","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform2i,HX_HCSTRING("lime_gl_uniform2i","\xfb","\xea","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform2iv,HX_HCSTRING("lime_gl_uniform2iv","\x1b","\xb1","\x81","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform3f,HX_HCSTRING("lime_gl_uniform3f","\xd7","\xeb","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform3fv,HX_HCSTRING("lime_gl_uniform3fv","\xbf","\x70","\x82","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform3i,HX_HCSTRING("lime_gl_uniform3i","\xda","\xeb","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform3iv,HX_HCSTRING("lime_gl_uniform3iv","\x5c","\x73","\x82","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform4f,HX_HCSTRING("lime_gl_uniform4f","\xb6","\xec","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform4fv,HX_HCSTRING("lime_gl_uniform4fv","\x00","\x33","\x83","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform4i,HX_HCSTRING("lime_gl_uniform4i","\xb9","\xec","\xeb","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform4iv,HX_HCSTRING("lime_gl_uniform4iv","\x9d","\x35","\x83","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_uniform_matrix,HX_HCSTRING("lime_gl_uniform_matrix","\x5c","\x9a","\xcc","\xb2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_use_program,HX_HCSTRING("lime_gl_use_program","\x1c","\x8c","\xb8","\x22")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_validate_program,HX_HCSTRING("lime_gl_validate_program","\xcb","\xeb","\x10","\x5b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_version,HX_HCSTRING("lime_gl_version","\xe8","\xdb","\xbc","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib1f,HX_HCSTRING("lime_gl_vertex_attrib1f","\x2a","\xcd","\xb2","\x7a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib1fv,HX_HCSTRING("lime_gl_vertex_attrib1fv","\x0c","\xb8","\xc0","\xe1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib2f,HX_HCSTRING("lime_gl_vertex_attrib2f","\x09","\xce","\xb2","\x7a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib2fv,HX_HCSTRING("lime_gl_vertex_attrib2fv","\x4d","\x7a","\xc1","\xe1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib3f,HX_HCSTRING("lime_gl_vertex_attrib3f","\xe8","\xce","\xb2","\x7a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib3fv,HX_HCSTRING("lime_gl_vertex_attrib3fv","\x8e","\x3c","\xc2","\xe1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib4f,HX_HCSTRING("lime_gl_vertex_attrib4f","\xc7","\xcf","\xb2","\x7a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib4fv,HX_HCSTRING("lime_gl_vertex_attrib4fv","\xcf","\xfe","\xc2","\xe1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_vertex_attrib_pointer,HX_HCSTRING("lime_gl_vertex_attrib_pointer","\x13","\xfa","\x74","\x15")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::lime_gl_viewport,HX_HCSTRING("lime_gl_viewport","\x96","\x8d","\x70","\xcf")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void GL_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GL_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::POINTS,"POINTS");
	HX_MARK_MEMBER_NAME(GL_obj::LINES,"LINES");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_LOOP,"LINE_LOOP");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_STRIP,"LINE_STRIP");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLES,"TRIANGLES");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_MARK_MEMBER_NAME(GL_obj::ZERO,"ZERO");
	HX_MARK_MEMBER_NAME(GL_obj::ONE,"ONE");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_COLOR,"SRC_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_ALPHA,"SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::DST_ALPHA,"DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::DST_COLOR,"DST_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_ADD,"FUNC_ADD");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION,"BLEND_EQUATION");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_COLOR,"BLEND_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::STREAM_DRAW,"STREAM_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::STATIC_DRAW,"STATIC_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::BUFFER_SIZE,"BUFFER_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::BUFFER_USAGE,"BUFFER_USAGE");
	HX_MARK_MEMBER_NAME(GL_obj::CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT,"FRONT");
	HX_MARK_MEMBER_NAME(GL_obj::BACK,"BACK");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_MARK_MEMBER_NAME(GL_obj::CULL_FACE,"CULL_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND,"BLEND");
	HX_MARK_MEMBER_NAME(GL_obj::DITHER,"DITHER");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_TEST,"STENCIL_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_TEST,"DEPTH_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::SCISSOR_TEST,"SCISSOR_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_MARK_MEMBER_NAME(GL_obj::NO_ERROR,"NO_ERROR");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_MARK_MEMBER_NAME(GL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_MARK_MEMBER_NAME(GL_obj::CW,"CW");
	HX_MARK_MEMBER_NAME(GL_obj::CCW,"CCW");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_WIDTH,"LINE_WIDTH");
	HX_MARK_MEMBER_NAME(GL_obj::ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT_FACE,"FRONT_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_RANGE,"DEPTH_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_FUNC,"DEPTH_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_FUNC,"STENCIL_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_FAIL,"STENCIL_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_REF,"STENCIL_REF");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::VIEWPORT,"VIEWPORT");
	HX_MARK_MEMBER_NAME(GL_obj::SCISSOR_BOX,"SCISSOR_BOX");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(GL_obj::PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_MARK_MEMBER_NAME(GL_obj::SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::RED_BITS,"RED_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::GREEN_BITS,"GREEN_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::BLUE_BITS,"BLUE_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::ALPHA_BITS,"ALPHA_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_BITS,"DEPTH_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BITS,"STENCIL_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLES,"SAMPLES");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_MARK_MEMBER_NAME(GL_obj::COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_MARK_MEMBER_NAME(GL_obj::DONT_CARE,"DONT_CARE");
	HX_MARK_MEMBER_NAME(GL_obj::FASTEST,"FASTEST");
	HX_MARK_MEMBER_NAME(GL_obj::NICEST,"NICEST");
	HX_MARK_MEMBER_NAME(GL_obj::GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_MARK_MEMBER_NAME(GL_obj::BYTE,"BYTE");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_MARK_MEMBER_NAME(GL_obj::SHORT,"SHORT");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_MARK_MEMBER_NAME(GL_obj::INT,"INT");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_INT,"UNSIGNED_INT");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_MARK_MEMBER_NAME(GL_obj::ALPHA,"ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::RGB,"RGB");
	HX_MARK_MEMBER_NAME(GL_obj::RGBA,"RGBA");
	HX_MARK_MEMBER_NAME(GL_obj::LUMINANCE,"LUMINANCE");
	HX_MARK_MEMBER_NAME(GL_obj::LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_MARK_MEMBER_NAME(GL_obj::FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_SHADER,"VERTEX_SHADER");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::SHADER_TYPE,"SHADER_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::DELETE_STATUS,"DELETE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::LINK_STATUS,"LINK_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_MARK_MEMBER_NAME(GL_obj::SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_MARK_MEMBER_NAME(GL_obj::CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_MARK_MEMBER_NAME(GL_obj::NEVER,"NEVER");
	HX_MARK_MEMBER_NAME(GL_obj::LESS,"LESS");
	HX_MARK_MEMBER_NAME(GL_obj::EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::LEQUAL,"LEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::GREATER,"GREATER");
	HX_MARK_MEMBER_NAME(GL_obj::NOTEQUAL,"NOTEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::GEQUAL,"GEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::ALWAYS,"ALWAYS");
	HX_MARK_MEMBER_NAME(GL_obj::KEEP,"KEEP");
	HX_MARK_MEMBER_NAME(GL_obj::REPLACE,"REPLACE");
	HX_MARK_MEMBER_NAME(GL_obj::INCR,"INCR");
	HX_MARK_MEMBER_NAME(GL_obj::DECR,"DECR");
	HX_MARK_MEMBER_NAME(GL_obj::INVERT,"INVERT");
	HX_MARK_MEMBER_NAME(GL_obj::INCR_WRAP,"INCR_WRAP");
	HX_MARK_MEMBER_NAME(GL_obj::DECR_WRAP,"DECR_WRAP");
	HX_MARK_MEMBER_NAME(GL_obj::VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(GL_obj::VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST,"NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR,"LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_2D,"TEXTURE_2D");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE,"TEXTURE");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE0,"TEXTURE0");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE1,"TEXTURE1");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE2,"TEXTURE2");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE3,"TEXTURE3");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE4,"TEXTURE4");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE5,"TEXTURE5");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE6,"TEXTURE6");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE7,"TEXTURE7");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE8,"TEXTURE8");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE9,"TEXTURE9");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE10,"TEXTURE10");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE11,"TEXTURE11");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE12,"TEXTURE12");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE13,"TEXTURE13");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE14,"TEXTURE14");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE15,"TEXTURE15");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE16,"TEXTURE16");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE17,"TEXTURE17");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE18,"TEXTURE18");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE19,"TEXTURE19");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE20,"TEXTURE20");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE21,"TEXTURE21");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE22,"TEXTURE22");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE23,"TEXTURE23");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE24,"TEXTURE24");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE25,"TEXTURE25");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE26,"TEXTURE26");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE27,"TEXTURE27");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE28,"TEXTURE28");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE29,"TEXTURE29");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE30,"TEXTURE30");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE31,"TEXTURE31");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_MARK_MEMBER_NAME(GL_obj::REPEAT,"REPEAT");
	HX_MARK_MEMBER_NAME(GL_obj::CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_MARK_MEMBER_NAME(GL_obj::MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC2,"FLOAT_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC3,"FLOAT_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC4,"FLOAT_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC2,"INT_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC3,"INT_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC4,"INT_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL,"BOOL");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC2,"BOOL_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC3,"BOOL_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC4,"BOOL_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT2,"FLOAT_MAT2");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT3,"FLOAT_MAT3");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT4,"FLOAT_MAT4");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLER_2D,"SAMPLER_2D");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::POINT_SPRITE,"POINT_SPRITE");
	HX_MARK_MEMBER_NAME(GL_obj::COMPILE_STATUS,"COMPILE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::LOW_FLOAT,"LOW_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::HIGH_FLOAT,"HIGH_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::LOW_INT,"LOW_INT");
	HX_MARK_MEMBER_NAME(GL_obj::MEDIUM_INT,"MEDIUM_INT");
	HX_MARK_MEMBER_NAME(GL_obj::HIGH_INT,"HIGH_INT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER,"FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER,"RENDERBUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::RGBA4,"RGBA4");
	HX_MARK_MEMBER_NAME(GL_obj::RGB5_A1,"RGB5_A1");
	HX_MARK_MEMBER_NAME(GL_obj::RGB565,"RGB565");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_INDEX,"STENCIL_INDEX");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::NONE,"NONE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::drawingBufferHeight,"drawingBufferHeight");
	HX_MARK_MEMBER_NAME(GL_obj::drawingBufferWidth,"drawingBufferWidth");
	HX_MARK_MEMBER_NAME(GL_obj::version,"version");
	HX_MARK_MEMBER_NAME(GL_obj::defaultFramebuffer,"defaultFramebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_active_texture,"lime_gl_active_texture");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_attach_shader,"lime_gl_attach_shader");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_bind_attrib_location,"lime_gl_bind_attrib_location");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_bind_bitmap_data_texture,"lime_gl_bind_bitmap_data_texture");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_bind_buffer,"lime_gl_bind_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_bind_framebuffer,"lime_gl_bind_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_bind_renderbuffer,"lime_gl_bind_renderbuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_bind_texture,"lime_gl_bind_texture");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_blend_color,"lime_gl_blend_color");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_blend_equation,"lime_gl_blend_equation");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_blend_equation_separate,"lime_gl_blend_equation_separate");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_blend_func,"lime_gl_blend_func");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_blend_func_separate,"lime_gl_blend_func_separate");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_buffer_data,"lime_gl_buffer_data");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_buffer_sub_data,"lime_gl_buffer_sub_data");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_check_framebuffer_status,"lime_gl_check_framebuffer_status");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_clear,"lime_gl_clear");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_clear_color,"lime_gl_clear_color");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_clear_depth,"lime_gl_clear_depth");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_clear_stencil,"lime_gl_clear_stencil");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_color_mask,"lime_gl_color_mask");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_compile_shader,"lime_gl_compile_shader");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_compressed_tex_image_2d,"lime_gl_compressed_tex_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_compressed_tex_sub_image_2d,"lime_gl_compressed_tex_sub_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_copy_tex_image_2d,"lime_gl_copy_tex_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_copy_tex_sub_image_2d,"lime_gl_copy_tex_sub_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_create_buffer,"lime_gl_create_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_create_framebuffer,"lime_gl_create_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_create_program,"lime_gl_create_program");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_create_render_buffer,"lime_gl_create_render_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_create_shader,"lime_gl_create_shader");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_create_texture,"lime_gl_create_texture");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_cull_face,"lime_gl_cull_face");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_delete_buffer,"lime_gl_delete_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_delete_framebuffer,"lime_gl_delete_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_delete_program,"lime_gl_delete_program");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_delete_render_buffer,"lime_gl_delete_render_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_delete_shader,"lime_gl_delete_shader");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_delete_texture,"lime_gl_delete_texture");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_depth_func,"lime_gl_depth_func");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_depth_mask,"lime_gl_depth_mask");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_depth_range,"lime_gl_depth_range");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_detach_shader,"lime_gl_detach_shader");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_disable,"lime_gl_disable");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_disable_vertex_attrib_array,"lime_gl_disable_vertex_attrib_array");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_draw_arrays,"lime_gl_draw_arrays");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_draw_elements,"lime_gl_draw_elements");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_enable,"lime_gl_enable");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_enable_vertex_attrib_array,"lime_gl_enable_vertex_attrib_array");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_finish,"lime_gl_finish");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_flush,"lime_gl_flush");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_framebuffer_renderbuffer,"lime_gl_framebuffer_renderbuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_framebuffer_texture2D,"lime_gl_framebuffer_texture2D");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_front_face,"lime_gl_front_face");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_generate_mipmap,"lime_gl_generate_mipmap");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_active_attrib,"lime_gl_get_active_attrib");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_active_uniform,"lime_gl_get_active_uniform");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_attrib_location,"lime_gl_get_attrib_location");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_buffer_paramerter,"lime_gl_get_buffer_paramerter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_context_attributes,"lime_gl_get_context_attributes");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_error,"lime_gl_get_error");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_framebuffer_attachment_parameter,"lime_gl_get_framebuffer_attachment_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_parameter,"lime_gl_get_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_program_info_log,"lime_gl_get_program_info_log");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_program_parameter,"lime_gl_get_program_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_render_buffer_parameter,"lime_gl_get_render_buffer_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_shader_info_log,"lime_gl_get_shader_info_log");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_shader_parameter,"lime_gl_get_shader_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_shader_precision_format,"lime_gl_get_shader_precision_format");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_shader_source,"lime_gl_get_shader_source");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_supported_extensions,"lime_gl_get_supported_extensions");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_tex_parameter,"lime_gl_get_tex_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_uniform,"lime_gl_get_uniform");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_uniform_location,"lime_gl_get_uniform_location");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_vertex_attrib,"lime_gl_get_vertex_attrib");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_get_vertex_attrib_offset,"lime_gl_get_vertex_attrib_offset");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_hint,"lime_gl_hint");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_buffer,"lime_gl_is_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_enabled,"lime_gl_is_enabled");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_framebuffer,"lime_gl_is_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_program,"lime_gl_is_program");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_renderbuffer,"lime_gl_is_renderbuffer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_shader,"lime_gl_is_shader");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_is_texture,"lime_gl_is_texture");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_line_width,"lime_gl_line_width");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_link_program,"lime_gl_link_program");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_pixel_storei,"lime_gl_pixel_storei");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_polygon_offset,"lime_gl_polygon_offset");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_read_pixels,"lime_gl_read_pixels");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_renderbuffer_storage,"lime_gl_renderbuffer_storage");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_sample_coverage,"lime_gl_sample_coverage");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_scissor,"lime_gl_scissor");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_shader_source,"lime_gl_shader_source");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_stencil_func,"lime_gl_stencil_func");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_stencil_func_separate,"lime_gl_stencil_func_separate");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_stencil_mask,"lime_gl_stencil_mask");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_stencil_mask_separate,"lime_gl_stencil_mask_separate");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_stencil_op,"lime_gl_stencil_op");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_stencil_op_separate,"lime_gl_stencil_op_separate");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_tex_image_2d,"lime_gl_tex_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_tex_parameterf,"lime_gl_tex_parameterf");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_tex_parameteri,"lime_gl_tex_parameteri");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_tex_sub_image_2d,"lime_gl_tex_sub_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform1f,"lime_gl_uniform1f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform1fv,"lime_gl_uniform1fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform1i,"lime_gl_uniform1i");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform1iv,"lime_gl_uniform1iv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform2f,"lime_gl_uniform2f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform2fv,"lime_gl_uniform2fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform2i,"lime_gl_uniform2i");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform2iv,"lime_gl_uniform2iv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform3f,"lime_gl_uniform3f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform3fv,"lime_gl_uniform3fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform3i,"lime_gl_uniform3i");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform3iv,"lime_gl_uniform3iv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform4f,"lime_gl_uniform4f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform4fv,"lime_gl_uniform4fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform4i,"lime_gl_uniform4i");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform4iv,"lime_gl_uniform4iv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_uniform_matrix,"lime_gl_uniform_matrix");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_use_program,"lime_gl_use_program");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_validate_program,"lime_gl_validate_program");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_version,"lime_gl_version");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib1f,"lime_gl_vertex_attrib1f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib1fv,"lime_gl_vertex_attrib1fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib2f,"lime_gl_vertex_attrib2f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib2fv,"lime_gl_vertex_attrib2fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib3f,"lime_gl_vertex_attrib3f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib3fv,"lime_gl_vertex_attrib3fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib4f,"lime_gl_vertex_attrib4f");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib4fv,"lime_gl_vertex_attrib4fv");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib_pointer,"lime_gl_vertex_attrib_pointer");
	HX_MARK_MEMBER_NAME(GL_obj::lime_gl_viewport,"lime_gl_viewport");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GL_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GL_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::POINTS,"POINTS");
	HX_VISIT_MEMBER_NAME(GL_obj::LINES,"LINES");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_LOOP,"LINE_LOOP");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_STRIP,"LINE_STRIP");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLES,"TRIANGLES");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_VISIT_MEMBER_NAME(GL_obj::ZERO,"ZERO");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE,"ONE");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_COLOR,"SRC_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_ALPHA,"SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::DST_ALPHA,"DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::DST_COLOR,"DST_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_ADD,"FUNC_ADD");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION,"BLEND_EQUATION");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_COLOR,"BLEND_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::STREAM_DRAW,"STREAM_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::STATIC_DRAW,"STATIC_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::BUFFER_SIZE,"BUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::BUFFER_USAGE,"BUFFER_USAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT,"FRONT");
	HX_VISIT_MEMBER_NAME(GL_obj::BACK,"BACK");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_VISIT_MEMBER_NAME(GL_obj::CULL_FACE,"CULL_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND,"BLEND");
	HX_VISIT_MEMBER_NAME(GL_obj::DITHER,"DITHER");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_TEST,"STENCIL_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_TEST,"DEPTH_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::SCISSOR_TEST,"SCISSOR_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::NO_ERROR,"NO_ERROR");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_VISIT_MEMBER_NAME(GL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_VISIT_MEMBER_NAME(GL_obj::CW,"CW");
	HX_VISIT_MEMBER_NAME(GL_obj::CCW,"CCW");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_WIDTH,"LINE_WIDTH");
	HX_VISIT_MEMBER_NAME(GL_obj::ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT_FACE,"FRONT_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_RANGE,"DEPTH_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_FUNC,"DEPTH_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_FUNC,"STENCIL_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_FAIL,"STENCIL_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_REF,"STENCIL_REF");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::VIEWPORT,"VIEWPORT");
	HX_VISIT_MEMBER_NAME(GL_obj::SCISSOR_BOX,"SCISSOR_BOX");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_VISIT_MEMBER_NAME(GL_obj::SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::RED_BITS,"RED_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::GREEN_BITS,"GREEN_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::BLUE_BITS,"BLUE_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::ALPHA_BITS,"ALPHA_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_BITS,"DEPTH_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BITS,"STENCIL_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLES,"SAMPLES");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_VISIT_MEMBER_NAME(GL_obj::COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_VISIT_MEMBER_NAME(GL_obj::DONT_CARE,"DONT_CARE");
	HX_VISIT_MEMBER_NAME(GL_obj::FASTEST,"FASTEST");
	HX_VISIT_MEMBER_NAME(GL_obj::NICEST,"NICEST");
	HX_VISIT_MEMBER_NAME(GL_obj::GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_VISIT_MEMBER_NAME(GL_obj::BYTE,"BYTE");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_VISIT_MEMBER_NAME(GL_obj::SHORT,"SHORT");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_VISIT_MEMBER_NAME(GL_obj::INT,"INT");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_INT,"UNSIGNED_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_VISIT_MEMBER_NAME(GL_obj::ALPHA,"ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB,"RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::RGBA,"RGBA");
	HX_VISIT_MEMBER_NAME(GL_obj::LUMINANCE,"LUMINANCE");
	HX_VISIT_MEMBER_NAME(GL_obj::LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_SHADER,"VERTEX_SHADER");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::SHADER_TYPE,"SHADER_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::DELETE_STATUS,"DELETE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::LINK_STATUS,"LINK_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_VISIT_MEMBER_NAME(GL_obj::SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_VISIT_MEMBER_NAME(GL_obj::CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_VISIT_MEMBER_NAME(GL_obj::NEVER,"NEVER");
	HX_VISIT_MEMBER_NAME(GL_obj::LESS,"LESS");
	HX_VISIT_MEMBER_NAME(GL_obj::EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::LEQUAL,"LEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::GREATER,"GREATER");
	HX_VISIT_MEMBER_NAME(GL_obj::NOTEQUAL,"NOTEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::GEQUAL,"GEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::ALWAYS,"ALWAYS");
	HX_VISIT_MEMBER_NAME(GL_obj::KEEP,"KEEP");
	HX_VISIT_MEMBER_NAME(GL_obj::REPLACE,"REPLACE");
	HX_VISIT_MEMBER_NAME(GL_obj::INCR,"INCR");
	HX_VISIT_MEMBER_NAME(GL_obj::DECR,"DECR");
	HX_VISIT_MEMBER_NAME(GL_obj::INVERT,"INVERT");
	HX_VISIT_MEMBER_NAME(GL_obj::INCR_WRAP,"INCR_WRAP");
	HX_VISIT_MEMBER_NAME(GL_obj::DECR_WRAP,"DECR_WRAP");
	HX_VISIT_MEMBER_NAME(GL_obj::VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST,"NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR,"LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_2D,"TEXTURE_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE,"TEXTURE");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE0,"TEXTURE0");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE1,"TEXTURE1");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE2,"TEXTURE2");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE3,"TEXTURE3");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE4,"TEXTURE4");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE5,"TEXTURE5");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE6,"TEXTURE6");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE7,"TEXTURE7");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE8,"TEXTURE8");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE9,"TEXTURE9");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE10,"TEXTURE10");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE11,"TEXTURE11");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE12,"TEXTURE12");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE13,"TEXTURE13");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE14,"TEXTURE14");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE15,"TEXTURE15");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE16,"TEXTURE16");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE17,"TEXTURE17");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE18,"TEXTURE18");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE19,"TEXTURE19");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE20,"TEXTURE20");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE21,"TEXTURE21");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE22,"TEXTURE22");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE23,"TEXTURE23");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE24,"TEXTURE24");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE25,"TEXTURE25");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE26,"TEXTURE26");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE27,"TEXTURE27");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE28,"TEXTURE28");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE29,"TEXTURE29");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE30,"TEXTURE30");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE31,"TEXTURE31");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_VISIT_MEMBER_NAME(GL_obj::REPEAT,"REPEAT");
	HX_VISIT_MEMBER_NAME(GL_obj::CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_VISIT_MEMBER_NAME(GL_obj::MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC2,"FLOAT_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC3,"FLOAT_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC4,"FLOAT_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC2,"INT_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC3,"INT_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC4,"INT_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL,"BOOL");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC2,"BOOL_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC3,"BOOL_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC4,"BOOL_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT2,"FLOAT_MAT2");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT3,"FLOAT_MAT3");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT4,"FLOAT_MAT4");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLER_2D,"SAMPLER_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::POINT_SPRITE,"POINT_SPRITE");
	HX_VISIT_MEMBER_NAME(GL_obj::COMPILE_STATUS,"COMPILE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::LOW_FLOAT,"LOW_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::HIGH_FLOAT,"HIGH_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::LOW_INT,"LOW_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::MEDIUM_INT,"MEDIUM_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::HIGH_INT,"HIGH_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER,"FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER,"RENDERBUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::RGBA4,"RGBA4");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB5_A1,"RGB5_A1");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB565,"RGB565");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_INDEX,"STENCIL_INDEX");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::NONE,"NONE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::drawingBufferHeight,"drawingBufferHeight");
	HX_VISIT_MEMBER_NAME(GL_obj::drawingBufferWidth,"drawingBufferWidth");
	HX_VISIT_MEMBER_NAME(GL_obj::version,"version");
	HX_VISIT_MEMBER_NAME(GL_obj::defaultFramebuffer,"defaultFramebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_active_texture,"lime_gl_active_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_attach_shader,"lime_gl_attach_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_bind_attrib_location,"lime_gl_bind_attrib_location");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_bind_bitmap_data_texture,"lime_gl_bind_bitmap_data_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_bind_buffer,"lime_gl_bind_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_bind_framebuffer,"lime_gl_bind_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_bind_renderbuffer,"lime_gl_bind_renderbuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_bind_texture,"lime_gl_bind_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_blend_color,"lime_gl_blend_color");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_blend_equation,"lime_gl_blend_equation");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_blend_equation_separate,"lime_gl_blend_equation_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_blend_func,"lime_gl_blend_func");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_blend_func_separate,"lime_gl_blend_func_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_buffer_data,"lime_gl_buffer_data");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_buffer_sub_data,"lime_gl_buffer_sub_data");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_check_framebuffer_status,"lime_gl_check_framebuffer_status");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_clear,"lime_gl_clear");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_clear_color,"lime_gl_clear_color");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_clear_depth,"lime_gl_clear_depth");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_clear_stencil,"lime_gl_clear_stencil");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_color_mask,"lime_gl_color_mask");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_compile_shader,"lime_gl_compile_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_compressed_tex_image_2d,"lime_gl_compressed_tex_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_compressed_tex_sub_image_2d,"lime_gl_compressed_tex_sub_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_copy_tex_image_2d,"lime_gl_copy_tex_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_copy_tex_sub_image_2d,"lime_gl_copy_tex_sub_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_create_buffer,"lime_gl_create_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_create_framebuffer,"lime_gl_create_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_create_program,"lime_gl_create_program");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_create_render_buffer,"lime_gl_create_render_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_create_shader,"lime_gl_create_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_create_texture,"lime_gl_create_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_cull_face,"lime_gl_cull_face");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_delete_buffer,"lime_gl_delete_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_delete_framebuffer,"lime_gl_delete_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_delete_program,"lime_gl_delete_program");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_delete_render_buffer,"lime_gl_delete_render_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_delete_shader,"lime_gl_delete_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_delete_texture,"lime_gl_delete_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_depth_func,"lime_gl_depth_func");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_depth_mask,"lime_gl_depth_mask");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_depth_range,"lime_gl_depth_range");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_detach_shader,"lime_gl_detach_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_disable,"lime_gl_disable");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_disable_vertex_attrib_array,"lime_gl_disable_vertex_attrib_array");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_draw_arrays,"lime_gl_draw_arrays");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_draw_elements,"lime_gl_draw_elements");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_enable,"lime_gl_enable");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_enable_vertex_attrib_array,"lime_gl_enable_vertex_attrib_array");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_finish,"lime_gl_finish");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_flush,"lime_gl_flush");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_framebuffer_renderbuffer,"lime_gl_framebuffer_renderbuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_framebuffer_texture2D,"lime_gl_framebuffer_texture2D");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_front_face,"lime_gl_front_face");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_generate_mipmap,"lime_gl_generate_mipmap");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_active_attrib,"lime_gl_get_active_attrib");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_active_uniform,"lime_gl_get_active_uniform");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_attrib_location,"lime_gl_get_attrib_location");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_buffer_paramerter,"lime_gl_get_buffer_paramerter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_context_attributes,"lime_gl_get_context_attributes");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_error,"lime_gl_get_error");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_framebuffer_attachment_parameter,"lime_gl_get_framebuffer_attachment_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_parameter,"lime_gl_get_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_program_info_log,"lime_gl_get_program_info_log");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_program_parameter,"lime_gl_get_program_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_render_buffer_parameter,"lime_gl_get_render_buffer_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_shader_info_log,"lime_gl_get_shader_info_log");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_shader_parameter,"lime_gl_get_shader_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_shader_precision_format,"lime_gl_get_shader_precision_format");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_shader_source,"lime_gl_get_shader_source");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_supported_extensions,"lime_gl_get_supported_extensions");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_tex_parameter,"lime_gl_get_tex_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_uniform,"lime_gl_get_uniform");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_uniform_location,"lime_gl_get_uniform_location");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_vertex_attrib,"lime_gl_get_vertex_attrib");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_get_vertex_attrib_offset,"lime_gl_get_vertex_attrib_offset");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_hint,"lime_gl_hint");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_buffer,"lime_gl_is_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_enabled,"lime_gl_is_enabled");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_framebuffer,"lime_gl_is_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_program,"lime_gl_is_program");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_renderbuffer,"lime_gl_is_renderbuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_shader,"lime_gl_is_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_is_texture,"lime_gl_is_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_line_width,"lime_gl_line_width");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_link_program,"lime_gl_link_program");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_pixel_storei,"lime_gl_pixel_storei");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_polygon_offset,"lime_gl_polygon_offset");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_read_pixels,"lime_gl_read_pixels");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_renderbuffer_storage,"lime_gl_renderbuffer_storage");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_sample_coverage,"lime_gl_sample_coverage");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_scissor,"lime_gl_scissor");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_shader_source,"lime_gl_shader_source");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_stencil_func,"lime_gl_stencil_func");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_stencil_func_separate,"lime_gl_stencil_func_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_stencil_mask,"lime_gl_stencil_mask");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_stencil_mask_separate,"lime_gl_stencil_mask_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_stencil_op,"lime_gl_stencil_op");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_stencil_op_separate,"lime_gl_stencil_op_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_tex_image_2d,"lime_gl_tex_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_tex_parameterf,"lime_gl_tex_parameterf");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_tex_parameteri,"lime_gl_tex_parameteri");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_tex_sub_image_2d,"lime_gl_tex_sub_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform1f,"lime_gl_uniform1f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform1fv,"lime_gl_uniform1fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform1i,"lime_gl_uniform1i");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform1iv,"lime_gl_uniform1iv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform2f,"lime_gl_uniform2f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform2fv,"lime_gl_uniform2fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform2i,"lime_gl_uniform2i");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform2iv,"lime_gl_uniform2iv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform3f,"lime_gl_uniform3f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform3fv,"lime_gl_uniform3fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform3i,"lime_gl_uniform3i");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform3iv,"lime_gl_uniform3iv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform4f,"lime_gl_uniform4f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform4fv,"lime_gl_uniform4fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform4i,"lime_gl_uniform4i");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform4iv,"lime_gl_uniform4iv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_uniform_matrix,"lime_gl_uniform_matrix");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_use_program,"lime_gl_use_program");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_validate_program,"lime_gl_validate_program");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_version,"lime_gl_version");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib1f,"lime_gl_vertex_attrib1f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib1fv,"lime_gl_vertex_attrib1fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib2f,"lime_gl_vertex_attrib2f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib2fv,"lime_gl_vertex_attrib2fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib3f,"lime_gl_vertex_attrib3f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib3fv,"lime_gl_vertex_attrib3fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib4f,"lime_gl_vertex_attrib4f");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib4fv,"lime_gl_vertex_attrib4fv");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_vertex_attrib_pointer,"lime_gl_vertex_attrib_pointer");
	HX_VISIT_MEMBER_NAME(GL_obj::lime_gl_viewport,"lime_gl_viewport");
};

#endif

hx::Class GL_obj::__mClass;

static ::String GL_obj_sStaticFields[] = {
	HX_HCSTRING("DEPTH_BUFFER_BIT","\xca","\x5b","\xce","\xc6"),
	HX_HCSTRING("STENCIL_BUFFER_BIT","\x71","\x93","\x29","\xde"),
	HX_HCSTRING("COLOR_BUFFER_BIT","\x6a","\xf7","\x74","\xfb"),
	HX_HCSTRING("POINTS","\x23","\xbe","\xb0","\xa9"),
	HX_HCSTRING("LINES","\xdf","\x15","\xf0","\xf2"),
	HX_HCSTRING("LINE_LOOP","\xcf","\x55","\xc1","\x16"),
	HX_HCSTRING("LINE_STRIP","\xed","\x20","\x88","\xdd"),
	HX_HCSTRING("TRIANGLES","\x8b","\xa0","\x99","\x7a"),
	HX_HCSTRING("TRIANGLE_STRIP","\xc1","\x66","\x6c","\xf6"),
	HX_HCSTRING("TRIANGLE_FAN","\x7c","\xee","\x2e","\x91"),
	HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b"),
	HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00"),
	HX_HCSTRING("SRC_COLOR","\x48","\x9e","\xbd","\x5c"),
	HX_HCSTRING("ONE_MINUS_SRC_COLOR","\x20","\x3b","\xe1","\x48"),
	HX_HCSTRING("SRC_ALPHA","\x43","\xd4","\xf7","\x33"),
	HX_HCSTRING("ONE_MINUS_SRC_ALPHA","\x1b","\x71","\x1b","\x20"),
	HX_HCSTRING("DST_ALPHA","\x24","\x02","\xf2","\xd3"),
	HX_HCSTRING("ONE_MINUS_DST_ALPHA","\xfc","\x9e","\x15","\xc0"),
	HX_HCSTRING("DST_COLOR","\x29","\xcc","\xb7","\xfc"),
	HX_HCSTRING("ONE_MINUS_DST_COLOR","\x01","\x69","\xdb","\xe8"),
	HX_HCSTRING("SRC_ALPHA_SATURATE","\xab","\xe2","\x3d","\x33"),
	HX_HCSTRING("FUNC_ADD","\x46","\x78","\x17","\x75"),
	HX_HCSTRING("BLEND_EQUATION","\x9a","\x14","\x92","\x71"),
	HX_HCSTRING("BLEND_EQUATION_RGB","\x88","\x25","\xeb","\x90"),
	HX_HCSTRING("BLEND_EQUATION_ALPHA","\x99","\xaa","\xae","\x37"),
	HX_HCSTRING("FUNC_SUBTRACT","\xaf","\xc0","\xa0","\x17"),
	HX_HCSTRING("FUNC_REVERSE_SUBTRACT","\xcc","\x8d","\xef","\xf3"),
	HX_HCSTRING("BLEND_DST_RGB","\x05","\x87","\xf5","\xec"),
	HX_HCSTRING("BLEND_SRC_RGB","\x64","\x43","\x8c","\x2c"),
	HX_HCSTRING("BLEND_DST_ALPHA","\x56","\x25","\x32","\x74"),
	HX_HCSTRING("BLEND_SRC_ALPHA","\x75","\xf7","\x37","\xd4"),
	HX_HCSTRING("CONSTANT_COLOR","\xe8","\x64","\x8a","\xc8"),
	HX_HCSTRING("ONE_MINUS_CONSTANT_COLOR","\x10","\x39","\xe7","\x06"),
	HX_HCSTRING("CONSTANT_ALPHA","\xe3","\x9a","\xc4","\x9f"),
	HX_HCSTRING("ONE_MINUS_CONSTANT_ALPHA","\x0b","\x6f","\x21","\xde"),
	HX_HCSTRING("BLEND_COLOR","\x75","\xcb","\xc8","\x67"),
	HX_HCSTRING("ARRAY_BUFFER","\x46","\x66","\x17","\xf4"),
	HX_HCSTRING("ELEMENT_ARRAY_BUFFER","\x09","\x05","\x53","\x3d"),
	HX_HCSTRING("ARRAY_BUFFER_BINDING","\xec","\xd4","\xa9","\x79"),
	HX_HCSTRING("ELEMENT_ARRAY_BUFFER_BINDING","\xaf","\x6e","\x96","\xa2"),
	HX_HCSTRING("STREAM_DRAW","\x63","\x7f","\x28","\x15"),
	HX_HCSTRING("STATIC_DRAW","\x75","\x50","\x2f","\xba"),
	HX_HCSTRING("DYNAMIC_DRAW","\x24","\x04","\x1f","\x24"),
	HX_HCSTRING("BUFFER_SIZE","\xa0","\x7b","\x91","\x4c"),
	HX_HCSTRING("BUFFER_USAGE","\x42","\x05","\x11","\xe0"),
	HX_HCSTRING("CURRENT_VERTEX_ATTRIB","\x1f","\x8c","\x2f","\xab"),
	HX_HCSTRING("FRONT","\x89","\x50","\x7c","\x84"),
	HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b"),
	HX_HCSTRING("FRONT_AND_BACK","\xa5","\x3d","\x6a","\xc1"),
	HX_HCSTRING("CULL_FACE","\x8a","\xa5","\xf4","\xcf"),
	HX_HCSTRING("BLEND","\x31","\x20","\xe3","\x32"),
	HX_HCSTRING("DITHER","\xe6","\xac","\x41","\x70"),
	HX_HCSTRING("STENCIL_TEST","\xd5","\xdc","\x69","\xd5"),
	HX_HCSTRING("DEPTH_TEST","\x6e","\x6c","\x25","\x28"),
	HX_HCSTRING("SCISSOR_TEST","\xb5","\xbe","\x51","\x59"),
	HX_HCSTRING("POLYGON_OFFSET_FILL","\x4a","\x3d","\x32","\xac"),
	HX_HCSTRING("SAMPLE_ALPHA_TO_COVERAGE","\x16","\x3e","\x56","\xe1"),
	HX_HCSTRING("SAMPLE_COVERAGE","\xdd","\xb7","\x0e","\xc1"),
	HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f"),
	HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13"),
	HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0"),
	HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29"),
	HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1"),
	HX_HCSTRING("CW","\xb4","\x3a","\x00","\x00"),
	HX_HCSTRING("CCW","\xb7","\x11","\x33","\x00"),
	HX_HCSTRING("LINE_WIDTH","\x1b","\x84","\xd2","\x23"),
	HX_HCSTRING("ALIASED_POINT_SIZE_RANGE","\xfe","\xf6","\xa4","\x7b"),
	HX_HCSTRING("ALIASED_LINE_WIDTH_RANGE","\xe9","\x22","\xd5","\x8a"),
	HX_HCSTRING("CULL_FACE_MODE","\x78","\xbd","\x87","\xd1"),
	HX_HCSTRING("FRONT_FACE","\x53","\xb7","\x4d","\xef"),
	HX_HCSTRING("DEPTH_RANGE","\x01","\x9a","\x23","\xcf"),
	HX_HCSTRING("DEPTH_WRITEMASK","\x8f","\x37","\x3f","\x66"),
	HX_HCSTRING("DEPTH_CLEAR_VALUE","\x23","\x17","\x0d","\x1b"),
	HX_HCSTRING("DEPTH_FUNC","\x60","\x8f","\xf0","\x1e"),
	HX_HCSTRING("STENCIL_CLEAR_VALUE","\x9c","\x91","\x82","\x73"),
	HX_HCSTRING("STENCIL_FUNC","\xc7","\xff","\x34","\xcc"),
	HX_HCSTRING("STENCIL_FAIL","\x61","\xce","\x25","\xcc"),
	HX_HCSTRING("STENCIL_PASS_DEPTH_FAIL","\x45","\xca","\xb9","\xc8"),
	HX_HCSTRING("STENCIL_PASS_DEPTH_PASS","\x38","\xf5","\x55","\xcf"),
	HX_HCSTRING("STENCIL_REF","\x10","\x6a","\xa5","\x3c"),
	HX_HCSTRING("STENCIL_VALUE_MASK","\x9d","\x58","\x5e","\xa0"),
	HX_HCSTRING("STENCIL_WRITEMASK","\xc8","\xf1","\xa6","\x49"),
	HX_HCSTRING("STENCIL_BACK_FUNC","\x39","\x78","\xa2","\x90"),
	HX_HCSTRING("STENCIL_BACK_FAIL","\xd3","\x46","\x93","\x90"),
	HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_FAIL","\x13","\x23","\x0e","\x34"),
	HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_PASS","\x06","\x4e","\xaa","\x3a"),
	HX_HCSTRING("STENCIL_BACK_REF","\xde","\x45","\xb8","\x08"),
	HX_HCSTRING("STENCIL_BACK_VALUE_MASK","\x8f","\xb2","\xc4","\x88"),
	HX_HCSTRING("STENCIL_BACK_WRITEMASK","\x16","\x9c","\x15","\xc2"),
	HX_HCSTRING("VIEWPORT","\x66","\xdc","\x2a","\xf6"),
	HX_HCSTRING("SCISSOR_BOX","\xe8","\x48","\x4c","\x55"),
	HX_HCSTRING("COLOR_CLEAR_VALUE","\x83","\xa7","\x2e","\xf8"),
	HX_HCSTRING("COLOR_WRITEMASK","\xef","\xef","\xf9","\x14"),
	HX_HCSTRING("UNPACK_ALIGNMENT","\xb6","\x2a","\x2e","\x4b"),
	HX_HCSTRING("PACK_ALIGNMENT","\x9d","\xd6","\x85","\xc3"),
	HX_HCSTRING("MAX_TEXTURE_SIZE","\xe0","\x0b","\x5b","\xfb"),
	HX_HCSTRING("MAX_VIEWPORT_DIMS","\xa9","\x2d","\xfb","\x08"),
	HX_HCSTRING("SUBPIXEL_BITS","\x1f","\xac","\x14","\x0a"),
	HX_HCSTRING("RED_BITS","\x14","\xf8","\x9e","\x96"),
	HX_HCSTRING("GREEN_BITS","\x62","\xa9","\x9b","\x94"),
	HX_HCSTRING("BLUE_BITS","\x0b","\x26","\x60","\xa1"),
	HX_HCSTRING("ALPHA_BITS","\xe7","\xfe","\x7b","\xe0"),
	HX_HCSTRING("DEPTH_BITS","\x22","\x9f","\x42","\x1c"),
	HX_HCSTRING("STENCIL_BITS","\x89","\x0f","\x87","\xc9"),
	HX_HCSTRING("POLYGON_OFFSET_UNITS","\xa8","\xe8","\x11","\xa6"),
	HX_HCSTRING("POLYGON_OFFSET_FACTOR","\x56","\x6b","\x12","\x2a"),
	HX_HCSTRING("TEXTURE_BINDING_2D","\x30","\xec","\x98","\xb1"),
	HX_HCSTRING("SAMPLE_BUFFERS","\xfe","\x16","\x71","\x3c"),
	HX_HCSTRING("SAMPLES","\xe9","\x98","\x9d","\x03"),
	HX_HCSTRING("SAMPLE_COVERAGE_VALUE","\x2f","\x7a","\x07","\x69"),
	HX_HCSTRING("SAMPLE_COVERAGE_INVERT","\x78","\x52","\xa5","\xcd"),
	HX_HCSTRING("COMPRESSED_TEXTURE_FORMATS","\x7a","\x13","\xe3","\x12"),
	HX_HCSTRING("DONT_CARE","\x7f","\x9b","\xc1","\xcf"),
	HX_HCSTRING("FASTEST","\x0a","\xa3","\x0d","\x5e"),
	HX_HCSTRING("NICEST","\x7e","\x6d","\x94","\x64"),
	HX_HCSTRING("GENERATE_MIPMAP_HINT","\x94","\xd3","\xd5","\x83"),
	HX_HCSTRING("BYTE","\x08","\xe7","\xe3","\x2b"),
	HX_HCSTRING("UNSIGNED_BYTE","\xd2","\x79","\x6b","\x01"),
	HX_HCSTRING("SHORT","\x5c","\xbc","\x15","\xfa"),
	HX_HCSTRING("UNSIGNED_SHORT","\x52","\x9a","\x2e","\xfb"),
	HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00"),
	HX_HCSTRING("UNSIGNED_INT","\x45","\xfd","\xb9","\x1c"),
	HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80"),
	HX_HCSTRING("DEPTH_COMPONENT","\x01","\x1f","\x62","\x0f"),
	HX_HCSTRING("ALPHA","\x3e","\xdf","\x84","\x9f"),
	HX_HCSTRING("RGB","\xed","\x76","\x3e","\x00"),
	HX_HCSTRING("RGBA","\xb4","\x98","\x69","\x36"),
	HX_HCSTRING("LUMINANCE","\xd8","\xa7","\xe0","\x63"),
	HX_HCSTRING("LUMINANCE_ALPHA","\x57","\x40","\xe0","\xbd"),
	HX_HCSTRING("UNSIGNED_SHORT_4_4_4_4","\xa6","\x33","\x71","\x7b"),
	HX_HCSTRING("UNSIGNED_SHORT_5_5_5_1","\x26","\x01","\x6e","\x38"),
	HX_HCSTRING("UNSIGNED_SHORT_5_6_5","\x75","\xbb","\x16","\x8c"),
	HX_HCSTRING("FRAGMENT_SHADER","\xf4","\x26","\x78","\xe9"),
	HX_HCSTRING("VERTEX_SHADER","\xe0","\x69","\x73","\x49"),
	HX_HCSTRING("MAX_VERTEX_ATTRIBS","\x49","\xc9","\x15","\x5f"),
	HX_HCSTRING("MAX_VERTEX_UNIFORM_VECTORS","\x45","\x6c","\x16","\x5a"),
	HX_HCSTRING("MAX_VARYING_VECTORS","\x06","\xb9","\xf7","\x37"),
	HX_HCSTRING("MAX_COMBINED_TEXTURE_IMAGE_UNITS","\xa8","\xd1","\xa6","\x77"),
	HX_HCSTRING("MAX_VERTEX_TEXTURE_IMAGE_UNITS","\xc7","\x90","\x95","\x2b"),
	HX_HCSTRING("MAX_TEXTURE_IMAGE_UNITS","\xcc","\x6c","\x61","\x54"),
	HX_HCSTRING("MAX_FRAGMENT_UNIFORM_VECTORS","\x71","\x49","\xf5","\x0a"),
	HX_HCSTRING("SHADER_TYPE","\x54","\xe5","\x27","\x87"),
	HX_HCSTRING("DELETE_STATUS","\x06","\xe4","\x98","\x1e"),
	HX_HCSTRING("LINK_STATUS","\x17","\x18","\x8f","\x45"),
	HX_HCSTRING("VALIDATE_STATUS","\xfb","\x22","\x07","\xc6"),
	HX_HCSTRING("ATTACHED_SHADERS","\x73","\xd2","\x76","\x75"),
	HX_HCSTRING("ACTIVE_UNIFORMS","\x98","\x7d","\x3a","\x2c"),
	HX_HCSTRING("ACTIVE_ATTRIBUTES","\xf0","\xe5","\xc7","\x4a"),
	HX_HCSTRING("SHADING_LANGUAGE_VERSION","\xe6","\xc4","\xef","\x70"),
	HX_HCSTRING("CURRENT_PROGRAM","\xfe","\x28","\xc0","\x3f"),
	HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17"),
	HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32"),
	HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0"),
	HX_HCSTRING("LEQUAL","\xc8","\x73","\x90","\x53"),
	HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37"),
	HX_HCSTRING("NOTEQUAL","\xc1","\xc1","\xe9","\xc8"),
	HX_HCSTRING("GEQUAL","\xed","\xa5","\xc7","\x53"),
	HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9"),
	HX_HCSTRING("KEEP","\x85","\x98","\xc7","\x31"),
	HX_HCSTRING("REPLACE","\x14","\x1c","\xfc","\x2a"),
	HX_HCSTRING("INCR","\xd4","\xfd","\x7b","\x30"),
	HX_HCSTRING("DECR","\x70","\x18","\x27","\x2d"),
	HX_HCSTRING("INVERT","\x16","\x93","\x5b","\x52"),
	HX_HCSTRING("INCR_WRAP","\x55","\x7f","\x68","\x2c"),
	HX_HCSTRING("DECR_WRAP","\x39","\x6f","\xeb","\x0a"),
	HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51"),
	HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c"),
	HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc"),
	HX_HCSTRING("NEAREST","\x3e","\xec","\x9d","\xe5"),
	HX_HCSTRING("LINEAR","\xe5","\xfd","\x22","\x9f"),
	HX_HCSTRING("NEAREST_MIPMAP_NEAREST","\x68","\xb9","\x63","\x7e"),
	HX_HCSTRING("LINEAR_MIPMAP_NEAREST","\xa1","\x9b","\xa4","\x65"),
	HX_HCSTRING("NEAREST_MIPMAP_LINEAR","\xfb","\x83","\xf2","\x3b"),
	HX_HCSTRING("LINEAR_MIPMAP_LINEAR","\xe2","\x8b","\xf8","\x99"),
	HX_HCSTRING("TEXTURE_MAG_FILTER","\x88","\xff","\xd5","\x1e"),
	HX_HCSTRING("TEXTURE_MIN_FILTER","\x69","\x66","\xc2","\x46"),
	HX_HCSTRING("TEXTURE_WRAP_S","\xa2","\x2d","\xc3","\xfe"),
	HX_HCSTRING("TEXTURE_WRAP_T","\xa3","\x2d","\xc3","\xfe"),
	HX_HCSTRING("TEXTURE_2D","\x16","\x0c","\xf8","\xa2"),
	HX_HCSTRING("TEXTURE","\xbb","\x9c","\xb4","\x1e"),
	HX_HCSTRING("TEXTURE_CUBE_MAP","\x36","\x7a","\xe1","\xad"),
	HX_HCSTRING("TEXTURE_BINDING_CUBE_MAP","\xd0","\x69","\x98","\x75"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_X","\xbb","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_X","\x77","\x03","\xe2","\x6b"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Y","\xbc","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Y","\x78","\x03","\xe2","\x6b"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Z","\xbd","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Z","\x79","\x03","\xe2","\x6b"),
	HX_HCSTRING("MAX_CUBE_MAP_TEXTURE_SIZE","\x77","\xb9","\x24","\x9d"),
	HX_HCSTRING("TEXTURE0","\x15","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE1","\x16","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE2","\x17","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE3","\x18","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE4","\x19","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE5","\x1a","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE6","\x1b","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE7","\x1c","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE8","\x1d","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE9","\x1e","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE10","\x5a","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE11","\x5b","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE12","\x5c","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE13","\x5d","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE14","\x5e","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE15","\x5f","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE16","\x60","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE17","\x61","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE18","\x62","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE19","\x63","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE20","\x39","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE21","\x3a","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE22","\x3b","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE23","\x3c","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE24","\x3d","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE25","\x3e","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE26","\x3f","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE27","\x40","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE28","\x41","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE29","\x42","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE30","\x18","\xae","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE31","\x19","\xae","\xa1","\xaa"),
	HX_HCSTRING("ACTIVE_TEXTURE","\x02","\x1a","\x22","\xce"),
	HX_HCSTRING("REPEAT","\x5b","\x43","\xff","\xb8"),
	HX_HCSTRING("CLAMP_TO_EDGE","\x1d","\xfc","\x5a","\x96"),
	HX_HCSTRING("MIRRORED_REPEAT","\x5c","\x94","\x80","\x4a"),
	HX_HCSTRING("FLOAT_VEC2","\x61","\xac","\xa4","\xeb"),
	HX_HCSTRING("FLOAT_VEC3","\x62","\xac","\xa4","\xeb"),
	HX_HCSTRING("FLOAT_VEC4","\x63","\xac","\xa4","\xeb"),
	HX_HCSTRING("INT_VEC2","\x2e","\x14","\x05","\x7d"),
	HX_HCSTRING("INT_VEC3","\x2f","\x14","\x05","\x7d"),
	HX_HCSTRING("INT_VEC4","\x30","\x14","\x05","\x7d"),
	HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b"),
	HX_HCSTRING("BOOL_VEC2","\xf3","\x66","\x2b","\x2d"),
	HX_HCSTRING("BOOL_VEC3","\xf4","\x66","\x2b","\x2d"),
	HX_HCSTRING("BOOL_VEC4","\xf5","\x66","\x2b","\x2d"),
	HX_HCSTRING("FLOAT_MAT2","\x95","\xc6","\xae","\xe5"),
	HX_HCSTRING("FLOAT_MAT3","\x96","\xc6","\xae","\xe5"),
	HX_HCSTRING("FLOAT_MAT4","\x97","\xc6","\xae","\xe5"),
	HX_HCSTRING("SAMPLER_2D","\x09","\x2a","\x93","\x6e"),
	HX_HCSTRING("SAMPLER_CUBE","\xec","\x3e","\x82","\xa4"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_ENABLED","\x61","\x99","\x09","\x66"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_SIZE","\xc1","\x07","\xfd","\x08"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_STRIDE","\x19","\x2b","\x41","\x58"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_TYPE","\xba","\x59","\xb2","\x09"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_NORMALIZED","\x37","\xb7","\x22","\x78"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_POINTER","\x9d","\x55","\xfa","\x38"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","\xa6","\x80","\x67","\x97"),
	HX_HCSTRING("VERTEX_PROGRAM_POINT_SIZE","\xe6","\x56","\xbe","\x34"),
	HX_HCSTRING("POINT_SPRITE","\x74","\x93","\x5c","\x14"),
	HX_HCSTRING("COMPILE_STATUS","\xde","\xcb","\x4e","\x8c"),
	HX_HCSTRING("LOW_FLOAT","\x31","\x04","\x74","\xe4"),
	HX_HCSTRING("MEDIUM_FLOAT","\xf2","\x8a","\x46","\xb9"),
	HX_HCSTRING("HIGH_FLOAT","\x9f","\xf9","\x3b","\x47"),
	HX_HCSTRING("LOW_INT","\x44","\x28","\x70","\x45"),
	HX_HCSTRING("MEDIUM_INT","\xc5","\xcc","\xaf","\x4f"),
	HX_HCSTRING("HIGH_INT","\x32","\x46","\x02","\x09"),
	HX_HCSTRING("FRAMEBUFFER","\xcd","\x20","\x84","\x50"),
	HX_HCSTRING("RENDERBUFFER","\xd6","\xa4","\xa4","\xa9"),
	HX_HCSTRING("RGBA4","\x00","\x05","\xfc","\x65"),
	HX_HCSTRING("RGB5_A1","\x47","\x8f","\xf9","\xd8"),
	HX_HCSTRING("RGB565","\xe7","\x41","\x7f","\xd6"),
	HX_HCSTRING("DEPTH_COMPONENT16","\x26","\xcc","\x68","\x43"),
	HX_HCSTRING("STENCIL_INDEX","\x0f","\x79","\xb6","\x97"),
	HX_HCSTRING("STENCIL_INDEX8","\x49","\x74","\xf3","\x27"),
	HX_HCSTRING("DEPTH_STENCIL","\x40","\x2f","\x20","\x2b"),
	HX_HCSTRING("RENDERBUFFER_WIDTH","\x7d","\x1e","\xe1","\x43"),
	HX_HCSTRING("RENDERBUFFER_HEIGHT","\x70","\x07","\x69","\xd7"),
	HX_HCSTRING("RENDERBUFFER_INTERNAL_FORMAT","\x90","\xda","\xeb","\xb5"),
	HX_HCSTRING("RENDERBUFFER_RED_SIZE","\x98","\xa5","\x58","\x5e"),
	HX_HCSTRING("RENDERBUFFER_GREEN_SIZE","\x26","\x9b","\x7d","\x3b"),
	HX_HCSTRING("RENDERBUFFER_BLUE_SIZE","\xdd","\x93","\x86","\xdd"),
	HX_HCSTRING("RENDERBUFFER_ALPHA_SIZE","\xab","\xf0","\x5d","\x87"),
	HX_HCSTRING("RENDERBUFFER_DEPTH_SIZE","\xe6","\x90","\x24","\xc3"),
	HX_HCSTRING("RENDERBUFFER_STENCIL_SIZE","\x8d","\xd5","\x5a","\x9d"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","\x50","\x22","\x44","\x50"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","\xe1","\xa1","\x3a","\x4c"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","\xf6","\x9b","\xba","\x81"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","\xdc","\x4c","\x39","\x8a"),
	HX_HCSTRING("COLOR_ATTACHMENT0","\xb1","\x9a","\xfe","\x86"),
	HX_HCSTRING("DEPTH_ATTACHMENT","\xff","\x54","\xcd","\xe9"),
	HX_HCSTRING("STENCIL_ATTACHMENT","\xa6","\x8c","\x28","\x01"),
	HX_HCSTRING("DEPTH_STENCIL_ATTACHMENT","\xc2","\xe1","\xe1","\x9f"),
	HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33"),
	HX_HCSTRING("FRAMEBUFFER_COMPLETE","\xab","\x65","\x7d","\xea"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_ATTACHMENT","\xf2","\xcf","\xb7","\x1d"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","\x8b","\x0a","\xcd","\x77"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_DIMENSIONS","\x5c","\x86","\xe4","\x1c"),
	HX_HCSTRING("FRAMEBUFFER_UNSUPPORTED","\xe3","\xa6","\x4e","\xc8"),
	HX_HCSTRING("FRAMEBUFFER_BINDING","\x73","\xee","\xae","\xc5"),
	HX_HCSTRING("RENDERBUFFER_BINDING","\x7c","\x23","\x70","\x23"),
	HX_HCSTRING("MAX_RENDERBUFFER_SIZE","\x4f","\xd4","\x3d","\x65"),
	HX_HCSTRING("INVALID_FRAMEBUFFER_OPERATION","\x2d","\xd4","\xc5","\x43"),
	HX_HCSTRING("UNPACK_FLIP_Y_WEBGL","\x0e","\x9f","\x94","\x9d"),
	HX_HCSTRING("UNPACK_PREMULTIPLY_ALPHA_WEBGL","\x73","\x5d","\xcb","\xc6"),
	HX_HCSTRING("CONTEXT_LOST_WEBGL","\x6e","\x67","\x71","\x45"),
	HX_HCSTRING("UNPACK_COLORSPACE_CONVERSION_WEBGL","\x9f","\xd9","\xf0","\xb9"),
	HX_HCSTRING("BROWSER_DEFAULT_WEBGL","\x04","\x04","\x92","\xc0"),
	HX_HCSTRING("drawingBufferHeight","\x85","\x15","\xb6","\x00"),
	HX_HCSTRING("drawingBufferWidth","\x28","\xc6","\x86","\xcb"),
	HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c"),
	HX_HCSTRING("defaultFramebuffer","\xac","\x79","\x67","\x39"),
	HX_HCSTRING("activeTexture","\xb5","\x13","\xaa","\x56"),
	HX_HCSTRING("attachShader","\xca","\xd0","\x77","\xb2"),
	HX_HCSTRING("bindAttribLocation","\x3c","\xa6","\x30","\x1e"),
	HX_HCSTRING("bindBitmapDataTexture","\xa5","\xd9","\xa8","\x2f"),
	HX_HCSTRING("bindBuffer","\x9d","\x92","\xbe","\xf8"),
	HX_HCSTRING("bindFramebuffer","\x30","\xc6","\x61","\xe7"),
	HX_HCSTRING("bindRenderbuffer","\x33","\xb6","\xb7","\x14"),
	HX_HCSTRING("bindTexture","\x9e","\xdc","\x51","\x9b"),
	HX_HCSTRING("blendColor","\x52","\x33","\xb4","\xe2"),
	HX_HCSTRING("blendEquation","\xfd","\x98","\xad","\x02"),
	HX_HCSTRING("blendEquationSeparate","\x80","\x39","\x68","\xa7"),
	HX_HCSTRING("blendFunc","\x35","\xfc","\x9b","\x07"),
	HX_HCSTRING("blendFuncSeparate","\xb8","\x94","\xc0","\xca"),
	HX_HCSTRING("bufferData","\x4a","\xbf","\x73","\x93"),
	HX_HCSTRING("bufferSubData","\xaa","\xf6","\xe4","\x45"),
	HX_HCSTRING("checkFramebufferStatus","\x17","\x26","\x75","\x0a"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("clearColor","\x96","\xb0","\x66","\x1f"),
	HX_HCSTRING("clearDepth","\x36","\x30","\x34","\xac"),
	HX_HCSTRING("clearStencil","\xef","\x6f","\x82","\x5b"),
	HX_HCSTRING("colorMask","\xef","\xcb","\xc3","\x23"),
	HX_HCSTRING("compileShader","\xf8","\x70","\xb2","\xda"),
	HX_HCSTRING("compressedTexImage2D","\xa7","\xd8","\x5d","\x24"),
	HX_HCSTRING("compressedTexSubImage2D","\xd3","\xb5","\x7d","\x36"),
	HX_HCSTRING("copyTexImage2D","\xdb","\xd0","\x76","\xe4"),
	HX_HCSTRING("copyTexSubImage2D","\x1f","\xd6","\xae","\xa4"),
	HX_HCSTRING("createBuffer","\x1c","\xfd","\xe9","\xf2"),
	HX_HCSTRING("createFramebuffer","\x51","\xef","\xe8","\xcc"),
	HX_HCSTRING("createProgram","\xe8","\x22","\x3c","\xdc"),
	HX_HCSTRING("createRenderbuffer","\xf2","\x89","\x74","\x05"),
	HX_HCSTRING("createShader","\x41","\xff","\x75","\x3f"),
	HX_HCSTRING("createTexture","\x3f","\xa1","\x23","\x87"),
	HX_HCSTRING("cullFace","\x6f","\xe7","\x31","\xac"),
	HX_HCSTRING("deleteBuffer","\x8b","\xe3","\x2c","\x37"),
	HX_HCSTRING("deleteFramebuffer","\x82","\x56","\x01","\x50"),
	HX_HCSTRING("deleteProgram","\x99","\xdd","\x82","\x52"),
	HX_HCSTRING("deleteRenderbuffer","\xa1","\x6d","\xb6","\x37"),
	HX_HCSTRING("deleteShader","\xb0","\xe5","\xb8","\x83"),
	HX_HCSTRING("deleteTexture","\xf0","\x5b","\x6a","\xfd"),
	HX_HCSTRING("depthFunc","\xe7","\x45","\x48","\x9a"),
	HX_HCSTRING("depthMask","\x8f","\x9b","\xd9","\x9e"),
	HX_HCSTRING("depthRange","\xba","\x99","\x8b","\x40"),
	HX_HCSTRING("detachShader","\xd8","\xd0","\xad","\xea"),
	HX_HCSTRING("disable","\xe8","\x69","\x58","\xb1"),
	HX_HCSTRING("disableVertexAttribArray","\xe3","\x69","\x74","\x4a"),
	HX_HCSTRING("drawArrays","\xde","\xf3","\xb3","\xf9"),
	HX_HCSTRING("drawElements","\x5b","\xc2","\xb7","\x59"),
	HX_HCSTRING("enable","\x83","\xae","\x87","\xf8"),
	HX_HCSTRING("enableVertexAttribArray","\xe8","\x46","\x5a","\xac"),
	HX_HCSTRING("finish","\x53","\x40","\x7f","\x86"),
	HX_HCSTRING("flush","\xc4","\x62","\x9b","\x02"),
	HX_HCSTRING("framebufferRenderbuffer","\x63","\xdd","\xb2","\x36"),
	HX_HCSTRING("framebufferTexture2D","\xc0","\x66","\x22","\x24"),
	HX_HCSTRING("frontFace","\xe6","\x01","\xc1","\x80"),
	HX_HCSTRING("generateMipmap","\x9d","\xd6","\x0d","\x5b"),
	HX_HCSTRING("getActiveAttrib","\x66","\x8b","\x22","\x63"),
	HX_HCSTRING("getActiveUniform","\x98","\x35","\x4e","\xd7"),
	HX_HCSTRING("getAttachedShaders","\xb4","\x2e","\x77","\x93"),
	HX_HCSTRING("getAttribLocation","\xd5","\x1a","\x10","\x5d"),
	HX_HCSTRING("getBufferParameter","\x93","\x58","\xb4","\x14"),
	HX_HCSTRING("getContextAttributes","\x30","\xda","\xe1","\xad"),
	HX_HCSTRING("getError","\x52","\xdb","\x00","\xd3"),
	HX_HCSTRING("getExtension","\x09","\x30","\x67","\xf4"),
	HX_HCSTRING("getFramebufferAttachmentParameter","\x8f","\xbf","\x8d","\xff"),
	HX_HCSTRING("getParameter","\x33","\xd2","\x06","\x58"),
	HX_HCSTRING("getProgramInfoLog","\xc8","\xf1","\xf2","\xcd"),
	HX_HCSTRING("getProgramParameter","\x3b","\xc3","\x9c","\x96"),
	HX_HCSTRING("getRenderbufferParameter","\x7d","\xc1","\xd7","\x3c"),
	HX_HCSTRING("getShaderInfoLog","\x9b","\xbd","\xc8","\xf3"),
	HX_HCSTRING("getShaderParameter","\xce","\x69","\x5b","\x36"),
	HX_HCSTRING("getShaderPrecisionFormat","\xfa","\xb8","\xcf","\xce"),
	HX_HCSTRING("getShaderSource","\x96","\xa3","\x04","\xc5"),
	HX_HCSTRING("getSupportedExtensions","\xec","\x78","\x6d","\xa1"),
	HX_HCSTRING("getTexParameter","\x78","\x98","\xd3","\xd2"),
	HX_HCSTRING("getUniform","\x3e","\xc7","\xc5","\x04"),
	HX_HCSTRING("getUniformLocation","\x93","\x5f","\xd4","\x4f"),
	HX_HCSTRING("getVertexAttrib","\x84","\x2f","\x1c","\xa3"),
	HX_HCSTRING("getVertexAttribOffset","\x37","\xb6","\xce","\x56"),
	HX_HCSTRING("hint","\x87","\x3d","\x0e","\x45"),
	HX_HCSTRING("isBuffer","\x8a","\x58","\xfe","\x28"),
	HX_HCSTRING("isEnabled","\xb7","\x81","\x2f","\x82"),
	HX_HCSTRING("isFramebuffer","\x23","\x65","\x6c","\x83"),
	HX_HCSTRING("isProgram","\xba","\xc7","\xf7","\xf7"),
	HX_HCSTRING("isRenderbuffer","\xe0","\x2b","\xf8","\x01"),
	HX_HCSTRING("isShader","\xaf","\x5a","\x8a","\x75"),
	HX_HCSTRING("isTexture","\x11","\x46","\xdf","\xa2"),
	HX_HCSTRING("lineWidth","\x72","\xb9","\x5d","\x11"),
	HX_HCSTRING("linkProgram","\xaa","\xad","\x7b","\x89"),
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	HX_HCSTRING("pixelStorei","\x8e","\x34","\xc8","\x80"),
	HX_HCSTRING("polygonOffset","\xad","\x25","\x4d","\x66"),
	HX_HCSTRING("readPixels","\x23","\xd3","\x25","\x86"),
	HX_HCSTRING("renderbufferStorage","\x05","\xa1","\x70","\x87"),
	HX_HCSTRING("sampleCoverage","\x32","\x68","\x81","\x3b"),
	HX_HCSTRING("scissor","\x1c","\x28","\xe7","\x04"),
	HX_HCSTRING("shaderSource","\xe0","\x4d","\x1a","\xa2"),
	HX_HCSTRING("stencilFunc","\x60","\x83","\xbe","\x40"),
	HX_HCSTRING("stencilFuncSeparate","\xe3","\xbe","\xce","\xb2"),
	HX_HCSTRING("stencilMask","\x08","\xd9","\x4f","\x45"),
	HX_HCSTRING("stencilMaskSeparate","\x8b","\xfc","\xa9","\xc6"),
	HX_HCSTRING("stencilOp","\x3d","\x7a","\xec","\x56"),
	HX_HCSTRING("stencilOpSeparate","\xc0","\x5a","\x4a","\x53"),
	HX_HCSTRING("texImage2D","\xc6","\x7c","\x67","\xb9"),
	HX_HCSTRING("texParameterf","\x64","\x27","\x31","\x3c"),
	HX_HCSTRING("texParameteri","\x67","\x27","\x31","\x3c"),
	HX_HCSTRING("texSubImage2D","\x14","\x2f","\x90","\x28"),
	HX_HCSTRING("uniform1f","\x49","\x21","\xde","\x07"),
	HX_HCSTRING("uniform1fv","\x0d","\xff","\x7e","\xda"),
	HX_HCSTRING("uniform1i","\x4c","\x21","\xde","\x07"),
	HX_HCSTRING("uniform1iv","\xaa","\x01","\x7f","\xda"),
	HX_HCSTRING("uniform2f","\x28","\x22","\xde","\x07"),
	HX_HCSTRING("uniform2fv","\x4e","\xc1","\x7f","\xda"),
	HX_HCSTRING("uniform2i","\x2b","\x22","\xde","\x07"),
	HX_HCSTRING("uniform2iv","\xeb","\xc3","\x7f","\xda"),
	HX_HCSTRING("uniform3f","\x07","\x23","\xde","\x07"),
	HX_HCSTRING("uniform3fv","\x8f","\x83","\x80","\xda"),
	HX_HCSTRING("uniform3i","\x0a","\x23","\xde","\x07"),
	HX_HCSTRING("uniform3iv","\x2c","\x86","\x80","\xda"),
	HX_HCSTRING("uniform4f","\xe6","\x23","\xde","\x07"),
	HX_HCSTRING("uniform4fv","\xd0","\x45","\x81","\xda"),
	HX_HCSTRING("uniform4i","\xe9","\x23","\xde","\x07"),
	HX_HCSTRING("uniform4iv","\x6d","\x48","\x81","\xda"),
	HX_HCSTRING("uniformMatrix2fv","\x8d","\x8a","\x59","\xc5"),
	HX_HCSTRING("uniformMatrix3fv","\xce","\x4c","\x5a","\xc5"),
	HX_HCSTRING("uniformMatrix4fv","\x0f","\x0f","\x5b","\xc5"),
	HX_HCSTRING("uniformMatrix3D","\x86","\x86","\xbb","\x1e"),
	HX_HCSTRING("useProgram","\xfd","\x6c","\xac","\xf6"),
	HX_HCSTRING("validateProgram","\x8e","\x80","\x0f","\xef"),
	HX_HCSTRING("vertexAttrib1f","\x63","\x94","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib1fv","\xb3","\x42","\x0b","\xec"),
	HX_HCSTRING("vertexAttrib2f","\x42","\x95","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib2fv","\xf4","\x04","\x0c","\xec"),
	HX_HCSTRING("vertexAttrib3f","\x21","\x96","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib3fv","\x35","\xc7","\x0c","\xec"),
	HX_HCSTRING("vertexAttrib4f","\x00","\x97","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib4fv","\x76","\x89","\x0d","\xec"),
	HX_HCSTRING("vertexAttribPointer","\x8f","\x04","\xb6","\x3f"),
	HX_HCSTRING("viewport","\x66","\x4c","\xa5","\x9c"),
	HX_HCSTRING("get_drawingBufferHeight","\x1c","\xbc","\x0b","\x09"),
	HX_HCSTRING("get_drawingBufferWidth","\x71","\x3f","\x1b","\x25"),
	HX_HCSTRING("get_version","\x2f","\x47","\xec","\x02"),
	HX_HCSTRING("lime_gl_active_texture","\x52","\xdf","\x77","\xb3"),
	HX_HCSTRING("lime_gl_attach_shader","\x6f","\x78","\x09","\x06"),
	HX_HCSTRING("lime_gl_bind_attrib_location","\x78","\xd0","\x23","\x1a"),
	HX_HCSTRING("lime_gl_bind_bitmap_data_texture","\x84","\x86","\x5b","\xff"),
	HX_HCSTRING("lime_gl_bind_buffer","\x52","\x57","\xd9","\xe2"),
	HX_HCSTRING("lime_gl_bind_framebuffer","\x5b","\xd1","\x58","\x70"),
	HX_HCSTRING("lime_gl_bind_renderbuffer","\xa8","\x70","\xea","\x63"),
	HX_HCSTRING("lime_gl_bind_texture","\x49","\x36","\xa3","\x88"),
	HX_HCSTRING("lime_gl_blend_color","\x85","\xd0","\xce","\x3a"),
	HX_HCSTRING("lime_gl_blend_equation","\xaa","\xfd","\x08","\x1f"),
	HX_HCSTRING("lime_gl_blend_equation_separate","\xd8","\x13","\x95","\x58"),
	HX_HCSTRING("lime_gl_blend_func","\x62","\x46","\x02","\xe9"),
	HX_HCSTRING("lime_gl_blend_func_separate","\x20","\xf4","\xb8","\x2e"),
	HX_HCSTRING("lime_gl_buffer_data","\xd9","\x31","\x40","\x74"),
	HX_HCSTRING("lime_gl_buffer_sub_data","\xb8","\x37","\x6c","\xab"),
	HX_HCSTRING("lime_gl_check_framebuffer_status","\x0b","\x35","\xe1","\xea"),
	HX_HCSTRING("lime_gl_clear","\x5d","\x92","\x00","\x3b"),
	HX_HCSTRING("lime_gl_clear_color","\xc1","\xee","\x49","\x1a"),
	HX_HCSTRING("lime_gl_clear_depth","\x61","\x6e","\x17","\xa7"),
	HX_HCSTRING("lime_gl_clear_stencil","\xda","\xce","\x51","\x44"),
	HX_HCSTRING("lime_gl_color_mask","\xb8","\xf1","\xa7","\x79"),
	HX_HCSTRING("lime_gl_compile_shader","\xe1","\xd4","\x68","\x7c"),
	HX_HCSTRING("lime_gl_compressed_tex_image_2d","\xbc","\x70","\xb8","\x76"),
	HX_HCSTRING("lime_gl_compressed_tex_sub_image_2d","\x9b","\x19","\x2d","\x07"),
	HX_HCSTRING("lime_gl_copy_tex_image_2d","\x08","\x15","\x17","\x3a"),
	HX_HCSTRING("lime_gl_copy_tex_sub_image_2d","\xe7","\xd3","\x21","\x4b"),
	HX_HCSTRING("lime_gl_create_buffer","\xf3","\xef","\xe7","\x8a"),
	HX_HCSTRING("lime_gl_create_framebuffer","\x1a","\x51","\xd8","\x73"),
	HX_HCSTRING("lime_gl_create_program","\x31","\xac","\x72","\x42"),
	HX_HCSTRING("lime_gl_create_render_buffer","\x76","\x7b","\xe1","\x18"),
	HX_HCSTRING("lime_gl_create_shader","\x18","\xf2","\x73","\xd7"),
	HX_HCSTRING("lime_gl_create_texture","\x88","\x2a","\x5a","\xed"),
	HX_HCSTRING("lime_gl_cull_face","\x5a","\x6e","\xd7","\xa6"),
	HX_HCSTRING("lime_gl_delete_buffer","\xa4","\xaa","\x2e","\x01"),
	HX_HCSTRING("lime_gl_delete_framebuffer","\xc9","\x34","\x1a","\xa6"),
	HX_HCSTRING("lime_gl_delete_program","\x60","\x4c","\x0f","\x4a"),
	HX_HCSTRING("lime_gl_delete_render_buffer","\xe5","\xe8","\x26","\xca"),
	HX_HCSTRING("lime_gl_delete_shader","\xc9","\xac","\xba","\x4d"),
	HX_HCSTRING("lime_gl_delete_texture","\xb7","\xca","\xf6","\xf4"),
	HX_HCSTRING("lime_gl_depth_func","\x70","\x78","\x16","\xad"),
	HX_HCSTRING("lime_gl_depth_mask","\x18","\xce","\xa7","\xb1"),
	HX_HCSTRING("lime_gl_depth_range","\x11","\x9f","\x29","\xa2"),
	HX_HCSTRING("lime_gl_detach_shader","\xa1","\x84","\x13","\xfd"),
	HX_HCSTRING("lime_gl_disable","\xb8","\x5e","\x23","\x70"),
	HX_HCSTRING("lime_gl_disable_vertex_attrib_array","\x58","\xba","\x8e","\x0a"),
	HX_HCSTRING("lime_gl_draw_arrays","\xa5","\x43","\x0c","\x17"),
	HX_HCSTRING("lime_gl_draw_elements","\xe2","\xd1","\x98","\xb9"),
	HX_HCSTRING("lime_gl_enable","\xb3","\x43","\x5f","\x56"),
	HX_HCSTRING("lime_gl_enable_vertex_attrib_array","\xd3","\x1e","\xa2","\xea"),
	HX_HCSTRING("lime_gl_finish","\x83","\xd5","\x56","\xe4"),
	HX_HCSTRING("lime_gl_flush","\x94","\x83","\x40","\xf5"),
	HX_HCSTRING("lime_gl_framebuffer_renderbuffer","\xd8","\x1b","\x4b","\x9a"),
	HX_HCSTRING("lime_gl_framebuffer_texture2D","\x2b","\xbd","\x7d","\x0a"),
	HX_HCSTRING("lime_gl_front_face","\x63","\xa0","\x73","\x7d"),
	HX_HCSTRING("lime_gl_generate_mipmap","\x62","\xa5","\x38","\xe6"),
	HX_HCSTRING("lime_gl_get_active_attrib","\x0a","\x40","\xb7","\xd1"),
	HX_HCSTRING("lime_gl_get_active_uniform","\x74","\x90","\xd7","\x2a"),
	HX_HCSTRING("lime_gl_get_attrib_location","\xf1","\x00","\xcb","\xa5"),
	HX_HCSTRING("lime_gl_get_buffer_paramerter","\xad","\x9b","\x49","\xb2"),
	HX_HCSTRING("lime_gl_get_context_attributes","\xe0","\xc6","\xc6","\x3e"),
	HX_HCSTRING("lime_gl_get_error","\xef","\xf0","\xe0","\xf5"),
	HX_HCSTRING("lime_gl_get_framebuffer_attachment_parameter","\x18","\x53","\xfb","\x61"),
	HX_HCSTRING("lime_gl_get_parameter","\x50","\x7a","\xfe","\x3a"),
	HX_HCSTRING("lime_gl_get_program_info_log","\x87","\x8b","\x1c","\x48"),
	HX_HCSTRING("lime_gl_get_program_parameter","\x95","\x8c","\xe9","\x12"),
	HX_HCSTRING("lime_gl_get_render_buffer_parameter","\x9a","\x8b","\x13","\xf8"),
	HX_HCSTRING("lime_gl_get_shader_info_log","\x74","\x08","\x6b","\x9a"),
	HX_HCSTRING("lime_gl_get_shader_parameter","\x08","\x5f","\x48","\xc5"),
	HX_HCSTRING("lime_gl_get_shader_precision_format","\xd9","\x5f","\xb1","\x89"),
	HX_HCSTRING("lime_gl_get_shader_source","\x1c","\x86","\xa3","\xe7"),
	HX_HCSTRING("lime_gl_get_supported_extensions","\x7e","\xb4","\x30","\x92"),
	HX_HCSTRING("lime_gl_get_tex_parameter","\x38","\x3a","\xff","\x30"),
	HX_HCSTRING("lime_gl_get_uniform","\x1b","\x3e","\x0c","\xb0"),
	HX_HCSTRING("lime_gl_get_uniform_location","\x19","\x0c","\x33","\x6c"),
	HX_HCSTRING("lime_gl_get_vertex_attrib","\x2c","\x36","\x2d","\x8c"),
	HX_HCSTRING("lime_gl_get_vertex_attrib_offset","\x86","\xd0","\xe7","\x4a"),
	HX_HCSTRING("lime_gl_hint","\xb7","\x26","\x75","\xcc"),
	HX_HCSTRING("lime_gl_is_buffer","\xc5","\xec","\xc6","\xb4"),
	HX_HCSTRING("lime_gl_is_enabled","\x1c","\xa1","\xe8","\x45"),
	HX_HCSTRING("lime_gl_is_framebuffer","\x08","\x9b","\x19","\xab"),
	HX_HCSTRING("lime_gl_is_program","\x1f","\xe7","\xb0","\xbb"),
	HX_HCSTRING("lime_gl_is_renderbuffer","\x5b","\x1e","\xda","\x91"),
	HX_HCSTRING("lime_gl_is_shader","\xea","\xee","\x52","\x01"),
	HX_HCSTRING("lime_gl_is_texture","\x76","\x65","\x98","\x66"),
	HX_HCSTRING("lime_gl_line_width","\x6b","\x71","\x5f","\x53"),
	HX_HCSTRING("lime_gl_link_program","\x2f","\xdf","\xcf","\x33"),
	HX_HCSTRING("lime_gl_pixel_storei","\x71","\xb2","\x56","\x3d"),
	HX_HCSTRING("lime_gl_polygon_offset","\x28","\x8f","\x6c","\xe3"),
	HX_HCSTRING("lime_gl_read_pixels","\x06","\x09","\x69","\xf5"),
	HX_HCSTRING("lime_gl_renderbuffer_storage","\xc2","\x94","\xf1","\x7b"),
	HX_HCSTRING("lime_gl_sample_coverage","\xad","\x98","\xc5","\x86"),
	HX_HCSTRING("lime_gl_scissor","\xec","\x1c","\xb2","\xc3"),
	HX_HCSTRING("lime_gl_shader_source","\xc5","\xd2","\xe2","\x7f"),
	HX_HCSTRING("lime_gl_stencil_func","\xd7","\xb0","\x4f","\x64"),
	HX_HCSTRING("lime_gl_stencil_func_separate","\x0b","\x13","\x77","\x19"),
	HX_HCSTRING("lime_gl_stencil_mask","\x7f","\x06","\xe1","\x68"),
	HX_HCSTRING("lime_gl_stencil_mask_separate","\x63","\xc8","\x71","\x65"),
	HX_HCSTRING("lime_gl_stencil_op","\xf4","\x8b","\x0c","\xa5"),
	HX_HCSTRING("lime_gl_stencil_op_separate","\x4e","\x6c","\x36","\x5e"),
	HX_HCSTRING("lime_gl_tex_image_2d","\x5e","\xab","\x7a","\x34"),
	HX_HCSTRING("lime_gl_tex_parameterf","\x65","\x7e","\x77","\x4d"),
	HX_HCSTRING("lime_gl_tex_parameteri","\x68","\x7e","\x77","\x4d"),
	HX_HCSTRING("lime_gl_tex_sub_image_2d","\x3d","\x4d","\x7e","\x52"),
	HX_HCSTRING("lime_gl_uniform1f","\x19","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform1fv","\x3d","\xec","\x80","\xc7"),
	HX_HCSTRING("lime_gl_uniform1i","\x1c","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform1iv","\xda","\xee","\x80","\xc7"),
	HX_HCSTRING("lime_gl_uniform2f","\xf8","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform2fv","\x7e","\xae","\x81","\xc7"),
	HX_HCSTRING("lime_gl_uniform2i","\xfb","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform2iv","\x1b","\xb1","\x81","\xc7"),
	HX_HCSTRING("lime_gl_uniform3f","\xd7","\xeb","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform3fv","\xbf","\x70","\x82","\xc7"),
	HX_HCSTRING("lime_gl_uniform3i","\xda","\xeb","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform3iv","\x5c","\x73","\x82","\xc7"),
	HX_HCSTRING("lime_gl_uniform4f","\xb6","\xec","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform4fv","\x00","\x33","\x83","\xc7"),
	HX_HCSTRING("lime_gl_uniform4i","\xb9","\xec","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform4iv","\x9d","\x35","\x83","\xc7"),
	HX_HCSTRING("lime_gl_uniform_matrix","\x5c","\x9a","\xcc","\xb2"),
	HX_HCSTRING("lime_gl_use_program","\x1c","\x8c","\xb8","\x22"),
	HX_HCSTRING("lime_gl_validate_program","\xcb","\xeb","\x10","\x5b"),
	HX_HCSTRING("lime_gl_version","\xe8","\xdb","\xbc","\x3b"),
	HX_HCSTRING("lime_gl_vertex_attrib1f","\x2a","\xcd","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib1fv","\x0c","\xb8","\xc0","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib2f","\x09","\xce","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib2fv","\x4d","\x7a","\xc1","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib3f","\xe8","\xce","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib3fv","\x8e","\x3c","\xc2","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib4f","\xc7","\xcf","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib4fv","\xcf","\xfe","\xc2","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib_pointer","\x13","\xfa","\x74","\x15"),
	HX_HCSTRING("lime_gl_viewport","\x96","\x8d","\x70","\xcf"),
	::String(null())
};

void GL_obj::__register()
{
	hx::Object *dummy = new GL_obj;
	GL_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.gl.GL","\x6a","\x6e","\xc8","\xd6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GL_obj::__GetStatic;
	__mClass->mSetStaticField = &GL_obj::__SetStatic;
	__mClass->mMarkFunc = GL_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GL_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GL_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GL_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GL_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void GL_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_18_boot)
HXDLIN(  18)		DEPTH_BUFFER_BIT = (int)256;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_19_boot)
HXDLIN(  19)		STENCIL_BUFFER_BIT = (int)1024;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_20_boot)
HXDLIN(  20)		COLOR_BUFFER_BIT = (int)16384;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_23_boot)
HXDLIN(  23)		POINTS = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_24_boot)
HXDLIN(  24)		LINES = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_25_boot)
HXDLIN(  25)		LINE_LOOP = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_26_boot)
HXDLIN(  26)		LINE_STRIP = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_27_boot)
HXDLIN(  27)		TRIANGLES = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_28_boot)
HXDLIN(  28)		TRIANGLE_STRIP = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_29_boot)
HXDLIN(  29)		TRIANGLE_FAN = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_41_boot)
HXDLIN(  41)		ZERO = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_42_boot)
HXDLIN(  42)		ONE = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_43_boot)
HXDLIN(  43)		SRC_COLOR = (int)768;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_44_boot)
HXDLIN(  44)		ONE_MINUS_SRC_COLOR = (int)769;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_45_boot)
HXDLIN(  45)		SRC_ALPHA = (int)770;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_46_boot)
HXDLIN(  46)		ONE_MINUS_SRC_ALPHA = (int)771;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_47_boot)
HXDLIN(  47)		DST_ALPHA = (int)772;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_48_boot)
HXDLIN(  48)		ONE_MINUS_DST_ALPHA = (int)773;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_53_boot)
HXDLIN(  53)		DST_COLOR = (int)774;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_54_boot)
HXDLIN(  54)		ONE_MINUS_DST_COLOR = (int)775;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_55_boot)
HXDLIN(  55)		SRC_ALPHA_SATURATE = (int)776;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_61_boot)
HXDLIN(  61)		FUNC_ADD = (int)32774;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_62_boot)
HXDLIN(  62)		BLEND_EQUATION = (int)32777;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_63_boot)
HXDLIN(  63)		BLEND_EQUATION_RGB = (int)32777;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_64_boot)
HXDLIN(  64)		BLEND_EQUATION_ALPHA = (int)34877;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_67_boot)
HXDLIN(  67)		FUNC_SUBTRACT = (int)32778;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_68_boot)
HXDLIN(  68)		FUNC_REVERSE_SUBTRACT = (int)32779;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_71_boot)
HXDLIN(  71)		BLEND_DST_RGB = (int)32968;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_72_boot)
HXDLIN(  72)		BLEND_SRC_RGB = (int)32969;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_73_boot)
HXDLIN(  73)		BLEND_DST_ALPHA = (int)32970;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_74_boot)
HXDLIN(  74)		BLEND_SRC_ALPHA = (int)32971;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_75_boot)
HXDLIN(  75)		CONSTANT_COLOR = (int)32769;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_76_boot)
HXDLIN(  76)		ONE_MINUS_CONSTANT_COLOR = (int)32770;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_77_boot)
HXDLIN(  77)		CONSTANT_ALPHA = (int)32771;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_78_boot)
HXDLIN(  78)		ONE_MINUS_CONSTANT_ALPHA = (int)32772;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_79_boot)
HXDLIN(  79)		BLEND_COLOR = (int)32773;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_82_boot)
HXDLIN(  82)		ARRAY_BUFFER = (int)34962;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_83_boot)
HXDLIN(  83)		ELEMENT_ARRAY_BUFFER = (int)34963;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_84_boot)
HXDLIN(  84)		ARRAY_BUFFER_BINDING = (int)34964;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_85_boot)
HXDLIN(  85)		ELEMENT_ARRAY_BUFFER_BINDING = (int)34965;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_87_boot)
HXDLIN(  87)		STREAM_DRAW = (int)35040;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_88_boot)
HXDLIN(  88)		STATIC_DRAW = (int)35044;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_89_boot)
HXDLIN(  89)		DYNAMIC_DRAW = (int)35048;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_91_boot)
HXDLIN(  91)		BUFFER_SIZE = (int)34660;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_92_boot)
HXDLIN(  92)		BUFFER_USAGE = (int)34661;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_94_boot)
HXDLIN(  94)		CURRENT_VERTEX_ATTRIB = (int)34342;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_97_boot)
HXDLIN(  97)		FRONT = (int)1028;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_98_boot)
HXDLIN(  98)		BACK = (int)1029;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_99_boot)
HXDLIN(  99)		FRONT_AND_BACK = (int)1032;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_112_boot)
HXDLIN( 112)		CULL_FACE = (int)2884;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_113_boot)
HXDLIN( 113)		BLEND = (int)3042;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_114_boot)
HXDLIN( 114)		DITHER = (int)3024;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_115_boot)
HXDLIN( 115)		STENCIL_TEST = (int)2960;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_116_boot)
HXDLIN( 116)		DEPTH_TEST = (int)2929;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_117_boot)
HXDLIN( 117)		SCISSOR_TEST = (int)3089;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_118_boot)
HXDLIN( 118)		POLYGON_OFFSET_FILL = (int)32823;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_119_boot)
HXDLIN( 119)		SAMPLE_ALPHA_TO_COVERAGE = (int)32926;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_120_boot)
HXDLIN( 120)		SAMPLE_COVERAGE = (int)32928;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_123_boot)
HXDLIN( 123)		NO_ERROR = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_124_boot)
HXDLIN( 124)		INVALID_ENUM = (int)1280;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_125_boot)
HXDLIN( 125)		INVALID_VALUE = (int)1281;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_126_boot)
HXDLIN( 126)		INVALID_OPERATION = (int)1282;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_127_boot)
HXDLIN( 127)		OUT_OF_MEMORY = (int)1285;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_130_boot)
HXDLIN( 130)		CW = (int)2304;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_131_boot)
HXDLIN( 131)		CCW = (int)2305;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_134_boot)
HXDLIN( 134)		LINE_WIDTH = (int)2849;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_135_boot)
HXDLIN( 135)		ALIASED_POINT_SIZE_RANGE = (int)33901;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_136_boot)
HXDLIN( 136)		ALIASED_LINE_WIDTH_RANGE = (int)33902;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_137_boot)
HXDLIN( 137)		CULL_FACE_MODE = (int)2885;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_138_boot)
HXDLIN( 138)		FRONT_FACE = (int)2886;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_139_boot)
HXDLIN( 139)		DEPTH_RANGE = (int)2928;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_140_boot)
HXDLIN( 140)		DEPTH_WRITEMASK = (int)2930;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_141_boot)
HXDLIN( 141)		DEPTH_CLEAR_VALUE = (int)2931;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_142_boot)
HXDLIN( 142)		DEPTH_FUNC = (int)2932;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_143_boot)
HXDLIN( 143)		STENCIL_CLEAR_VALUE = (int)2961;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_144_boot)
HXDLIN( 144)		STENCIL_FUNC = (int)2962;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_145_boot)
HXDLIN( 145)		STENCIL_FAIL = (int)2964;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_146_boot)
HXDLIN( 146)		STENCIL_PASS_DEPTH_FAIL = (int)2965;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_147_boot)
HXDLIN( 147)		STENCIL_PASS_DEPTH_PASS = (int)2966;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_148_boot)
HXDLIN( 148)		STENCIL_REF = (int)2967;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_149_boot)
HXDLIN( 149)		STENCIL_VALUE_MASK = (int)2963;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_150_boot)
HXDLIN( 150)		STENCIL_WRITEMASK = (int)2968;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_151_boot)
HXDLIN( 151)		STENCIL_BACK_FUNC = (int)34816;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_152_boot)
HXDLIN( 152)		STENCIL_BACK_FAIL = (int)34817;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_153_boot)
HXDLIN( 153)		STENCIL_BACK_PASS_DEPTH_FAIL = (int)34818;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_154_boot)
HXDLIN( 154)		STENCIL_BACK_PASS_DEPTH_PASS = (int)34819;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_155_boot)
HXDLIN( 155)		STENCIL_BACK_REF = (int)36003;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_156_boot)
HXDLIN( 156)		STENCIL_BACK_VALUE_MASK = (int)36004;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_157_boot)
HXDLIN( 157)		STENCIL_BACK_WRITEMASK = (int)36005;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_158_boot)
HXDLIN( 158)		VIEWPORT = (int)2978;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_159_boot)
HXDLIN( 159)		SCISSOR_BOX = (int)3088;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_161_boot)
HXDLIN( 161)		COLOR_CLEAR_VALUE = (int)3106;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_162_boot)
HXDLIN( 162)		COLOR_WRITEMASK = (int)3107;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_163_boot)
HXDLIN( 163)		UNPACK_ALIGNMENT = (int)3317;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_164_boot)
HXDLIN( 164)		PACK_ALIGNMENT = (int)3333;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_165_boot)
HXDLIN( 165)		MAX_TEXTURE_SIZE = (int)3379;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_166_boot)
HXDLIN( 166)		MAX_VIEWPORT_DIMS = (int)3386;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_167_boot)
HXDLIN( 167)		SUBPIXEL_BITS = (int)3408;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_168_boot)
HXDLIN( 168)		RED_BITS = (int)3410;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_169_boot)
HXDLIN( 169)		GREEN_BITS = (int)3411;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_170_boot)
HXDLIN( 170)		BLUE_BITS = (int)3412;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_171_boot)
HXDLIN( 171)		ALPHA_BITS = (int)3413;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_172_boot)
HXDLIN( 172)		DEPTH_BITS = (int)3414;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_173_boot)
HXDLIN( 173)		STENCIL_BITS = (int)3415;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_174_boot)
HXDLIN( 174)		POLYGON_OFFSET_UNITS = (int)10752;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_176_boot)
HXDLIN( 176)		POLYGON_OFFSET_FACTOR = (int)32824;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_177_boot)
HXDLIN( 177)		TEXTURE_BINDING_2D = (int)32873;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_178_boot)
HXDLIN( 178)		SAMPLE_BUFFERS = (int)32936;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_179_boot)
HXDLIN( 179)		SAMPLES = (int)32937;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_180_boot)
HXDLIN( 180)		SAMPLE_COVERAGE_VALUE = (int)32938;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_181_boot)
HXDLIN( 181)		SAMPLE_COVERAGE_INVERT = (int)32939;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_188_boot)
HXDLIN( 188)		COMPRESSED_TEXTURE_FORMATS = (int)34467;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_191_boot)
HXDLIN( 191)		DONT_CARE = (int)4352;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_192_boot)
HXDLIN( 192)		FASTEST = (int)4353;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_193_boot)
HXDLIN( 193)		NICEST = (int)4354;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_196_boot)
HXDLIN( 196)		GENERATE_MIPMAP_HINT = (int)33170;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_199_boot)
HXDLIN( 199)		BYTE = (int)5120;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_200_boot)
HXDLIN( 200)		UNSIGNED_BYTE = (int)5121;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_201_boot)
HXDLIN( 201)		SHORT = (int)5122;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_202_boot)
HXDLIN( 202)		UNSIGNED_SHORT = (int)5123;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_203_boot)
HXDLIN( 203)		INT = (int)5124;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_204_boot)
HXDLIN( 204)		UNSIGNED_INT = (int)5125;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_205_boot)
HXDLIN( 205)		FLOAT = (int)5126;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_208_boot)
HXDLIN( 208)		DEPTH_COMPONENT = (int)6402;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_209_boot)
HXDLIN( 209)		ALPHA = (int)6406;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_210_boot)
HXDLIN( 210)		RGB = (int)6407;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_211_boot)
HXDLIN( 211)		RGBA = (int)6408;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_212_boot)
HXDLIN( 212)		LUMINANCE = (int)6409;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_213_boot)
HXDLIN( 213)		LUMINANCE_ALPHA = (int)6410;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_217_boot)
HXDLIN( 217)		UNSIGNED_SHORT_4_4_4_4 = (int)32819;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_218_boot)
HXDLIN( 218)		UNSIGNED_SHORT_5_5_5_1 = (int)32820;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_219_boot)
HXDLIN( 219)		UNSIGNED_SHORT_5_6_5 = (int)33635;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_222_boot)
HXDLIN( 222)		FRAGMENT_SHADER = (int)35632;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_223_boot)
HXDLIN( 223)		VERTEX_SHADER = (int)35633;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_224_boot)
HXDLIN( 224)		MAX_VERTEX_ATTRIBS = (int)34921;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_225_boot)
HXDLIN( 225)		MAX_VERTEX_UNIFORM_VECTORS = (int)36347;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_226_boot)
HXDLIN( 226)		MAX_VARYING_VECTORS = (int)36348;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_227_boot)
HXDLIN( 227)		MAX_COMBINED_TEXTURE_IMAGE_UNITS = (int)35661;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_228_boot)
HXDLIN( 228)		MAX_VERTEX_TEXTURE_IMAGE_UNITS = (int)35660;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_229_boot)
HXDLIN( 229)		MAX_TEXTURE_IMAGE_UNITS = (int)34930;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_230_boot)
HXDLIN( 230)		MAX_FRAGMENT_UNIFORM_VECTORS = (int)36349;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_231_boot)
HXDLIN( 231)		SHADER_TYPE = (int)35663;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_232_boot)
HXDLIN( 232)		DELETE_STATUS = (int)35712;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_233_boot)
HXDLIN( 233)		LINK_STATUS = (int)35714;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_234_boot)
HXDLIN( 234)		VALIDATE_STATUS = (int)35715;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_235_boot)
HXDLIN( 235)		ATTACHED_SHADERS = (int)35717;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_236_boot)
HXDLIN( 236)		ACTIVE_UNIFORMS = (int)35718;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_237_boot)
HXDLIN( 237)		ACTIVE_ATTRIBUTES = (int)35721;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_238_boot)
HXDLIN( 238)		SHADING_LANGUAGE_VERSION = (int)35724;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_239_boot)
HXDLIN( 239)		CURRENT_PROGRAM = (int)35725;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_242_boot)
HXDLIN( 242)		NEVER = (int)512;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_243_boot)
HXDLIN( 243)		LESS = (int)513;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_244_boot)
HXDLIN( 244)		EQUAL = (int)514;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_245_boot)
HXDLIN( 245)		LEQUAL = (int)515;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_246_boot)
HXDLIN( 246)		GREATER = (int)516;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_247_boot)
HXDLIN( 247)		NOTEQUAL = (int)517;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_248_boot)
HXDLIN( 248)		GEQUAL = (int)518;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_249_boot)
HXDLIN( 249)		ALWAYS = (int)519;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_253_boot)
HXDLIN( 253)		KEEP = (int)7680;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_254_boot)
HXDLIN( 254)		REPLACE = (int)7681;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_255_boot)
HXDLIN( 255)		INCR = (int)7682;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_256_boot)
HXDLIN( 256)		DECR = (int)7683;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_257_boot)
HXDLIN( 257)		INVERT = (int)5386;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_258_boot)
HXDLIN( 258)		INCR_WRAP = (int)34055;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_259_boot)
HXDLIN( 259)		DECR_WRAP = (int)34056;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_262_boot)
HXDLIN( 262)		VENDOR = (int)7936;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_263_boot)
HXDLIN( 263)		RENDERER = (int)7937;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_264_boot)
HXDLIN( 264)		VERSION = (int)7938;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_267_boot)
HXDLIN( 267)		NEAREST = (int)9728;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_268_boot)
HXDLIN( 268)		LINEAR = (int)9729;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_273_boot)
HXDLIN( 273)		NEAREST_MIPMAP_NEAREST = (int)9984;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_274_boot)
HXDLIN( 274)		LINEAR_MIPMAP_NEAREST = (int)9985;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_275_boot)
HXDLIN( 275)		NEAREST_MIPMAP_LINEAR = (int)9986;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_276_boot)
HXDLIN( 276)		LINEAR_MIPMAP_LINEAR = (int)9987;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_279_boot)
HXDLIN( 279)		TEXTURE_MAG_FILTER = (int)10240;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_280_boot)
HXDLIN( 280)		TEXTURE_MIN_FILTER = (int)10241;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_281_boot)
HXDLIN( 281)		TEXTURE_WRAP_S = (int)10242;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_282_boot)
HXDLIN( 282)		TEXTURE_WRAP_T = (int)10243;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_285_boot)
HXDLIN( 285)		TEXTURE_2D = (int)3553;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_286_boot)
HXDLIN( 286)		TEXTURE = (int)5890;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_288_boot)
HXDLIN( 288)		TEXTURE_CUBE_MAP = (int)34067;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_289_boot)
HXDLIN( 289)		TEXTURE_BINDING_CUBE_MAP = (int)34068;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_290_boot)
HXDLIN( 290)		TEXTURE_CUBE_MAP_POSITIVE_X = (int)34069;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_291_boot)
HXDLIN( 291)		TEXTURE_CUBE_MAP_NEGATIVE_X = (int)34070;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_292_boot)
HXDLIN( 292)		TEXTURE_CUBE_MAP_POSITIVE_Y = (int)34071;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_293_boot)
HXDLIN( 293)		TEXTURE_CUBE_MAP_NEGATIVE_Y = (int)34072;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_294_boot)
HXDLIN( 294)		TEXTURE_CUBE_MAP_POSITIVE_Z = (int)34073;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_295_boot)
HXDLIN( 295)		TEXTURE_CUBE_MAP_NEGATIVE_Z = (int)34074;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_296_boot)
HXDLIN( 296)		MAX_CUBE_MAP_TEXTURE_SIZE = (int)34076;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_299_boot)
HXDLIN( 299)		TEXTURE0 = (int)33984;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_300_boot)
HXDLIN( 300)		TEXTURE1 = (int)33985;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_301_boot)
HXDLIN( 301)		TEXTURE2 = (int)33986;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_302_boot)
HXDLIN( 302)		TEXTURE3 = (int)33987;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_303_boot)
HXDLIN( 303)		TEXTURE4 = (int)33988;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_304_boot)
HXDLIN( 304)		TEXTURE5 = (int)33989;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_305_boot)
HXDLIN( 305)		TEXTURE6 = (int)33990;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_306_boot)
HXDLIN( 306)		TEXTURE7 = (int)33991;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_307_boot)
HXDLIN( 307)		TEXTURE8 = (int)33992;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_308_boot)
HXDLIN( 308)		TEXTURE9 = (int)33993;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_309_boot)
HXDLIN( 309)		TEXTURE10 = (int)33994;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_310_boot)
HXDLIN( 310)		TEXTURE11 = (int)33995;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_311_boot)
HXDLIN( 311)		TEXTURE12 = (int)33996;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_312_boot)
HXDLIN( 312)		TEXTURE13 = (int)33997;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_313_boot)
HXDLIN( 313)		TEXTURE14 = (int)33998;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_314_boot)
HXDLIN( 314)		TEXTURE15 = (int)33999;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_315_boot)
HXDLIN( 315)		TEXTURE16 = (int)34000;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_316_boot)
HXDLIN( 316)		TEXTURE17 = (int)34001;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_317_boot)
HXDLIN( 317)		TEXTURE18 = (int)34002;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_318_boot)
HXDLIN( 318)		TEXTURE19 = (int)34003;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_319_boot)
HXDLIN( 319)		TEXTURE20 = (int)34004;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_320_boot)
HXDLIN( 320)		TEXTURE21 = (int)34005;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_321_boot)
HXDLIN( 321)		TEXTURE22 = (int)34006;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_322_boot)
HXDLIN( 322)		TEXTURE23 = (int)34007;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_323_boot)
HXDLIN( 323)		TEXTURE24 = (int)34008;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_324_boot)
HXDLIN( 324)		TEXTURE25 = (int)34009;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_325_boot)
HXDLIN( 325)		TEXTURE26 = (int)34010;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_326_boot)
HXDLIN( 326)		TEXTURE27 = (int)34011;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_327_boot)
HXDLIN( 327)		TEXTURE28 = (int)34012;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_328_boot)
HXDLIN( 328)		TEXTURE29 = (int)34013;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_329_boot)
HXDLIN( 329)		TEXTURE30 = (int)34014;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_330_boot)
HXDLIN( 330)		TEXTURE31 = (int)34015;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_331_boot)
HXDLIN( 331)		ACTIVE_TEXTURE = (int)34016;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_334_boot)
HXDLIN( 334)		REPEAT = (int)10497;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_335_boot)
HXDLIN( 335)		CLAMP_TO_EDGE = (int)33071;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_336_boot)
HXDLIN( 336)		MIRRORED_REPEAT = (int)33648;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_339_boot)
HXDLIN( 339)		FLOAT_VEC2 = (int)35664;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_340_boot)
HXDLIN( 340)		FLOAT_VEC3 = (int)35665;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_341_boot)
HXDLIN( 341)		FLOAT_VEC4 = (int)35666;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_342_boot)
HXDLIN( 342)		INT_VEC2 = (int)35667;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_343_boot)
HXDLIN( 343)		INT_VEC3 = (int)35668;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_344_boot)
HXDLIN( 344)		INT_VEC4 = (int)35669;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_345_boot)
HXDLIN( 345)		BOOL = (int)35670;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_346_boot)
HXDLIN( 346)		BOOL_VEC2 = (int)35671;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_347_boot)
HXDLIN( 347)		BOOL_VEC3 = (int)35672;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_348_boot)
HXDLIN( 348)		BOOL_VEC4 = (int)35673;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_349_boot)
HXDLIN( 349)		FLOAT_MAT2 = (int)35674;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_350_boot)
HXDLIN( 350)		FLOAT_MAT3 = (int)35675;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_351_boot)
HXDLIN( 351)		FLOAT_MAT4 = (int)35676;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_352_boot)
HXDLIN( 352)		SAMPLER_2D = (int)35678;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_353_boot)
HXDLIN( 353)		SAMPLER_CUBE = (int)35680;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_356_boot)
HXDLIN( 356)		VERTEX_ATTRIB_ARRAY_ENABLED = (int)34338;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_357_boot)
HXDLIN( 357)		VERTEX_ATTRIB_ARRAY_SIZE = (int)34339;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_358_boot)
HXDLIN( 358)		VERTEX_ATTRIB_ARRAY_STRIDE = (int)34340;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_359_boot)
HXDLIN( 359)		VERTEX_ATTRIB_ARRAY_TYPE = (int)34341;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_360_boot)
HXDLIN( 360)		VERTEX_ATTRIB_ARRAY_NORMALIZED = (int)34922;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_361_boot)
HXDLIN( 361)		VERTEX_ATTRIB_ARRAY_POINTER = (int)34373;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_362_boot)
HXDLIN( 362)		VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = (int)34975;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_365_boot)
HXDLIN( 365)		VERTEX_PROGRAM_POINT_SIZE = (int)34370;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_366_boot)
HXDLIN( 366)		POINT_SPRITE = (int)34913;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_369_boot)
HXDLIN( 369)		COMPILE_STATUS = (int)35713;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_372_boot)
HXDLIN( 372)		LOW_FLOAT = (int)36336;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_373_boot)
HXDLIN( 373)		MEDIUM_FLOAT = (int)36337;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_374_boot)
HXDLIN( 374)		HIGH_FLOAT = (int)36338;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_375_boot)
HXDLIN( 375)		LOW_INT = (int)36339;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_376_boot)
HXDLIN( 376)		MEDIUM_INT = (int)36340;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_377_boot)
HXDLIN( 377)		HIGH_INT = (int)36341;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_380_boot)
HXDLIN( 380)		FRAMEBUFFER = (int)36160;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_381_boot)
HXDLIN( 381)		RENDERBUFFER = (int)36161;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_383_boot)
HXDLIN( 383)		RGBA4 = (int)32854;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_384_boot)
HXDLIN( 384)		RGB5_A1 = (int)32855;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_385_boot)
HXDLIN( 385)		RGB565 = (int)36194;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_386_boot)
HXDLIN( 386)		DEPTH_COMPONENT16 = (int)33189;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_387_boot)
HXDLIN( 387)		STENCIL_INDEX = (int)6401;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_388_boot)
HXDLIN( 388)		STENCIL_INDEX8 = (int)36168;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_389_boot)
HXDLIN( 389)		DEPTH_STENCIL = (int)34041;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_391_boot)
HXDLIN( 391)		RENDERBUFFER_WIDTH = (int)36162;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_392_boot)
HXDLIN( 392)		RENDERBUFFER_HEIGHT = (int)36163;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_393_boot)
HXDLIN( 393)		RENDERBUFFER_INTERNAL_FORMAT = (int)36164;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_394_boot)
HXDLIN( 394)		RENDERBUFFER_RED_SIZE = (int)36176;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_395_boot)
HXDLIN( 395)		RENDERBUFFER_GREEN_SIZE = (int)36177;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_396_boot)
HXDLIN( 396)		RENDERBUFFER_BLUE_SIZE = (int)36178;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_397_boot)
HXDLIN( 397)		RENDERBUFFER_ALPHA_SIZE = (int)36179;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_398_boot)
HXDLIN( 398)		RENDERBUFFER_DEPTH_SIZE = (int)36180;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_399_boot)
HXDLIN( 399)		RENDERBUFFER_STENCIL_SIZE = (int)36181;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_401_boot)
HXDLIN( 401)		FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = (int)36048;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_402_boot)
HXDLIN( 402)		FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = (int)36049;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_403_boot)
HXDLIN( 403)		FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = (int)36050;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_404_boot)
HXDLIN( 404)		FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = (int)36051;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_406_boot)
HXDLIN( 406)		COLOR_ATTACHMENT0 = (int)36064;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_407_boot)
HXDLIN( 407)		DEPTH_ATTACHMENT = (int)36096;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_408_boot)
HXDLIN( 408)		STENCIL_ATTACHMENT = (int)36128;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_409_boot)
HXDLIN( 409)		DEPTH_STENCIL_ATTACHMENT = (int)33306;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_411_boot)
HXDLIN( 411)		NONE = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_413_boot)
HXDLIN( 413)		FRAMEBUFFER_COMPLETE = (int)36053;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_414_boot)
HXDLIN( 414)		FRAMEBUFFER_INCOMPLETE_ATTACHMENT = (int)36054;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_415_boot)
HXDLIN( 415)		FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = (int)36055;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_416_boot)
HXDLIN( 416)		FRAMEBUFFER_INCOMPLETE_DIMENSIONS = (int)36057;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_417_boot)
HXDLIN( 417)		FRAMEBUFFER_UNSUPPORTED = (int)36061;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_419_boot)
HXDLIN( 419)		FRAMEBUFFER_BINDING = (int)36006;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_420_boot)
HXDLIN( 420)		RENDERBUFFER_BINDING = (int)36007;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_421_boot)
HXDLIN( 421)		MAX_RENDERBUFFER_SIZE = (int)34024;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_423_boot)
HXDLIN( 423)		INVALID_FRAMEBUFFER_OPERATION = (int)1286;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_426_boot)
HXDLIN( 426)		UNPACK_FLIP_Y_WEBGL = (int)37440;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_427_boot)
HXDLIN( 427)		UNPACK_PREMULTIPLY_ALPHA_WEBGL = (int)37441;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_428_boot)
HXDLIN( 428)		CONTEXT_LOST_WEBGL = (int)37442;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_429_boot)
HXDLIN( 429)		UNPACK_COLORSPACE_CONVERSION_WEBGL = (int)37443;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_430_boot)
HXDLIN( 430)		BROWSER_DEFAULT_WEBGL = (int)37444;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1187_boot)
HXDLIN(1187)		lime_gl_active_texture = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_active_texture",30,69,6b,e5),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1188_boot)
HXDLIN(1188)		lime_gl_attach_shader = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_attach_shader",51,54,56,f7),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1189_boot)
HXDLIN(1189)		lime_gl_bind_attrib_location = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_bind_attrib_location",d6,14,81,d0),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1190_boot)
HXDLIN(1190)		lime_gl_bind_bitmap_data_texture = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_bind_bitmap_data_texture",e2,51,55,07),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1191_boot)
HXDLIN(1191)		lime_gl_bind_buffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_bind_buffer",b4,16,ee,55),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1192_boot)
HXDLIN(1192)		lime_gl_bind_framebuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_bind_framebuffer",b9,0e,a9,ad),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1193_boot)
HXDLIN(1193)		lime_gl_bind_renderbuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_bind_renderbuffer",8a,e5,cf,cc),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1194_boot)
HXDLIN(1194)		lime_gl_bind_texture = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_bind_texture",a7,ec,b5,c7),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1195_boot)
HXDLIN(1195)		lime_gl_blend_color = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_blend_color",e7,8f,e3,ad),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1196_boot)
HXDLIN(1196)		lime_gl_blend_equation = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_blend_equation",88,87,fc,50),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1197_boot)
HXDLIN(1197)		lime_gl_blend_equation_separate = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_blend_equation_separate",3a,5e,fc,6a),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1198_boot)
HXDLIN(1198)		lime_gl_blend_func = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_blend_func",40,09,f8,ec),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1199_boot)
HXDLIN(1199)		lime_gl_blend_func_separate = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_blend_func_separate",82,e5,8e,b3),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1200_boot)
HXDLIN(1200)		lime_gl_buffer_data = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_buffer_data",3b,f1,54,e7),(int)5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1201_boot)
HXDLIN(1201)		lime_gl_buffer_sub_data = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_buffer_sub_data",1a,50,91,2e),(int)5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1202_boot)
HXDLIN(1202)		lime_gl_check_framebuffer_status = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_check_framebuffer_status",69,00,db,f2),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1203_boot)
HXDLIN(1203)		lime_gl_clear = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_clear",3f,bc,5d,24),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1204_boot)
HXDLIN(1204)		lime_gl_clear_color = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_clear_color",23,ae,5e,8d),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1205_boot)
HXDLIN(1205)		lime_gl_clear_depth = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_clear_depth",c3,2d,2c,1a),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1206_boot)
HXDLIN(1206)		lime_gl_clear_stencil = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_clear_stencil",bc,aa,9e,35),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1207_boot)
HXDLIN(1207)		lime_gl_color_mask = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_color_mask",96,b4,9d,7d),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1208_boot)
HXDLIN(1208)		lime_gl_compile_shader = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_compile_shader",bf,5e,5c,ae),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1209_boot)
HXDLIN(1209)		lime_gl_compressed_tex_image_2d = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_compressed_tex_image_2d",1e,bb,1f,89),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1210_boot)
HXDLIN(1210)		lime_gl_compressed_tex_sub_image_2d = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_compressed_tex_sub_image_2d",fd,3c,46,ed),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1211_boot)
HXDLIN(1211)		lime_gl_copy_tex_image_2d = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_copy_tex_image_2d",ea,89,fc,a2),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1212_boot)
HXDLIN(1212)		lime_gl_copy_tex_sub_image_2d = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_copy_tex_sub_image_2d",c9,61,60,26),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1213_boot)
HXDLIN(1213)		lime_gl_create_buffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_create_buffer",d5,cb,34,7c),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1214_boot)
HXDLIN(1214)		lime_gl_create_framebuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_create_framebuffer",f8,21,b9,d3),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1215_boot)
HXDLIN(1215)		lime_gl_create_program = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_create_program",0f,36,66,74),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1216_boot)
HXDLIN(1216)		lime_gl_create_render_buffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_create_render_buffer",d4,bf,3e,cf),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1217_boot)
HXDLIN(1217)		lime_gl_create_shader = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_create_shader",fa,cd,c0,c8),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1218_boot)
HXDLIN(1218)		lime_gl_create_texture = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_create_texture",66,b4,4d,1f),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1219_boot)
HXDLIN(1219)		lime_gl_cull_face = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_cull_face",3c,31,0c,91),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1220_boot)
HXDLIN(1220)		lime_gl_delete_buffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_delete_buffer",86,86,7b,f2),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1221_boot)
HXDLIN(1221)		lime_gl_delete_framebuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_delete_framebuffer",a7,05,fb,05),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1222_boot)
HXDLIN(1222)		lime_gl_delete_program = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_delete_program",3e,d6,02,7c),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1223_boot)
HXDLIN(1223)		lime_gl_delete_render_buffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_delete_render_buffer",43,2d,84,80),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1224_boot)
HXDLIN(1224)		lime_gl_delete_shader = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_delete_shader",ab,88,07,3f),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1225_boot)
HXDLIN(1225)		lime_gl_delete_texture = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_delete_texture",95,54,ea,26),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1226_boot)
HXDLIN(1226)		lime_gl_depth_func = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_depth_func",4e,3b,0c,b1),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1227_boot)
HXDLIN(1227)		lime_gl_depth_mask = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_depth_mask",f6,90,9d,b5),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1228_boot)
HXDLIN(1228)		lime_gl_depth_range = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_depth_range",73,5e,3e,15),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1229_boot)
HXDLIN(1229)		lime_gl_detach_shader = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_detach_shader",83,60,60,ee),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1230_boot)
HXDLIN(1230)		lime_gl_disable = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_disable",1a,45,88,4a),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1231_boot)
HXDLIN(1231)		lime_gl_disable_vertex_attrib_array = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_disable_vertex_attrib_array",ba,dd,a7,f0),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1232_boot)
HXDLIN(1232)		lime_gl_draw_arrays = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_draw_arrays",07,03,21,8a),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1233_boot)
HXDLIN(1233)		lime_gl_draw_elements = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_draw_elements",c4,ad,e5,aa),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1234_boot)
HXDLIN(1234)		lime_gl_enable = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_enable",91,bf,86,9e),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1235_boot)
HXDLIN(1235)		lime_gl_enable_vertex_attrib_array = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_enable_vertex_attrib_array",b1,fd,2b,3d),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1236_boot)
HXDLIN(1236)		lime_gl_finish = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_finish",61,51,7e,2c),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1237_boot)
HXDLIN(1237)		lime_gl_flush = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_flush",76,ad,9d,de),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1238_boot)
HXDLIN(1238)		lime_gl_framebuffer_renderbuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_framebuffer_renderbuffer",36,e7,44,a2),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1239_boot)
HXDLIN(1239)		lime_gl_framebuffer_texture2D = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_framebuffer_texture2D",0d,4b,bc,e5),(int)5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1240_boot)
HXDLIN(1240)		lime_gl_front_face = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_front_face",41,63,69,81),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1241_boot)
HXDLIN(1241)		lime_gl_generate_mipmap = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_generate_mipmap",c4,bd,5d,69),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1242_boot)
HXDLIN(1242)		lime_gl_get_active_attrib = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_active_attrib",ec,b4,9c,3a),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1243_boot)
HXDLIN(1243)		lime_gl_get_active_uniform = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_active_uniform",52,61,b8,8a),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1244_boot)
HXDLIN(1244)		lime_gl_get_attrib_location = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_attrib_location",53,f2,a0,2a),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1245_boot)
HXDLIN(1245)		lime_gl_get_buffer_paramerter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_buffer_paramerter",8f,29,88,8d),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1246_boot)
HXDLIN(1246)		lime_gl_get_context_attributes = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_context_attributes",be,5e,44,3a),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1247_boot)
HXDLIN(1247)		lime_gl_get_error = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_error",d1,b3,15,e0),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1248_boot)
HXDLIN(1248)		lime_gl_get_framebuffer_attachment_parameter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_framebuffer_attachment_parameter",76,b3,a7,3b),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1249_boot)
HXDLIN(1249)		lime_gl_get_parameter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_parameter",32,56,4b,2c),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1250_boot)
HXDLIN(1250)		lime_gl_get_program_info_log = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_program_info_log",e5,cf,79,fe),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1251_boot)
HXDLIN(1251)		lime_gl_get_program_parameter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_program_parameter",77,1a,28,ee),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1252_boot)
HXDLIN(1252)		lime_gl_get_render_buffer_parameter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_render_buffer_parameter",fc,ae,2c,de),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1253_boot)
HXDLIN(1253)		lime_gl_get_shader_info_log = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_shader_info_log",d6,f9,40,1f),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1254_boot)
HXDLIN(1254)		lime_gl_get_shader_parameter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_shader_parameter",66,a3,a5,7b),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1255_boot)
HXDLIN(1255)		lime_gl_get_shader_precision_format = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_shader_precision_format",3b,83,ca,6f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1256_boot)
HXDLIN(1256)		lime_gl_get_shader_source = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_shader_source",fe,fa,88,50),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1257_boot)
HXDLIN(1257)		lime_gl_get_supported_extensions = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_supported_extensions",dc,7f,2a,9a),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1258_boot)
HXDLIN(1258)		lime_gl_get_tex_parameter = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_tex_parameter",1a,af,e4,99),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1259_boot)
HXDLIN(1259)		lime_gl_get_uniform = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_uniform",7d,fd,20,23),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1260_boot)
HXDLIN(1260)		lime_gl_get_uniform_location = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_uniform_location",77,50,90,22),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1261_boot)
HXDLIN(1261)		lime_gl_get_vertex_attrib = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_vertex_attrib",0e,ab,12,f5),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1262_boot)
HXDLIN(1262)		lime_gl_get_vertex_attrib_offset = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_get_vertex_attrib_offset",e4,9b,e1,52),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1263_boot)
HXDLIN(1263)		lime_gl_hint = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_hint",15,4f,7b,68),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1264_boot)
HXDLIN(1264)		lime_gl_is_buffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_buffer",a7,af,fb,9e),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1265_boot)
HXDLIN(1265)		lime_gl_is_enabled = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_enabled",fa,63,de,49),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1266_boot)
HXDLIN(1266)		lime_gl_is_framebuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_framebuffer",e6,24,0d,dd),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1267_boot)
HXDLIN(1267)		lime_gl_is_program = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_program",fd,a9,a6,bf),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1268_boot)
HXDLIN(1268)		lime_gl_is_renderbuffer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_renderbuffer",bd,36,ff,14),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1269_boot)
HXDLIN(1269)		lime_gl_is_shader = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_shader",cc,b1,87,eb),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1270_boot)
HXDLIN(1270)		lime_gl_is_texture = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_is_texture",54,28,8e,6a),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1271_boot)
HXDLIN(1271)		lime_gl_line_width = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_line_width",49,34,55,57),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1272_boot)
HXDLIN(1272)		lime_gl_link_program = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_link_program",8d,95,e2,72),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1273_boot)
HXDLIN(1273)		lime_gl_pixel_storei = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_pixel_storei",cf,68,69,7c),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1274_boot)
HXDLIN(1274)		lime_gl_polygon_offset = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_polygon_offset",06,19,60,15),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1275_boot)
HXDLIN(1275)		lime_gl_read_pixels = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_read_pixels",68,c8,7d,68),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1276_boot)
HXDLIN(1276)		lime_gl_renderbuffer_storage = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_renderbuffer_storage",20,d9,4e,32),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1277_boot)
HXDLIN(1277)		lime_gl_sample_coverage = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_sample_coverage",0f,b1,ea,09),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1278_boot)
HXDLIN(1278)		lime_gl_scissor = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_scissor",4e,03,17,9e),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1279_boot)
HXDLIN(1279)		lime_gl_shader_source = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_shader_source",a7,ae,2f,71),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1280_boot)
HXDLIN(1280)		lime_gl_stencil_func = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_stencil_func",35,67,62,a3),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1281_boot)
HXDLIN(1281)		lime_gl_stencil_func_separate = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_stencil_func_separate",ed,a0,b5,f4),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1282_boot)
HXDLIN(1282)		lime_gl_stencil_mask = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_stencil_mask",dd,bc,f3,a7),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1283_boot)
HXDLIN(1283)		lime_gl_stencil_mask_separate = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_stencil_mask_separate",45,56,b0,40),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1284_boot)
HXDLIN(1284)		lime_gl_stencil_op = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_stencil_op",d2,4e,02,a9),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1285_boot)
HXDLIN(1285)		lime_gl_stencil_op_separate = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_stencil_op_separate",b0,5d,0c,e3),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1286_boot)
HXDLIN(1286)		lime_gl_tex_image_2d = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_tex_image_2d",bc,61,8d,73),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1287_boot)
HXDLIN(1287)		lime_gl_tex_parameterf = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_tex_parameterf",43,08,6b,7f),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1288_boot)
HXDLIN(1288)		lime_gl_tex_parameteri = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_tex_parameteri",46,08,6b,7f),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1289_boot)
HXDLIN(1289)		lime_gl_tex_sub_image_2d = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_tex_sub_image_2d",9b,8a,ce,8f),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1290_boot)
HXDLIN(1290)		lime_gl_uniform1f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform1f",fb,ac,20,31),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1291_boot)
HXDLIN(1291)		lime_gl_uniform1fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform1fv",1b,af,76,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1292_boot)
HXDLIN(1292)		lime_gl_uniform1i = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform1i",fe,ac,20,31),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1293_boot)
HXDLIN(1293)		lime_gl_uniform1iv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform1iv",b8,b1,76,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1294_boot)
HXDLIN(1294)		lime_gl_uniform2f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform2f",da,ad,20,31),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1295_boot)
HXDLIN(1295)		lime_gl_uniform2fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform2fv",5c,71,77,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1296_boot)
HXDLIN(1296)		lime_gl_uniform2i = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform2i",dd,ad,20,31),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1297_boot)
HXDLIN(1297)		lime_gl_uniform2iv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform2iv",f9,73,77,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1298_boot)
HXDLIN(1298)		lime_gl_uniform3f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform3f",b9,ae,20,31),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1299_boot)
HXDLIN(1299)		lime_gl_uniform3fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform3fv",9d,33,78,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1300_boot)
HXDLIN(1300)		lime_gl_uniform3i = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform3i",bc,ae,20,31),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1301_boot)
HXDLIN(1301)		lime_gl_uniform3iv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform3iv",3a,36,78,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1302_boot)
HXDLIN(1302)		lime_gl_uniform4f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform4f",98,af,20,31),(int)5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1303_boot)
HXDLIN(1303)		lime_gl_uniform4fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform4fv",de,f5,78,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1304_boot)
HXDLIN(1304)		lime_gl_uniform4i = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform4i",9b,af,20,31),(int)5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1305_boot)
HXDLIN(1305)		lime_gl_uniform4iv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform4iv",7b,f8,78,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1306_boot)
HXDLIN(1306)		lime_gl_uniform_matrix = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_uniform_matrix",3a,24,c0,e4),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1307_boot)
HXDLIN(1307)		lime_gl_use_program = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_use_program",7e,4b,cd,95),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1308_boot)
HXDLIN(1308)		lime_gl_validate_program = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_validate_program",29,29,61,98),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1309_boot)
HXDLIN(1309)		lime_gl_version = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_version",4a,c2,21,16),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1310_boot)
HXDLIN(1310)		lime_gl_vertex_attrib1f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib1f",8c,e5,d7,fd),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1311_boot)
HXDLIN(1311)		lime_gl_vertex_attrib1fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib1fv",6a,f5,10,1f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1312_boot)
HXDLIN(1312)		lime_gl_vertex_attrib2f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib2f",6b,e6,d7,fd),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1313_boot)
HXDLIN(1313)		lime_gl_vertex_attrib2fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib2fv",ab,b7,11,1f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1314_boot)
HXDLIN(1314)		lime_gl_vertex_attrib3f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib3f",4a,e7,d7,fd),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1315_boot)
HXDLIN(1315)		lime_gl_vertex_attrib3fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib3fv",ec,79,12,1f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1316_boot)
HXDLIN(1316)		lime_gl_vertex_attrib4f = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib4f",29,e8,d7,fd),(int)5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1317_boot)
HXDLIN(1317)		lime_gl_vertex_attrib4fv = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib4fv",2d,3c,13,1f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1318_boot)
HXDLIN(1318)		lime_gl_vertex_attrib_pointer = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_vertex_attrib_pointer",f5,87,b3,f0),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ae8cd4b2a031400b_1319_boot)
HXDLIN(1319)		lime_gl_viewport = ::openfl::_legacy::gl::GL_obj::load(HX_("lime_legacy_gl_viewport",f4,3c,55,0d),(int)4);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace gl
