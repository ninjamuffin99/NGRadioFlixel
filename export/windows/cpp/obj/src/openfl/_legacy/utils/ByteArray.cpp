// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_zip_Compress
#include <haxe/zip/Compress.h>
#endif
#ifndef INCLUDED_haxe_zip_Uncompress
#include <haxe/zip/Uncompress.h>
#endif
#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_ByteArray
#include <openfl/_legacy/utils/ByteArray.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_CompressionAlgorithm
#include <openfl/_legacy/utils/CompressionAlgorithm.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_IDataInput
#include <openfl/_legacy/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_IDataOutput
#include <openfl/_legacy/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_IMemoryRange
#include <openfl/_legacy/utils/IMemoryRange.h>
#endif
#ifndef INCLUDED_openfl_errors_EOFError
#include <openfl/errors/EOFError.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_IOError
#include <openfl/errors/IOError.h>
#endif
#ifndef INCLUDED_openfl_utils__Endian_Endian_Impl_
#include <openfl/utils/_Endian/Endian_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_43_new,"openfl._legacy.utils.ByteArray","new",0xe3818e62,"openfl._legacy.utils.ByteArray.new","openfl/_legacy/utils/ByteArray.hx",43,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_05fccf7aa19a0131_744___init__,"::openfl::_legacy::utils::ByteArray_obj","__init__",0xc123b6ee,"::openfl::_legacy::utils::ByteArray_obj.__init__","openfl/_legacy/utils/ByteArray.hx",744,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_05fccf7aa19a0131_745___init__,"::openfl::_legacy::utils::ByteArray_obj","__init__",0xc123b6ee,"::openfl::_legacy::utils::ByteArray_obj.__init__","openfl/_legacy/utils/ByteArray.hx",745,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_05fccf7aa19a0131_757___init__,"::openfl::_legacy::utils::ByteArray_obj","__init__",0xc123b6ee,"::openfl::_legacy::utils::ByteArray_obj.__init__","openfl/_legacy/utils/ByteArray.hx",757,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_05fccf7aa19a0131_758___init__,"::openfl::_legacy::utils::ByteArray_obj","__init__",0xc123b6ee,"::openfl::_legacy::utils::ByteArray_obj.__init__","openfl/_legacy/utils/ByteArray.hx",758,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_05fccf7aa19a0131_742___init__,"::openfl::_legacy::utils::ByteArray_obj","__init__",0xc123b6ee,"::openfl::_legacy::utils::ByteArray_obj.__init__","openfl/_legacy/utils/ByteArray.hx",742,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_81_asString,"openfl._legacy.utils.ByteArray","asString",0xb4fe6e21,"openfl._legacy.utils.ByteArray.asString","openfl/_legacy/utils/ByteArray.hx",81,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_88_checkData,"openfl._legacy.utils.ByteArray","checkData",0xda7e4a94,"openfl._legacy.utils.ByteArray.checkData","openfl/_legacy/utils/ByteArray.hx",88,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_97_clear,"openfl._legacy.utils.ByteArray","clear",0xa0f6340f,"openfl._legacy.utils.ByteArray.clear","openfl/_legacy/utils/ByteArray.hx",97,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_105_compress,"openfl._legacy.utils.ByteArray","compress",0x98b78260,"openfl._legacy.utils.ByteArray.compress","openfl/_legacy/utils/ByteArray.hx",105,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_155_deflate,"openfl._legacy.utils.ByteArray","deflate",0x69abf26d,"openfl._legacy.utils.ByteArray.deflate","openfl/_legacy/utils/ByteArray.hx",155,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_160_ensureElem,"openfl._legacy.utils.ByteArray","ensureElem",0x8db597ab,"openfl._legacy.utils.ByteArray.ensureElem","openfl/_legacy/utils/ByteArray.hx",160,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_200_getByteBuffer,"openfl._legacy.utils.ByteArray","getByteBuffer",0x97cfb6e0,"openfl._legacy.utils.ByteArray.getByteBuffer","openfl/_legacy/utils/ByteArray.hx",200,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_207_getLength,"openfl._legacy.utils.ByteArray","getLength",0x5f99499e,"openfl._legacy.utils.ByteArray.getLength","openfl/_legacy/utils/ByteArray.hx",207,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_214_getNativePointer,"openfl._legacy.utils.ByteArray","getNativePointer",0x8841622e,"openfl._legacy.utils.ByteArray.getNativePointer","openfl/_legacy/utils/ByteArray.hx",214,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_221_getStart,"openfl._legacy.utils.ByteArray","getStart",0xf8dabeaa,"openfl._legacy.utils.ByteArray.getStart","openfl/_legacy/utils/ByteArray.hx",221,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_228_inflate,"openfl._legacy.utils.ByteArray","inflate",0xd2cd8389,"openfl._legacy.utils.ByteArray.inflate","openfl/_legacy/utils/ByteArray.hx",228,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_235_readBoolean,"openfl._legacy.utils.ByteArray","readBoolean",0xfae90df4,"openfl._legacy.utils.ByteArray.readBoolean","openfl/_legacy/utils/ByteArray.hx",235,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_240_readByte,"openfl._legacy.utils.ByteArray","readByte",0x7e13343c,"openfl._legacy.utils.ByteArray.readByte","openfl/_legacy/utils/ByteArray.hx",240,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_248_readBytes,"openfl._legacy.utils.ByteArray","readBytes",0xd2ba80b7,"openfl._legacy.utils.ByteArray.readBytes","openfl/_legacy/utils/ByteArray.hx",248,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_286_readDouble,"openfl._legacy.utils.ByteArray","readDouble",0x9bd1f545,"openfl._legacy.utils.ByteArray.readDouble","openfl/_legacy/utils/ByteArray.hx",286,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_323_readFloat,"openfl._legacy.utils.ByteArray","readFloat",0x17b93de8,"openfl._legacy.utils.ByteArray.readFloat","openfl/_legacy/utils/ByteArray.hx",323,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_349_readInt,"openfl._legacy.utils.ByteArray","readInt",0xc97b9a3b,"openfl._legacy.utils.ByteArray.readInt","openfl/_legacy/utils/ByteArray.hx",349,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_363_readMultiByte,"openfl._legacy.utils.ByteArray","readMultiByte",0xa88d946d,"openfl._legacy.utils.ByteArray.readMultiByte","openfl/_legacy/utils/ByteArray.hx",363,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_368_writeMultiByte,"openfl._legacy.utils.ByteArray","writeMultiByte",0xc4f34280,"openfl._legacy.utils.ByteArray.writeMultiByte","openfl/_legacy/utils/ByteArray.hx",368,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_371_readShort,"openfl._legacy.utils.ByteArray","readShort",0x9149fcc8,"openfl._legacy.utils.ByteArray.readShort","openfl/_legacy/utils/ByteArray.hx",371,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_385_readUnsignedByte,"openfl._legacy.utils.ByteArray","readUnsignedByte",0xa9bc33d1,"openfl._legacy.utils.ByteArray.readUnsignedByte","openfl/_legacy/utils/ByteArray.hx",385,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_390_readUnsignedInt,"openfl._legacy.utils.ByteArray","readUnsignedInt",0xe0a36446,"openfl._legacy.utils.ByteArray.readUnsignedInt","openfl/_legacy/utils/ByteArray.hx",390,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_402_readUnsignedShort,"openfl._legacy.utils.ByteArray","readUnsignedShort",0x99809f93,"openfl._legacy.utils.ByteArray.readUnsignedShort","openfl/_legacy/utils/ByteArray.hx",402,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_412_readUTF,"openfl._legacy.utils.ByteArray","readUTF",0xc9849e73,"openfl._legacy.utils.ByteArray.readUTF","openfl/_legacy/utils/ByteArray.hx",412,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_420_readUTFBytes,"openfl._legacy.utils.ByteArray","readUTFBytes",0xe6ce98f8,"openfl._legacy.utils.ByteArray.readUTFBytes","openfl/_legacy/utils/ByteArray.hx",420,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_450_setLength,"openfl._legacy.utils.ByteArray","setLength",0x42ea35aa,"openfl._legacy.utils.ByteArray.setLength","openfl/_legacy/utils/ByteArray.hx",450,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_463_slice,"openfl._legacy.utils.ByteArray","slice",0xd76286d4,"openfl._legacy.utils.ByteArray.slice","openfl/_legacy/utils/ByteArray.hx",463,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_511_uncompress,"openfl._legacy.utils.ByteArray","uncompress",0x790e1539,"openfl._legacy.utils.ByteArray.uncompress","openfl/_legacy/utils/ByteArray.hx",511,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_558_write_uncheck,"openfl._legacy.utils.ByteArray","write_uncheck",0xf8b3e1b1,"openfl._legacy.utils.ByteArray.write_uncheck","openfl/_legacy/utils/ByteArray.hx",558,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_570_writeBoolean,"openfl._legacy.utils.ByteArray","writeBoolean",0xd7ed0147,"openfl._legacy.utils.ByteArray.writeBoolean","openfl/_legacy/utils/ByteArray.hx",570,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_573_writeObject,"openfl._legacy.utils.ByteArray","writeObject",0xd4376100,"openfl._legacy.utils.ByteArray.writeObject","openfl/_legacy/utils/ByteArray.hx",573,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_578_writeByte,"openfl._legacy.utils.ByteArray","writeByte",0x8e123f09,"openfl._legacy.utils.ByteArray.writeByte","openfl/_legacy/utils/ByteArray.hx",578,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_593_writeBytes,"openfl._legacy.utils.ByteArray","writeBytes",0xc1e4e94a,"openfl._legacy.utils.ByteArray.writeBytes","openfl/_legacy/utils/ByteArray.hx",593,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_604_writeDouble,"openfl._legacy.utils.ByteArray","writeDouble",0xf1c30d52,"openfl._legacy.utils.ByteArray.writeDouble","openfl/_legacy/utils/ByteArray.hx",604,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_621_writeFile,"openfl._legacy.utils.ByteArray","writeFile",0x90aaee7d,"openfl._legacy.utils.ByteArray.writeFile","openfl/_legacy/utils/ByteArray.hx",621,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_628_writeFloat,"openfl._legacy.utils.ByteArray","writeFloat",0x06e3a67b,"openfl._legacy.utils.ByteArray.writeFloat","openfl/_legacy/utils/ByteArray.hx",628,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_641_writeInt,"openfl._legacy.utils.ByteArray","writeInt",0x38e8a80e,"openfl._legacy.utils.ByteArray.writeInt","openfl/_legacy/utils/ByteArray.hx",641,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_664_writeShort,"openfl._legacy.utils.ByteArray","writeShort",0x8074655b,"openfl._legacy.utils.ByteArray.writeShort","openfl/_legacy/utils/ByteArray.hx",664,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_685_writeUnsignedInt,"openfl._legacy.utils.ByteArray","writeUnsignedInt",0x245efd19,"openfl._legacy.utils.ByteArray.writeUnsignedInt","openfl/_legacy/utils/ByteArray.hx",685,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_690_writeUTF,"openfl._legacy.utils.ByteArray","writeUTF",0x38f1ac46,"openfl._legacy.utils.ByteArray.writeUTF","openfl/_legacy/utils/ByteArray.hx",690,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_704_writeUTFBytes,"openfl._legacy.utils.ByteArray","writeUTFBytes",0x6d3f8e45,"openfl._legacy.utils.ByteArray.writeUTFBytes","openfl/_legacy/utils/ByteArray.hx",704,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_717___fromBytes,"openfl._legacy.utils.ByteArray","__fromBytes",0xca4bcb83,"openfl._legacy.utils.ByteArray.__fromBytes","openfl/_legacy/utils/ByteArray.hx",717,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_732___get,"openfl._legacy.utils.ByteArray","__get",0x4ac5a3f8,"openfl._legacy.utils.ByteArray.__get","openfl/_legacy/utils/ByteArray.hx",732,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_771___set,"openfl._legacy.utils.ByteArray","__set",0x4acebf04,"openfl._legacy.utils.ByteArray.__set","openfl/_legacy/utils/ByteArray.hx",771,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_781___resize,"openfl._legacy.utils.ByteArray","__resize",0xc5a2ffd2,"openfl._legacy.utils.ByteArray.__resize","openfl/_legacy/utils/ByteArray.hx",781,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_788___throwEOFi,"openfl._legacy.utils.ByteArray","__throwEOFi",0xc2bfa955,"openfl._legacy.utils.ByteArray.__throwEOFi","openfl/_legacy/utils/ByteArray.hx",788,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_801_get_bytesAvailable,"openfl._legacy.utils.ByteArray","get_bytesAvailable",0x3b8f80e5,"openfl._legacy.utils.ByteArray.get_bytesAvailable","openfl/_legacy/utils/ByteArray.hx",801,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_802_get_byteLength,"openfl._legacy.utils.ByteArray","get_byteLength",0xc5cf8395,"openfl._legacy.utils.ByteArray.get_byteLength","openfl/_legacy/utils/ByteArray.hx",802,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_803_get_endian,"openfl._legacy.utils.ByteArray","get_endian",0x5a9aeea2,"openfl._legacy.utils.ByteArray.get_endian","openfl/_legacy/utils/ByteArray.hx",803,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_804_set_endian,"openfl._legacy.utils.ByteArray","set_endian",0x5e188d16,"openfl._legacy.utils.ByteArray.set_endian","openfl/_legacy/utils/ByteArray.hx",804,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_805_get___length,"openfl._legacy.utils.ByteArray","get___length",0x911025cd,"openfl._legacy.utils.ByteArray.get___length","openfl/_legacy/utils/ByteArray.hx",805,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_806_set___length,"openfl._legacy.utils.ByteArray","set___length",0xa6094941,"openfl._legacy.utils.ByteArray.set___length","openfl/_legacy/utils/ByteArray.hx",806,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_189_fromBytes,"openfl._legacy.utils.ByteArray","fromBytes",0xb65c1e23,"openfl._legacy.utils.ByteArray.fromBytes","openfl/_legacy/utils/ByteArray.hx",189,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_316_readFile,"openfl._legacy.utils.ByteArray","readFile",0x80abe3b0,"openfl._legacy.utils.ByteArray.readFile","openfl/_legacy/utils/ByteArray.hx",316,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_816_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",816,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_817_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",817,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_818_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",818,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_819_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",819,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_821_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",821,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_822_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",822,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_824_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",824,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_825_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",825,0x6d362251)
HX_LOCAL_STACK_FRAME(_hx_pos_7bd5f26fadc7df76_826_boot,"openfl._legacy.utils.ByteArray","boot",0x25f407f0,"openfl._legacy.utils.ByteArray.boot","openfl/_legacy/utils/ByteArray.hx",826,0x6d362251)
namespace openfl{
namespace _legacy{
namespace utils{

void ByteArray_obj::__construct(hx::Null< int >  __o_size){
int size = __o_size.Default(0);
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_43_new)
HXLINE(  45)		this->bigEndian = true;
HXLINE(  46)		this->position = (int)0;
HXLINE(  48)		if ((size >= (int)0)) {
HXLINE(  62)			::Array< unsigned char > data = ::Array_obj< unsigned char >::__new();
HXLINE(  64)			if ((size > (int)0)) {
HXLINE(  66)				data[(size - (int)1)] = (int)0;
            			}
HXLINE(  70)			super::__construct(size,data);
            		}
            	}

Dynamic ByteArray_obj::__CreateEmpty() { return new ByteArray_obj; }

void *ByteArray_obj::_hx_vtable = 0;

Dynamic ByteArray_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ByteArray_obj > _hx_result = new ByteArray_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ByteArray_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x140d0a90) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x140d0a90;
	} else {
		return inClassId==(int)0x5b931193;
	}
}

static ::openfl::_legacy::utils::IDataOutput_obj _hx_openfl__legacy_utils_ByteArray__hx_openfl__legacy_utils_IDataOutput= {
	( ::String (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::get_endian,
	( ::String (hx::Object::*)(::String))&::openfl::_legacy::utils::ByteArray_obj::set_endian,
	( void (hx::Object::*)(bool))&::openfl::_legacy::utils::ByteArray_obj::writeBoolean,
	( void (hx::Object::*)(int))&::openfl::_legacy::utils::ByteArray_obj::writeByte,
	( void (hx::Object::*)( ::haxe::io::Bytes,hx::Null< int > ,hx::Null< int > ))&::openfl::_legacy::utils::ByteArray_obj::writeBytes,
	( void (hx::Object::*)(Float))&::openfl::_legacy::utils::ByteArray_obj::writeDouble,
	( void (hx::Object::*)(Float))&::openfl::_legacy::utils::ByteArray_obj::writeFloat,
	( void (hx::Object::*)(int))&::openfl::_legacy::utils::ByteArray_obj::writeInt,
	( void (hx::Object::*)(int))&::openfl::_legacy::utils::ByteArray_obj::writeShort,
	( void (hx::Object::*)(int))&::openfl::_legacy::utils::ByteArray_obj::writeUnsignedInt,
	( void (hx::Object::*)(::String))&::openfl::_legacy::utils::ByteArray_obj::writeUTF,
	( void (hx::Object::*)(::String))&::openfl::_legacy::utils::ByteArray_obj::writeUTFBytes,
};

static ::openfl::_legacy::utils::IDataInput_obj _hx_openfl__legacy_utils_ByteArray__hx_openfl__legacy_utils_IDataInput= {
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::get_bytesAvailable,
	( ::String (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::get_endian,
	( ::String (hx::Object::*)(::String))&::openfl::_legacy::utils::ByteArray_obj::set_endian,
	( bool (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readBoolean,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readByte,
	( void (hx::Object::*)( ::openfl::_legacy::utils::ByteArray,hx::Null< int > ,hx::Null< int > ))&::openfl::_legacy::utils::ByteArray_obj::readBytes,
	( Float (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readDouble,
	( Float (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readFloat,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readInt,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readShort,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readUnsignedByte,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readUnsignedInt,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readUnsignedShort,
	( ::String (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::readUTF,
	( ::String (hx::Object::*)(int))&::openfl::_legacy::utils::ByteArray_obj::readUTFBytes,
};

static ::openfl::_legacy::utils::IMemoryRange_obj _hx_openfl__legacy_utils_ByteArray__hx_openfl__legacy_utils_IMemoryRange= {
	(  ::openfl::_legacy::utils::ByteArray (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::getByteBuffer,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::getStart,
	( int (hx::Object::*)())&::openfl::_legacy::utils::ByteArray_obj::getLength,
};

void *ByteArray_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xe503d93b: return &_hx_openfl__legacy_utils_ByteArray__hx_openfl__legacy_utils_IDataOutput;
		case (int)0x0ada9f10: return &_hx_openfl__legacy_utils_ByteArray__hx_openfl__legacy_utils_IDataInput;
		case (int)0x0ecba48c: return &_hx_openfl__legacy_utils_ByteArray__hx_openfl__legacy_utils_IMemoryRange;
	}
	return super::_hx_getInterface(inHash);
}

void ByteArray_obj::__init__(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::openfl::_legacy::utils::ByteArray _hx_run(int length){
            			HX_GC_STACKFRAME(&_hx_pos_05fccf7aa19a0131_744___init__)
HXLINE( 744)			return  ::openfl::_legacy::utils::ByteArray_obj::__alloc( HX_CTX ,length);
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(2)
            		void _hx_run( ::openfl::_legacy::utils::ByteArray bytes,int length1){
            			HX_STACKFRAME(&_hx_pos_05fccf7aa19a0131_745___init__)
HXLINE( 747)			if ((length1 > (int)0)) {
HXLINE( 749)				bytes->ensureElem((length1 - (int)1),true);
            			}
HXLINE( 753)			bytes->length = length1;
            		}
            		HX_END_LOCAL_FUNC2((void))

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		::Array< unsigned char > _hx_run( ::openfl::_legacy::utils::ByteArray bytes2){
            			HX_STACKFRAME(&_hx_pos_05fccf7aa19a0131_757___init__)
HXLINE( 757)			if (hx::IsNull( bytes2 )) {
HXLINE( 757)				return null();
            			}
            			else {
HXLINE( 757)				return bytes2->b;
            			}
HXDLIN( 757)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            		int _hx_run( ::openfl::_legacy::utils::ByteArray bytes3){
            			HX_STACKFRAME(&_hx_pos_05fccf7aa19a0131_758___init__)
HXLINE( 758)			if (hx::IsNull( bytes3 )) {
HXLINE( 758)				return (int)0;
            			}
            			else {
HXLINE( 758)				return bytes3->length;
            			}
HXDLIN( 758)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_05fccf7aa19a0131_742___init__)
HXLINE( 744)		 ::Dynamic factory =  ::Dynamic(new _hx_Closure_0());
HXLINE( 745)		 ::Dynamic resize =  ::Dynamic(new _hx_Closure_1());
HXLINE( 757)		 ::Dynamic bytes1 =  ::Dynamic(new _hx_Closure_2());
HXLINE( 758)		 ::Dynamic slen =  ::Dynamic(new _hx_Closure_3());
HXLINE( 760)		 ::Dynamic init = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_byte_array_init",c1,c3,d7,b7),(int)4);
HXLINE( 761)		init(factory,slen,resize,bytes1);
            	}


::String ByteArray_obj::asString(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_81_asString)
HXDLIN(  81)		return this->readUTFBytes(this->length);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,asString,return )

void ByteArray_obj::checkData(int length){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_88_checkData)
HXDLIN(  88)		if (((length + this->position) > this->length)) {
HXLINE(  90)			this->_hx___throwEOFi();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,checkData,(void))

void ByteArray_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_97_clear)
HXLINE(  99)		this->position = (int)0;
HXLINE( 100)		this->length = (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,clear,(void))

void ByteArray_obj::compress( ::openfl::_legacy::utils::CompressionAlgorithm algorithm){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_105_compress)
HXLINE( 110)		 ::openfl::_legacy::utils::ByteArray src = hx::ObjectPtr<OBJ_>(this);
HXLINE( 113)		if (hx::IsNull( algorithm )) {
HXLINE( 115)			algorithm = ::openfl::_legacy::utils::CompressionAlgorithm_obj::ZLIB_dyn();
            		}
HXLINE( 119)		 ::haxe::io::Bytes result;
HXLINE( 121)		if (hx::IsEq( algorithm,::openfl::_legacy::utils::CompressionAlgorithm_obj::LZMA_dyn() )) {
HXLINE( 123)			result = ::haxe::io::Bytes_obj::ofData(( (::Array< unsigned char >)(::openfl::_legacy::utils::ByteArray_obj::lime_lzma_encode(src->b)) ));
            		}
            		else {
HXLINE( 127)			int windowBits;
HXDLIN( 127)			if (hx::IsNull( algorithm )) {
HXLINE( 127)				windowBits = (int)15;
            			}
            			else {
HXLINE( 127)				switch((int)(_hx_getEnumValueIndex(algorithm))){
            					case (int)0: {
HXLINE( 127)						windowBits = (int)-15;
            					}
            					break;
            					case (int)3: {
HXLINE( 127)						windowBits = (int)31;
            					}
            					break;
            					default:{
HXLINE( 127)						windowBits = (int)15;
            					}
            				}
            			}
HXLINE( 138)			result = ::haxe::zip::Compress_obj::run(src,(int)8);
            		}
HXLINE( 143)		this->b = result->b;
HXLINE( 144)		this->length = result->length;
HXLINE( 145)		this->position = this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,compress,(void))

void ByteArray_obj::deflate(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_155_deflate)
HXDLIN( 155)		this->compress(::openfl::_legacy::utils::CompressionAlgorithm_obj::DEFLATE_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,deflate,(void))

void ByteArray_obj::ensureElem(int size,bool updateLength){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_160_ensureElem)
HXLINE( 161)		int len = (size + (int)1);
HXLINE( 173)		if ((this->b->length < len)) {
HXLINE( 175)			this->b->__SetSize(len);
            		}
HXLINE( 180)		bool _hx_tmp;
HXDLIN( 180)		if (updateLength) {
HXLINE( 180)			_hx_tmp = (this->length < len);
            		}
            		else {
HXLINE( 180)			_hx_tmp = false;
            		}
HXDLIN( 180)		if (_hx_tmp) {
HXLINE( 182)			this->length = len;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,ensureElem,(void))

 ::openfl::_legacy::utils::ByteArray ByteArray_obj::getByteBuffer(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_200_getByteBuffer)
HXDLIN( 200)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getByteBuffer,return )

int ByteArray_obj::getLength(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_207_getLength)
HXDLIN( 207)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getLength,return )

 ::Dynamic ByteArray_obj::getNativePointer(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_214_getNativePointer)
HXDLIN( 214)		return ::openfl::_legacy::utils::ByteArray_obj::lime_byte_array_get_native_pointer(hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getNativePointer,return )

int ByteArray_obj::getStart(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_221_getStart)
HXDLIN( 221)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getStart,return )

void ByteArray_obj::inflate(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_228_inflate)
HXDLIN( 228)		this->uncompress(::openfl::_legacy::utils::CompressionAlgorithm_obj::DEFLATE_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,inflate,(void))

bool ByteArray_obj::readBoolean(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_235_readBoolean)
HXDLIN( 235)		if ((this->position < this->length)) {
HXDLIN( 235)			return (this->b->__get(this->position++) != (int)0);
            		}
            		else {
HXDLIN( 235)			return (this->_hx___throwEOFi() != (int)0);
            		}
HXDLIN( 235)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readBoolean,return )

int ByteArray_obj::readByte(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_240_readByte)
HXLINE( 242)		int value;
HXDLIN( 242)		if ((this->position < this->length)) {
HXLINE( 242)			value = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 242)			value = this->_hx___throwEOFi();
            		}
HXLINE( 243)		if ((((int)value & (int)(int)128) != (int)0)) {
HXLINE( 243)			return (value - (int)256);
            		}
            		else {
HXLINE( 243)			return value;
            		}
HXDLIN( 243)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readByte,return )

void ByteArray_obj::readBytes( ::openfl::_legacy::utils::ByteArray data,hx::Null< int >  __o_offset,hx::Null< int >  __o_length){
int offset = __o_offset.Default(0);
int length = __o_length.Default(0);
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_248_readBytes)
HXLINE( 250)		if ((length == (int)0)) {
HXLINE( 252)			length = (this->length - this->position);
            		}
HXLINE( 256)		if (((this->position + length) > this->length)) {
HXLINE( 258)			this->_hx___throwEOFi();
            		}
HXLINE( 262)		int data1 = data->length;
HXDLIN( 262)		if ((data1 < (offset + length))) {
HXLINE( 264)			data->ensureElem(((offset + length) - (int)1),true);
            		}
HXLINE( 271)		::Array< unsigned char > b1 = this->b;
HXLINE( 272)		::Array< unsigned char > b2 = data->b;
HXLINE( 273)		int p = this->position;
HXLINE( 274)		{
HXLINE( 274)			int _g1 = (int)0;
HXDLIN( 274)			int _g = length;
HXDLIN( 274)			while((_g1 < _g)){
HXLINE( 274)				_g1 = (_g1 + (int)1);
HXDLIN( 274)				int i = (_g1 - (int)1);
HXLINE( 276)				b2[(offset + i)] = b1->__get((p + i));
            			}
            		}
HXLINE( 281)		 ::openfl::_legacy::utils::ByteArray _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 281)		_hx_tmp->position = (_hx_tmp->position + length);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ByteArray_obj,readBytes,(void))

Float ByteArray_obj::readDouble(){
            	HX_GC_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_286_readDouble)
HXLINE( 288)		if (((this->position + (int)8) > this->length)) {
HXLINE( 290)			this->_hx___throwEOFi();
            		}
HXLINE( 297)		::Array< unsigned char > bytes = this->b;
HXDLIN( 297)		int bytes1 = this->position;
HXDLIN( 297)		 ::haxe::io::Bytes bytes2 =  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,(int)8,bytes->slice(bytes1,(this->position + (int)8)));
HXLINE( 306)		 ::openfl::_legacy::utils::ByteArray _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 306)		_hx_tmp->position = (_hx_tmp->position + (int)8);
HXLINE( 307)		return ( (Float)(::openfl::_legacy::utils::ByteArray_obj::_double_of_bytes(bytes2->b,this->bigEndian)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readDouble,return )

Float ByteArray_obj::readFloat(){
            	HX_GC_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_323_readFloat)
HXLINE( 325)		if (((this->position + (int)4) > this->length)) {
HXLINE( 327)			this->_hx___throwEOFi();
            		}
HXLINE( 334)		::Array< unsigned char > bytes = this->b;
HXDLIN( 334)		int bytes1 = this->position;
HXDLIN( 334)		 ::haxe::io::Bytes bytes2 =  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,(int)4,bytes->slice(bytes1,(this->position + (int)4)));
HXLINE( 343)		 ::openfl::_legacy::utils::ByteArray _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 343)		_hx_tmp->position = (_hx_tmp->position + (int)4);
HXLINE( 344)		return ( (Float)(::openfl::_legacy::utils::ByteArray_obj::_float_of_bytes(bytes2->b,this->bigEndian)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readFloat,return )

int ByteArray_obj::readInt(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_349_readInt)
HXLINE( 351)		int ch1;
HXDLIN( 351)		if ((this->position < this->length)) {
HXLINE( 351)			ch1 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 351)			ch1 = this->_hx___throwEOFi();
            		}
HXLINE( 352)		int ch2;
HXDLIN( 352)		if ((this->position < this->length)) {
HXLINE( 352)			ch2 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 352)			ch2 = this->_hx___throwEOFi();
            		}
HXLINE( 353)		int ch3;
HXDLIN( 353)		if ((this->position < this->length)) {
HXLINE( 353)			ch3 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 353)			ch3 = this->_hx___throwEOFi();
            		}
HXLINE( 354)		int ch4;
HXDLIN( 354)		if ((this->position < this->length)) {
HXLINE( 354)			ch4 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 354)			ch4 = this->_hx___throwEOFi();
            		}
HXLINE( 356)		if (this->bigEndian) {
HXLINE( 356)			return ((int)((int)((int)((int)ch1 << (int)(int)24) | (int)((int)ch2 << (int)(int)16)) | (int)((int)ch3 << (int)(int)8)) | (int)ch4);
            		}
            		else {
HXLINE( 356)			return ((int)((int)((int)((int)ch4 << (int)(int)24) | (int)((int)ch3 << (int)(int)16)) | (int)((int)ch2 << (int)(int)8)) | (int)ch1);
            		}
HXDLIN( 356)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readInt,return )

::String ByteArray_obj::readMultiByte(int length,::String charSet){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_363_readMultiByte)
HXDLIN( 363)		return this->readUTFBytes(length);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,readMultiByte,return )

void ByteArray_obj::writeMultiByte(::String value,::String charSet){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_368_writeMultiByte)
HXDLIN( 368)		this->writeUTFBytes(value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,writeMultiByte,(void))

int ByteArray_obj::readShort(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_371_readShort)
HXLINE( 373)		int ch1;
HXDLIN( 373)		if ((this->position < this->length)) {
HXLINE( 373)			ch1 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 373)			ch1 = this->_hx___throwEOFi();
            		}
HXLINE( 374)		int ch2;
HXDLIN( 374)		if ((this->position < this->length)) {
HXLINE( 374)			ch2 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 374)			ch2 = this->_hx___throwEOFi();
            		}
HXLINE( 376)		int value;
HXDLIN( 376)		if (this->bigEndian) {
HXLINE( 376)			value = ((int)((int)ch1 << (int)(int)8) | (int)ch2);
            		}
            		else {
HXLINE( 376)			value = ((int)((int)ch2 << (int)(int)8) | (int)ch1);
            		}
HXLINE( 378)		if ((((int)value & (int)(int)32768) != (int)0)) {
HXLINE( 378)			return (value - (int)65536);
            		}
            		else {
HXLINE( 378)			return value;
            		}
HXDLIN( 378)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readShort,return )

int ByteArray_obj::readUnsignedByte(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_385_readUnsignedByte)
HXDLIN( 385)		if ((this->position < this->length)) {
HXDLIN( 385)			return this->b->__get(this->position++);
            		}
            		else {
HXDLIN( 385)			return this->_hx___throwEOFi();
            		}
HXDLIN( 385)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUnsignedByte,return )

int ByteArray_obj::readUnsignedInt(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_390_readUnsignedInt)
HXLINE( 392)		int ch1;
HXDLIN( 392)		if ((this->position < this->length)) {
HXLINE( 392)			ch1 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 392)			ch1 = this->_hx___throwEOFi();
            		}
HXLINE( 393)		int ch2;
HXDLIN( 393)		if ((this->position < this->length)) {
HXLINE( 393)			ch2 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 393)			ch2 = this->_hx___throwEOFi();
            		}
HXLINE( 394)		int ch3;
HXDLIN( 394)		if ((this->position < this->length)) {
HXLINE( 394)			ch3 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 394)			ch3 = this->_hx___throwEOFi();
            		}
HXLINE( 395)		int ch4;
HXDLIN( 395)		if ((this->position < this->length)) {
HXLINE( 395)			ch4 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 395)			ch4 = this->_hx___throwEOFi();
            		}
HXLINE( 397)		if (this->bigEndian) {
HXLINE( 397)			return ((int)((int)((int)((int)ch1 << (int)(int)24) | (int)((int)ch2 << (int)(int)16)) | (int)((int)ch3 << (int)(int)8)) | (int)ch4);
            		}
            		else {
HXLINE( 397)			return ((int)((int)((int)((int)ch4 << (int)(int)24) | (int)((int)ch3 << (int)(int)16)) | (int)((int)ch2 << (int)(int)8)) | (int)ch1);
            		}
HXDLIN( 397)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUnsignedInt,return )

int ByteArray_obj::readUnsignedShort(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_402_readUnsignedShort)
HXLINE( 404)		int ch1;
HXDLIN( 404)		if ((this->position < this->length)) {
HXLINE( 404)			ch1 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 404)			ch1 = this->_hx___throwEOFi();
            		}
HXLINE( 405)		int ch2;
HXDLIN( 405)		if ((this->position < this->length)) {
HXLINE( 405)			ch2 = this->b->__get(this->position++);
            		}
            		else {
HXLINE( 405)			ch2 = this->_hx___throwEOFi();
            		}
HXLINE( 407)		if (this->bigEndian) {
HXLINE( 407)			return ((int)((int)ch1 << (int)(int)8) | (int)ch2);
            		}
            		else {
HXLINE( 407)			return (((int)ch2 << (int)(int)8) + ch1);
            		}
HXDLIN( 407)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUnsignedShort,return )

::String ByteArray_obj::readUTF(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_412_readUTF)
HXLINE( 414)		int len = this->readUnsignedShort();
HXLINE( 415)		return this->readUTFBytes(len);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUTF,return )

::String ByteArray_obj::readUTFBytes(int length){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_420_readUTFBytes)
HXLINE( 422)		if (((this->position + length) > this->length)) {
HXLINE( 424)			this->_hx___throwEOFi();
            		}
HXLINE( 428)		int p = this->position;
HXLINE( 429)		 ::openfl::_legacy::utils::ByteArray _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 429)		_hx_tmp->position = (_hx_tmp->position + length);
HXLINE( 438)		::String result = HX_("",00,00,00,00);
HXLINE( 439)		::__hxcpp_string_of_bytes(this->b,result,p,length);
HXLINE( 440)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,readUTFBytes,return )

void ByteArray_obj::setLength(int length){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_450_setLength)
HXLINE( 452)		if ((length > (int)0)) {
HXLINE( 454)			this->ensureElem((length - (int)1),false);
            		}
HXLINE( 458)		this->length = length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,setLength,(void))

 ::openfl::_legacy::utils::ByteArray ByteArray_obj::slice(int begin, ::Dynamic end){
            	HX_GC_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_463_slice)
HXLINE( 465)		if ((begin < (int)0)) {
HXLINE( 467)			begin = (begin + this->length);
HXLINE( 469)			if ((begin < (int)0)) {
HXLINE( 471)				begin = (int)0;
            			}
            		}
HXLINE( 477)		if (hx::IsNull( end )) {
HXLINE( 479)			end = this->length;
            		}
HXLINE( 483)		if (hx::IsLess( end,(int)0 )) {
HXLINE( 485)			end = (end + this->length);
HXLINE( 487)			if (hx::IsLess( end,(int)0 )) {
HXLINE( 489)				end = (int)0;
            			}
            		}
HXLINE( 495)		if (hx::IsGreaterEq( begin,end )) {
HXLINE( 497)			return  ::openfl::_legacy::utils::ByteArray_obj::__alloc( HX_CTX ,null());
            		}
HXLINE( 501)		 ::openfl::_legacy::utils::ByteArray result =  ::openfl::_legacy::utils::ByteArray_obj::__alloc( HX_CTX ,(end - begin));
HXLINE( 503)		int opos = this->position;
HXLINE( 504)		result->blit((int)0,hx::ObjectPtr<OBJ_>(this),begin,(end - begin));
HXLINE( 506)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,slice,return )

void ByteArray_obj::uncompress( ::openfl::_legacy::utils::CompressionAlgorithm algorithm){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_511_uncompress)
HXLINE( 513)		if (hx::IsNull( algorithm )) {
HXLINE( 513)			algorithm = ::openfl::_legacy::utils::CompressionAlgorithm_obj::ZLIB_dyn();
            		}
HXLINE( 518)		 ::openfl::_legacy::utils::ByteArray src = hx::ObjectPtr<OBJ_>(this);
HXLINE( 521)		 ::haxe::io::Bytes result;
HXLINE( 523)		if (hx::IsEq( algorithm,::openfl::_legacy::utils::CompressionAlgorithm_obj::LZMA_dyn() )) {
HXLINE( 525)			result = ::haxe::io::Bytes_obj::ofData(( (::Array< unsigned char >)(::openfl::_legacy::utils::ByteArray_obj::lime_lzma_decode(src->b)) ));
            		}
            		else {
HXLINE( 529)			int windowBits;
HXDLIN( 529)			if (hx::IsNull( algorithm )) {
HXLINE( 529)				windowBits = (int)15;
            			}
            			else {
HXLINE( 529)				switch((int)(_hx_getEnumValueIndex(algorithm))){
            					case (int)0: {
HXLINE( 529)						windowBits = (int)-15;
            					}
            					break;
            					case (int)3: {
HXLINE( 529)						windowBits = (int)31;
            					}
            					break;
            					default:{
HXLINE( 529)						windowBits = (int)15;
            					}
            				}
            			}
HXLINE( 540)			result = ::haxe::zip::Uncompress_obj::run(src,null());
            		}
HXLINE( 545)		this->b = result->b;
HXLINE( 546)		this->length = result->length;
HXLINE( 547)		this->position = (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,uncompress,(void))

void ByteArray_obj::write_uncheck(int byte){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_558_write_uncheck)
HXDLIN( 558)		 ::Dynamic _hx_tmp = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 558)		_hx_tmp(this->position++,byte);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,write_uncheck,(void))

void ByteArray_obj::writeBoolean(bool value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_570_writeBoolean)
HXDLIN( 570)		this->ensureElem(this->position,true);
HXDLIN( 570)		::Array< unsigned char > _hx_tmp = this->b;
HXDLIN( 570)		int _hx_tmp1;
HXDLIN( 570)		if (value) {
HXDLIN( 570)			_hx_tmp1 = (int)1;
            		}
            		else {
HXDLIN( 570)			_hx_tmp1 = (int)0;
            		}
HXDLIN( 570)		_hx_tmp[this->position++] = _hx_tmp1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeBoolean,(void))

void ByteArray_obj::writeObject( ::Dynamic object){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_573_writeObject)
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeObject,(void))

void ByteArray_obj::writeByte(int value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_578_writeByte)
HXLINE( 580)		this->ensureElem(this->position,true);
HXLINE( 585)		::Array< unsigned char > _hx_tmp = this->b;
HXDLIN( 585)		_hx_tmp[this->position++] = value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeByte,(void))

void ByteArray_obj::writeBytes( ::haxe::io::Bytes bytes,hx::Null< int >  __o_offset,hx::Null< int >  __o_length){
int offset = __o_offset.Default(0);
int length = __o_length.Default(0);
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_593_writeBytes)
HXLINE( 595)		if ((length == (int)0)) {
HXLINE( 595)			length = (bytes->length - offset);
            		}
HXLINE( 596)		this->ensureElem(((this->position + length) - (int)1),true);
HXLINE( 597)		int opos = this->position;
HXLINE( 598)		 ::openfl::_legacy::utils::ByteArray _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 598)		_hx_tmp->position = (_hx_tmp->position + length);
HXLINE( 599)		this->blit(opos,bytes,offset,length);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ByteArray_obj,writeBytes,(void))

void ByteArray_obj::writeDouble(Float x){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_604_writeDouble)
HXLINE( 609)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofData(( (::Array< unsigned char >)(::openfl::_legacy::utils::ByteArray_obj::_double_bytes(x,this->bigEndian)) ));
HXLINE( 612)		this->writeBytes(bytes,(int)0,(int)0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeDouble,(void))

void ByteArray_obj::writeFile(::String path){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_621_writeFile)
HXDLIN( 621)		::openfl::_legacy::utils::ByteArray_obj::lime_byte_array_overwrite_file(path,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeFile,(void))

void ByteArray_obj::writeFloat(Float x){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_628_writeFloat)
HXLINE( 631)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofData(( (::Array< unsigned char >)(::openfl::_legacy::utils::ByteArray_obj::_float_bytes(x,this->bigEndian)) ));
HXLINE( 636)		this->writeBytes(bytes,(int)0,(int)0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeFloat,(void))

void ByteArray_obj::writeInt(int value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_641_writeInt)
HXLINE( 643)		this->ensureElem((this->position + (int)3),true);
HXLINE( 645)		if (this->bigEndian) {
HXLINE( 647)			 ::Dynamic _hx_tmp = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 647)			int _hx_tmp1 = this->position++;
HXDLIN( 647)			_hx_tmp(_hx_tmp1,((int)value >> (int)(int)24));
HXLINE( 648)			 ::Dynamic _hx_tmp2 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 648)			int _hx_tmp3 = this->position++;
HXDLIN( 648)			_hx_tmp2(_hx_tmp3,((int)value >> (int)(int)16));
HXLINE( 649)			 ::Dynamic _hx_tmp4 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 649)			int _hx_tmp5 = this->position++;
HXDLIN( 649)			_hx_tmp4(_hx_tmp5,((int)value >> (int)(int)8));
HXLINE( 650)			 ::Dynamic _hx_tmp6 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 650)			_hx_tmp6(this->position++,value);
            		}
            		else {
HXLINE( 654)			 ::Dynamic _hx_tmp7 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 654)			_hx_tmp7(this->position++,value);
HXLINE( 655)			 ::Dynamic _hx_tmp8 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 655)			int _hx_tmp9 = this->position++;
HXDLIN( 655)			_hx_tmp8(_hx_tmp9,((int)value >> (int)(int)8));
HXLINE( 656)			 ::Dynamic _hx_tmp10 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 656)			int _hx_tmp11 = this->position++;
HXDLIN( 656)			_hx_tmp10(_hx_tmp11,((int)value >> (int)(int)16));
HXLINE( 657)			 ::Dynamic _hx_tmp12 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 657)			int _hx_tmp13 = this->position++;
HXDLIN( 657)			_hx_tmp12(_hx_tmp13,((int)value >> (int)(int)24));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeInt,(void))

void ByteArray_obj::writeShort(int value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_664_writeShort)
HXLINE( 666)		this->ensureElem((this->position + (int)1),true);
HXLINE( 668)		if (this->bigEndian) {
HXLINE( 670)			 ::Dynamic _hx_tmp = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 670)			int _hx_tmp1 = this->position++;
HXDLIN( 670)			_hx_tmp(_hx_tmp1,((int)value >> (int)(int)8));
HXLINE( 671)			 ::Dynamic _hx_tmp2 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 671)			_hx_tmp2(this->position++,value);
            		}
            		else {
HXLINE( 675)			 ::Dynamic _hx_tmp3 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 675)			_hx_tmp3(this->position++,value);
HXLINE( 676)			 ::Dynamic _hx_tmp4 = this->b->__Field(HX_("__unsafe_set",e9,ea,a4,60),hx::paccDynamic);
HXDLIN( 676)			int _hx_tmp5 = this->position++;
HXDLIN( 676)			_hx_tmp4(_hx_tmp5,((int)value >> (int)(int)8));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeShort,(void))

void ByteArray_obj::writeUnsignedInt(int value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_685_writeUnsignedInt)
HXDLIN( 685)		this->writeInt(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeUnsignedInt,(void))

void ByteArray_obj::writeUTF(::String s){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_690_writeUTF)
HXLINE( 695)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(s);
HXLINE( 698)		this->writeShort(bytes->length);
HXLINE( 699)		this->writeBytes(bytes,(int)0,(int)0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeUTF,(void))

void ByteArray_obj::writeUTFBytes(::String s){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_704_writeUTFBytes)
HXLINE( 709)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(s);
HXLINE( 712)		this->writeBytes(bytes,(int)0,(int)0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeUTFBytes,(void))

void ByteArray_obj::_hx___fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_717___fromBytes)
HXLINE( 719)		this->b = bytes->b;
HXLINE( 720)		this->length = bytes->length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,_hx___fromBytes,(void))

int ByteArray_obj::__get(int pos){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_732___get)
HXDLIN( 732)		return this->b->__get(pos);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,__get,return )

void ByteArray_obj::__set(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_771___set)
HXDLIN( 771)		this->b[pos] = v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,__set,(void))

void ByteArray_obj::_hx___resize(int length){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_781___resize)
HXDLIN( 781)		this->setLength(length);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,_hx___resize,(void))

int ByteArray_obj::_hx___throwEOFi(){
            	HX_GC_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_788___throwEOFi)
HXDLIN( 788)		HX_STACK_DO_THROW( ::openfl::errors::EOFError_obj::__alloc( HX_CTX ));
HXDLIN( 788)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,_hx___throwEOFi,return )

int ByteArray_obj::get_bytesAvailable(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_801_get_bytesAvailable)
HXDLIN( 801)		return (this->length - this->position);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get_bytesAvailable,return )

int ByteArray_obj::get_byteLength(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_802_get_byteLength)
HXDLIN( 802)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get_byteLength,return )

::String ByteArray_obj::get_endian(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_803_get_endian)
HXDLIN( 803)		if (this->bigEndian) {
HXDLIN( 803)			return ::openfl::utils::_Endian::Endian_Impl__obj::toString((int)0);
            		}
            		else {
HXDLIN( 803)			return ::openfl::utils::_Endian::Endian_Impl__obj::toString((int)1);
            		}
HXDLIN( 803)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get_endian,return )

::String ByteArray_obj::set_endian(::String value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_804_set_endian)
HXDLIN( 804)		this->bigEndian = hx::IsEq( ::openfl::utils::_Endian::Endian_Impl__obj::fromString(value),(int)0 );
HXDLIN( 804)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,set_endian,return )

int ByteArray_obj::get___length(){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_805_get___length)
HXDLIN( 805)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get___length,return )

int ByteArray_obj::set___length(int value){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_806_set___length)
HXDLIN( 806)		this->setLength(value);
HXDLIN( 806)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,set___length,return )

 ::openfl::_legacy::utils::ByteArray ByteArray_obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_GC_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_189_fromBytes)
HXLINE( 191)		 ::openfl::_legacy::utils::ByteArray result =  ::openfl::_legacy::utils::ByteArray_obj::__alloc( HX_CTX ,(int)-1);
HXLINE( 192)		{
HXLINE( 192)			result->b = bytes->b;
HXDLIN( 192)			result->length = bytes->length;
            		}
HXLINE( 193)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,fromBytes,return )

 ::openfl::_legacy::utils::ByteArray ByteArray_obj::readFile(::String path){
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_316_readFile)
HXDLIN( 316)		return ( ( ::openfl::_legacy::utils::ByteArray)(::openfl::_legacy::utils::ByteArray_obj::lime_byte_array_read_file(path)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,readFile,return )

 ::Dynamic ByteArray_obj::_double_bytes;

 ::Dynamic ByteArray_obj::_double_of_bytes;

 ::Dynamic ByteArray_obj::_float_bytes;

 ::Dynamic ByteArray_obj::_float_of_bytes;

 ::Dynamic ByteArray_obj::lime_byte_array_overwrite_file;

 ::Dynamic ByteArray_obj::lime_byte_array_read_file;

 ::Dynamic ByteArray_obj::lime_byte_array_get_native_pointer;

 ::Dynamic ByteArray_obj::lime_lzma_encode;

 ::Dynamic ByteArray_obj::lime_lzma_decode;


hx::ObjectPtr< ByteArray_obj > ByteArray_obj::__new(hx::Null< int >  __o_size) {
	hx::ObjectPtr< ByteArray_obj > __this = new ByteArray_obj();
	__this->__construct(__o_size);
	return __this;
}

hx::ObjectPtr< ByteArray_obj > ByteArray_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< int >  __o_size) {
	ByteArray_obj *__this = (ByteArray_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ByteArray_obj), true, "openfl._legacy.utils.ByteArray"));
	*(void **)__this = ByteArray_obj::_hx_vtable;
	__this->__construct(__o_size);
	return __this;
}

ByteArray_obj::ByteArray_obj()
{
}

hx::Val ByteArray_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"slice") ) { return hx::Val( slice_dyn() ); }
		if (HX_FIELD_EQ(inName,"__get") ) { return hx::Val( __get_dyn() ); }
		if (HX_FIELD_EQ(inName,"__set") ) { return hx::Val( __set_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"endian") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_endian() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"deflate") ) { return hx::Val( deflate_dyn() ); }
		if (HX_FIELD_EQ(inName,"inflate") ) { return hx::Val( inflate_dyn() ); }
		if (HX_FIELD_EQ(inName,"readInt") ) { return hx::Val( readInt_dyn() ); }
		if (HX_FIELD_EQ(inName,"readUTF") ) { return hx::Val( readUTF_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { return hx::Val( position ); }
		if (HX_FIELD_EQ(inName,"__length") ) { if (inCallProp == hx::paccAlways) return hx::Val( get___length() ); }
		if (HX_FIELD_EQ(inName,"asString") ) { return hx::Val( asString_dyn() ); }
		if (HX_FIELD_EQ(inName,"compress") ) { return hx::Val( compress_dyn() ); }
		if (HX_FIELD_EQ(inName,"getStart") ) { return hx::Val( getStart_dyn() ); }
		if (HX_FIELD_EQ(inName,"readByte") ) { return hx::Val( readByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeInt") ) { return hx::Val( writeInt_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeUTF") ) { return hx::Val( writeUTF_dyn() ); }
		if (HX_FIELD_EQ(inName,"__resize") ) { return hx::Val( _hx___resize_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bigEndian") ) { return hx::Val( bigEndian ); }
		if (HX_FIELD_EQ(inName,"checkData") ) { return hx::Val( checkData_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLength") ) { return hx::Val( getLength_dyn() ); }
		if (HX_FIELD_EQ(inName,"readBytes") ) { return hx::Val( readBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"readFloat") ) { return hx::Val( readFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"readShort") ) { return hx::Val( readShort_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLength") ) { return hx::Val( setLength_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeByte") ) { return hx::Val( writeByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeFile") ) { return hx::Val( writeFile_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"byteLength") ) { return hx::Val( inCallProp == hx::paccAlways ? get_byteLength() : byteLength ); }
		if (HX_FIELD_EQ(inName,"ensureElem") ) { return hx::Val( ensureElem_dyn() ); }
		if (HX_FIELD_EQ(inName,"readDouble") ) { return hx::Val( readDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"uncompress") ) { return hx::Val( uncompress_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeBytes") ) { return hx::Val( writeBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeFloat") ) { return hx::Val( writeFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeShort") ) { return hx::Val( writeShort_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_endian") ) { return hx::Val( get_endian_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_endian") ) { return hx::Val( set_endian_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"readBoolean") ) { return hx::Val( readBoolean_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeObject") ) { return hx::Val( writeObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeDouble") ) { return hx::Val( writeDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"__fromBytes") ) { return hx::Val( _hx___fromBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"__throwEOFi") ) { return hx::Val( _hx___throwEOFi_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"readUTFBytes") ) { return hx::Val( readUTFBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeBoolean") ) { return hx::Val( writeBoolean_dyn() ); }
		if (HX_FIELD_EQ(inName,"get___length") ) { return hx::Val( get___length_dyn() ); }
		if (HX_FIELD_EQ(inName,"set___length") ) { return hx::Val( set___length_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getByteBuffer") ) { return hx::Val( getByteBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"readMultiByte") ) { return hx::Val( readMultiByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"write_uncheck") ) { return hx::Val( write_uncheck_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeUTFBytes") ) { return hx::Val( writeUTFBytes_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"bytesAvailable") ) { return hx::Val( inCallProp == hx::paccAlways ? get_bytesAvailable() : bytesAvailable ); }
		if (HX_FIELD_EQ(inName,"writeMultiByte") ) { return hx::Val( writeMultiByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_byteLength") ) { return hx::Val( get_byteLength_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"readUnsignedInt") ) { return hx::Val( readUnsignedInt_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getNativePointer") ) { return hx::Val( getNativePointer_dyn() ); }
		if (HX_FIELD_EQ(inName,"readUnsignedByte") ) { return hx::Val( readUnsignedByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeUnsignedInt") ) { return hx::Val( writeUnsignedInt_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"readUnsignedShort") ) { return hx::Val( readUnsignedShort_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_bytesAvailable") ) { return hx::Val( get_bytesAvailable_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ByteArray_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"readFile") ) { outValue = readFile_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_float_bytes") ) { outValue = ( _float_bytes ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_double_bytes") ) { outValue = ( _double_bytes ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_float_of_bytes") ) { outValue = ( _float_of_bytes ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_double_of_bytes") ) { outValue = ( _double_of_bytes ); return true; }
		if (HX_FIELD_EQ(inName,"lime_lzma_encode") ) { outValue = ( lime_lzma_encode ); return true; }
		if (HX_FIELD_EQ(inName,"lime_lzma_decode") ) { outValue = ( lime_lzma_decode ); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_byte_array_read_file") ) { outValue = ( lime_byte_array_read_file ); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_byte_array_overwrite_file") ) { outValue = ( lime_byte_array_overwrite_file ); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_byte_array_get_native_pointer") ) { outValue = ( lime_byte_array_get_native_pointer ); return true; }
	}
	return false;
}

hx::Val ByteArray_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"endian") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_endian(inValue.Cast< ::String >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { position=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__length") ) { if (inCallProp == hx::paccAlways) return hx::Val( set___length(inValue.Cast< int >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bigEndian") ) { bigEndian=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"byteLength") ) { byteLength=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"bytesAvailable") ) { bytesAvailable=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ByteArray_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"_float_bytes") ) { _float_bytes=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_double_bytes") ) { _double_bytes=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_float_of_bytes") ) { _float_of_bytes=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_double_of_bytes") ) { _double_of_bytes=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_lzma_encode") ) { lime_lzma_encode=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_lzma_decode") ) { lime_lzma_decode=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_byte_array_read_file") ) { lime_byte_array_read_file=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_byte_array_overwrite_file") ) { lime_byte_array_overwrite_file=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_byte_array_get_native_pointer") ) { lime_byte_array_get_native_pointer=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void ByteArray_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("bigEndian","\x7b","\xd5","\x5a","\x20"));
	outFields->push(HX_HCSTRING("bytesAvailable","\xde","\x4b","\x9d","\x9b"));
	outFields->push(HX_HCSTRING("endian","\x9b","\x98","\x88","\xfa"));
	outFields->push(HX_HCSTRING("position","\xa9","\xa0","\xfa","\xca"));
	outFields->push(HX_HCSTRING("byteLength","\x0e","\x1e","\x0c","\x77"));
	outFields->push(HX_HCSTRING("__length","\x06","\x00","\x37","\x47"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ByteArray_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(ByteArray_obj,bigEndian),HX_HCSTRING("bigEndian","\x7b","\xd5","\x5a","\x20")},
	{hx::fsInt,(int)offsetof(ByteArray_obj,bytesAvailable),HX_HCSTRING("bytesAvailable","\xde","\x4b","\x9d","\x9b")},
	{hx::fsInt,(int)offsetof(ByteArray_obj,position),HX_HCSTRING("position","\xa9","\xa0","\xfa","\xca")},
	{hx::fsInt,(int)offsetof(ByteArray_obj,byteLength),HX_HCSTRING("byteLength","\x0e","\x1e","\x0c","\x77")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo ByteArray_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::_double_bytes,HX_HCSTRING("_double_bytes","\x5c","\x30","\xd8","\x56")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::_double_of_bytes,HX_HCSTRING("_double_of_bytes","\xb2","\xc0","\x4a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::_float_bytes,HX_HCSTRING("_float_bytes","\x49","\xe0","\x15","\x92")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::_float_of_bytes,HX_HCSTRING("_float_of_bytes","\xe5","\x02","\x2c","\x1f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::lime_byte_array_overwrite_file,HX_HCSTRING("lime_byte_array_overwrite_file","\x83","\x8f","\x35","\xd0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::lime_byte_array_read_file,HX_HCSTRING("lime_byte_array_read_file","\x12","\xa8","\x42","\x82")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::lime_byte_array_get_native_pointer,HX_HCSTRING("lime_byte_array_get_native_pointer","\x31","\xd1","\xd0","\x83")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::lime_lzma_encode,HX_HCSTRING("lime_lzma_encode","\x29","\xe7","\xe1","\xd8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ByteArray_obj::lime_lzma_decode,HX_HCSTRING("lime_lzma_decode","\x41","\x52","\xeb","\x43")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String ByteArray_obj_sMemberFields[] = {
	HX_HCSTRING("bigEndian","\x7b","\xd5","\x5a","\x20"),
	HX_HCSTRING("bytesAvailable","\xde","\x4b","\x9d","\x9b"),
	HX_HCSTRING("position","\xa9","\xa0","\xfa","\xca"),
	HX_HCSTRING("byteLength","\x0e","\x1e","\x0c","\x77"),
	HX_HCSTRING("asString","\x63","\x33","\x06","\xa0"),
	HX_HCSTRING("checkData","\x12","\x1f","\x43","\x96"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("compress","\xa2","\x47","\xbf","\x83"),
	HX_HCSTRING("deflate","\x6b","\x0b","\xfa","\xa2"),
	HX_HCSTRING("ensureElem","\x6d","\xb1","\x2a","\x1e"),
	HX_HCSTRING("getByteBuffer","\x5e","\xa2","\x0b","\x05"),
	HX_HCSTRING("getLength","\x1c","\x1e","\x5e","\x1b"),
	HX_HCSTRING("getNativePointer","\x70","\x39","\x53","\x7a"),
	HX_HCSTRING("getStart","\xec","\x83","\xe2","\xe3"),
	HX_HCSTRING("inflate","\x87","\x9c","\x1b","\x0c"),
	HX_HCSTRING("readBoolean","\xf2","\x7d","\xea","\xd0"),
	HX_HCSTRING("readByte","\x7e","\xf9","\x1a","\x69"),
	HX_HCSTRING("readBytes","\x35","\x55","\x7f","\x8e"),
	HX_HCSTRING("readDouble","\x07","\x0f","\x47","\x2c"),
	HX_HCSTRING("readFloat","\x66","\x12","\x7e","\xd3"),
	HX_HCSTRING("readInt","\x39","\xb3","\xc9","\x02"),
	HX_HCSTRING("readMultiByte","\xeb","\x7f","\xc9","\x15"),
	HX_HCSTRING("writeMultiByte","\x42","\x65","\x25","\xec"),
	HX_HCSTRING("readShort","\x46","\xd1","\x0e","\x4d"),
	HX_HCSTRING("readUnsignedByte","\x13","\x0b","\xce","\x9b"),
	HX_HCSTRING("readUnsignedInt","\x44","\xab","\x4f","\x05"),
	HX_HCSTRING("readUnsignedShort","\x11","\x22","\x0b","\x77"),
	HX_HCSTRING("readUTF","\x71","\xb7","\xd2","\x02"),
	HX_HCSTRING("readUTFBytes","\x3a","\x27","\x0f","\x52"),
	HX_HCSTRING("setLength","\x28","\x0a","\xaf","\xfe"),
	HX_HCSTRING("slice","\x52","\xc4","\xc7","\x7e"),
	HX_HCSTRING("uncompress","\xfb","\x2e","\x83","\x09"),
	HX_HCSTRING("write_uncheck","\x2f","\xcd","\xef","\x65"),
	HX_HCSTRING("writeBoolean","\x89","\x8f","\x2d","\x43"),
	HX_HCSTRING("writeObject","\xfe","\xd0","\x38","\xaa"),
	HX_HCSTRING("writeByte","\x87","\x13","\xd7","\x49"),
	HX_HCSTRING("writeBytes","\x0c","\x03","\x5a","\x52"),
	HX_HCSTRING("writeDouble","\x50","\x7d","\xc4","\xc7"),
	HX_HCSTRING("writeFile","\xfb","\xc2","\x6f","\x4c"),
	HX_HCSTRING("writeFloat","\x3d","\xc0","\x58","\x97"),
	HX_HCSTRING("writeInt","\x50","\x6d","\xf0","\x23"),
	HX_HCSTRING("writeShort","\x1d","\x7f","\xe9","\x10"),
	HX_HCSTRING("writeUnsignedInt","\x5b","\xd4","\x70","\x16"),
	HX_HCSTRING("writeUTF","\x88","\x71","\xf9","\x23"),
	HX_HCSTRING("writeUTFBytes","\xc3","\x79","\x7b","\xda"),
	HX_HCSTRING("__fromBytes","\x81","\x3b","\x4d","\xa0"),
	HX_HCSTRING("__get","\x76","\xe1","\x2a","\xf2"),
	HX_HCSTRING("__set","\x82","\xfc","\x33","\xf2"),
	HX_HCSTRING("__resize","\x14","\xc5","\xaa","\xb0"),
	HX_HCSTRING("__throwEOFi","\x53","\x19","\xc1","\x98"),
	HX_HCSTRING("get_bytesAvailable","\xa7","\x2c","\x37","\x37"),
	HX_HCSTRING("get_byteLength","\x57","\xa6","\x01","\xed"),
	HX_HCSTRING("get_endian","\x64","\x08","\x10","\xeb"),
	HX_HCSTRING("set_endian","\xd8","\xa6","\x8d","\xee"),
	HX_HCSTRING("get___length","\x0f","\xb4","\x50","\xfc"),
	HX_HCSTRING("set___length","\x83","\xd7","\x49","\x11"),
	::String(null()) };

static void ByteArray_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ByteArray_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ByteArray_obj::_double_bytes,"_double_bytes");
	HX_MARK_MEMBER_NAME(ByteArray_obj::_double_of_bytes,"_double_of_bytes");
	HX_MARK_MEMBER_NAME(ByteArray_obj::_float_bytes,"_float_bytes");
	HX_MARK_MEMBER_NAME(ByteArray_obj::_float_of_bytes,"_float_of_bytes");
	HX_MARK_MEMBER_NAME(ByteArray_obj::lime_byte_array_overwrite_file,"lime_byte_array_overwrite_file");
	HX_MARK_MEMBER_NAME(ByteArray_obj::lime_byte_array_read_file,"lime_byte_array_read_file");
	HX_MARK_MEMBER_NAME(ByteArray_obj::lime_byte_array_get_native_pointer,"lime_byte_array_get_native_pointer");
	HX_MARK_MEMBER_NAME(ByteArray_obj::lime_lzma_encode,"lime_lzma_encode");
	HX_MARK_MEMBER_NAME(ByteArray_obj::lime_lzma_decode,"lime_lzma_decode");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ByteArray_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ByteArray_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::_double_bytes,"_double_bytes");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::_double_of_bytes,"_double_of_bytes");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::_float_bytes,"_float_bytes");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::_float_of_bytes,"_float_of_bytes");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::lime_byte_array_overwrite_file,"lime_byte_array_overwrite_file");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::lime_byte_array_read_file,"lime_byte_array_read_file");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::lime_byte_array_get_native_pointer,"lime_byte_array_get_native_pointer");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::lime_lzma_encode,"lime_lzma_encode");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::lime_lzma_decode,"lime_lzma_decode");
};

#endif

hx::Class ByteArray_obj::__mClass;

static ::String ByteArray_obj_sStaticFields[] = {
	HX_HCSTRING("fromBytes","\xa1","\xf2","\x20","\x72"),
	HX_HCSTRING("readFile","\xf2","\xa8","\xb3","\x6b"),
	HX_HCSTRING("_double_bytes","\x5c","\x30","\xd8","\x56"),
	HX_HCSTRING("_double_of_bytes","\xb2","\xc0","\x4a","\x2d"),
	HX_HCSTRING("_float_bytes","\x49","\xe0","\x15","\x92"),
	HX_HCSTRING("_float_of_bytes","\xe5","\x02","\x2c","\x1f"),
	HX_HCSTRING("lime_byte_array_overwrite_file","\x83","\x8f","\x35","\xd0"),
	HX_HCSTRING("lime_byte_array_read_file","\x12","\xa8","\x42","\x82"),
	HX_HCSTRING("lime_byte_array_get_native_pointer","\x31","\xd1","\xd0","\x83"),
	HX_HCSTRING("lime_lzma_encode","\x29","\xe7","\xe1","\xd8"),
	HX_HCSTRING("lime_lzma_decode","\x41","\x52","\xeb","\x43"),
	::String(null())
};

void ByteArray_obj::__register()
{
	hx::Object *dummy = new ByteArray_obj;
	ByteArray_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.utils.ByteArray","\x70","\x75","\x06","\x6b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ByteArray_obj::__GetStatic;
	__mClass->mSetStaticField = &ByteArray_obj::__SetStatic;
	__mClass->mMarkFunc = ByteArray_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ByteArray_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ByteArray_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ByteArray_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ByteArray_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ByteArray_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ByteArray_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ByteArray_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_816_boot)
HXDLIN( 816)		_double_bytes = ::openfl::_legacy::Lib_obj::load(HX_("std",a3,a8,57,00),HX_("double_bytes",7d,9d,69,74),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_817_boot)
HXDLIN( 817)		_double_of_bytes = ::openfl::_legacy::Lib_obj::load(HX_("std",a3,a8,57,00),HX_("double_of_bytes",31,7e,6b,42),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_818_boot)
HXDLIN( 818)		_float_bytes = ::openfl::_legacy::Lib_obj::load(HX_("std",a3,a8,57,00),HX_("float_bytes",48,32,0c,2c),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_819_boot)
HXDLIN( 819)		_float_of_bytes = ::openfl::_legacy::Lib_obj::load(HX_("std",a3,a8,57,00),HX_("float_of_bytes",46,ba,cb,d5),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_821_boot)
HXDLIN( 821)		lime_byte_array_overwrite_file = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_byte_array_overwrite_file",61,27,b3,cb),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_822_boot)
HXDLIN( 822)		lime_byte_array_read_file = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_byte_array_read_file",f4,1c,28,eb),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_824_boot)
HXDLIN( 824)		lime_byte_array_get_native_pointer = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_byte_array_get_native_pointer",0f,b0,5a,d6),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_825_boot)
HXDLIN( 825)		lime_lzma_encode = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_lzma_encode",87,96,c6,16),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7bd5f26fadc7df76_826_boot)
HXDLIN( 826)		lime_lzma_decode = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_lzma_decode",9f,01,d0,81),(int)1);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace utils
