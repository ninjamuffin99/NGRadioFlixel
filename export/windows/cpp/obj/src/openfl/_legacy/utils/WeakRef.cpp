// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_WeakRef
#include <openfl/_legacy/utils/WeakRef.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_1510487b3b9d2e6d_16_new,"openfl._legacy.utils.WeakRef","new",0xd3105bec,"openfl._legacy.utils.WeakRef.new","openfl/_legacy/utils/WeakRef.hx",16,0x9541fd47)
HX_LOCAL_STACK_FRAME(_hx_pos_1510487b3b9d2e6d_31_get,"openfl._legacy.utils.WeakRef","get",0xd30b0c22,"openfl._legacy.utils.WeakRef.get","openfl/_legacy/utils/WeakRef.hx",31,0x9541fd47)
HX_LOCAL_STACK_FRAME(_hx_pos_1510487b3b9d2e6d_57_toString,"openfl._legacy.utils.WeakRef","toString",0x9150e9a0,"openfl._legacy.utils.WeakRef.toString","openfl/_legacy/utils/WeakRef.hx",57,0x9541fd47)
HX_LOCAL_STACK_FRAME(_hx_pos_1510487b3b9d2e6d_77_boot,"openfl._legacy.utils.WeakRef","boot",0xd3591326,"openfl._legacy.utils.WeakRef.boot","openfl/_legacy/utils/WeakRef.hx",77,0x9541fd47)
HX_LOCAL_STACK_FRAME(_hx_pos_1510487b3b9d2e6d_78_boot,"openfl._legacy.utils.WeakRef","boot",0xd3591326,"openfl._legacy.utils.WeakRef.boot","openfl/_legacy/utils/WeakRef.hx",78,0x9541fd47)
namespace openfl{
namespace _legacy{
namespace utils{

void WeakRef_obj::__construct( ::Dynamic object,hx::Null< bool >  __o_makeWeak){
bool makeWeak = __o_makeWeak.Default(true);
            	HX_STACKFRAME(&_hx_pos_1510487b3b9d2e6d_16_new)
HXDLIN(  16)		if (makeWeak) {
HXLINE(  18)			this->weakRef = ( (int)(::openfl::_legacy::utils::WeakRef_obj::lime_weak_ref_create(hx::ObjectPtr<OBJ_>(this),object)) );
HXLINE(  19)			this->hardRef = null();
            		}
            		else {
HXLINE(  23)			this->weakRef = (int)-1;
HXLINE(  24)			this->hardRef = object;
            		}
            	}

Dynamic WeakRef_obj::__CreateEmpty() { return new WeakRef_obj; }

void *WeakRef_obj::_hx_vtable = 0;

Dynamic WeakRef_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< WeakRef_obj > _hx_result = new WeakRef_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool WeakRef_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x688432e2;
}

 ::Dynamic WeakRef_obj::get(){
            	HX_STACKFRAME(&_hx_pos_1510487b3b9d2e6d_31_get)
HXLINE(  33)		if (hx::IsNotNull( this->hardRef )) {
HXLINE(  35)			return this->hardRef;
            		}
HXLINE(  39)		if ((this->weakRef < (int)0)) {
HXLINE(  41)			return null();
            		}
HXLINE(  45)		 ::Dynamic result = ::openfl::_legacy::utils::WeakRef_obj::lime_weak_ref_get(this->weakRef);
HXLINE(  46)		if (hx::IsNull( result )) {
HXLINE(  48)			this->weakRef = (int)-1;
            		}
HXLINE(  52)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(WeakRef_obj,get,return )

::String WeakRef_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_1510487b3b9d2e6d_57_toString)
HXLINE(  59)		if (hx::IsNull( this->hardRef )) {
HXLINE(  61)			return (HX_("",00,00,00,00) + ::Std_obj::string(this->hardRef));
            		}
HXLINE(  65)		return ((HX_("WeakRef(",2d,30,1b,73) + this->weakRef) + HX_(")",29,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(WeakRef_obj,toString,return )

 ::Dynamic WeakRef_obj::lime_weak_ref_create;

 ::Dynamic WeakRef_obj::lime_weak_ref_get;


hx::ObjectPtr< WeakRef_obj > WeakRef_obj::__new( ::Dynamic object,hx::Null< bool >  __o_makeWeak) {
	hx::ObjectPtr< WeakRef_obj > __this = new WeakRef_obj();
	__this->__construct(object,__o_makeWeak);
	return __this;
}

hx::ObjectPtr< WeakRef_obj > WeakRef_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic object,hx::Null< bool >  __o_makeWeak) {
	WeakRef_obj *__this = (WeakRef_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(WeakRef_obj), true, "openfl._legacy.utils.WeakRef"));
	*(void **)__this = WeakRef_obj::_hx_vtable;
	__this->__construct(object,__o_makeWeak);
	return __this;
}

WeakRef_obj::WeakRef_obj()
{
}

void WeakRef_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(WeakRef);
	HX_MARK_MEMBER_NAME(hardRef,"hardRef");
	HX_MARK_MEMBER_NAME(weakRef,"weakRef");
	HX_MARK_END_CLASS();
}

void WeakRef_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(hardRef,"hardRef");
	HX_VISIT_MEMBER_NAME(weakRef,"weakRef");
}

hx::Val WeakRef_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hardRef") ) { return hx::Val( hardRef ); }
		if (HX_FIELD_EQ(inName,"weakRef") ) { return hx::Val( weakRef ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool WeakRef_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"lime_weak_ref_get") ) { outValue = ( lime_weak_ref_get ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_weak_ref_create") ) { outValue = ( lime_weak_ref_create ); return true; }
	}
	return false;
}

hx::Val WeakRef_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"hardRef") ) { hardRef=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"weakRef") ) { weakRef=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool WeakRef_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"lime_weak_ref_get") ) { lime_weak_ref_get=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_weak_ref_create") ) { lime_weak_ref_create=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void WeakRef_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("hardRef","\x28","\x47","\x5c","\x93"));
	outFields->push(HX_HCSTRING("weakRef","\xbb","\x4f","\x5c","\xd7"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo WeakRef_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(WeakRef_obj,hardRef),HX_HCSTRING("hardRef","\x28","\x47","\x5c","\x93")},
	{hx::fsInt,(int)offsetof(WeakRef_obj,weakRef),HX_HCSTRING("weakRef","\xbb","\x4f","\x5c","\xd7")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo WeakRef_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &WeakRef_obj::lime_weak_ref_create,HX_HCSTRING("lime_weak_ref_create","\xe5","\xa6","\x4d","\x08")},
	{hx::fsObject /*Dynamic*/ ,(void *) &WeakRef_obj::lime_weak_ref_get,HX_HCSTRING("lime_weak_ref_get","\x0d","\x25","\xb7","\x9a")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String WeakRef_obj_sMemberFields[] = {
	HX_HCSTRING("hardRef","\x28","\x47","\x5c","\x93"),
	HX_HCSTRING("weakRef","\xbb","\x4f","\x5c","\xd7"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void WeakRef_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WeakRef_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(WeakRef_obj::lime_weak_ref_create,"lime_weak_ref_create");
	HX_MARK_MEMBER_NAME(WeakRef_obj::lime_weak_ref_get,"lime_weak_ref_get");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WeakRef_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WeakRef_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(WeakRef_obj::lime_weak_ref_create,"lime_weak_ref_create");
	HX_VISIT_MEMBER_NAME(WeakRef_obj::lime_weak_ref_get,"lime_weak_ref_get");
};

#endif

hx::Class WeakRef_obj::__mClass;

static ::String WeakRef_obj_sStaticFields[] = {
	HX_HCSTRING("lime_weak_ref_create","\xe5","\xa6","\x4d","\x08"),
	HX_HCSTRING("lime_weak_ref_get","\x0d","\x25","\xb7","\x9a"),
	::String(null())
};

void WeakRef_obj::__register()
{
	hx::Object *dummy = new WeakRef_obj;
	WeakRef_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.utils.WeakRef","\xfa","\x35","\xe9","\x5c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &WeakRef_obj::__GetStatic;
	__mClass->mSetStaticField = &WeakRef_obj::__SetStatic;
	__mClass->mMarkFunc = WeakRef_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(WeakRef_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(WeakRef_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< WeakRef_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = WeakRef_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WeakRef_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WeakRef_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void WeakRef_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_1510487b3b9d2e6d_77_boot)
HXDLIN(  77)		lime_weak_ref_create = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_weak_ref_create",43,5d,60,47),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1510487b3b9d2e6d_78_boot)
HXDLIN(  78)		lime_weak_ref_get = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_weak_ref_get",ef,e7,eb,84),(int)1);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace utils
