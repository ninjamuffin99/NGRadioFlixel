// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_BitmapData
#include <openfl/_legacy/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Graphics
#include <openfl/_legacy/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Tilesheet
#include <openfl/_legacy/display/Tilesheet.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Point
#include <openfl/_legacy/geom/Point.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Rectangle
#include <openfl/_legacy/geom/Rectangle.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4410a112331db337_39_new,"openfl._legacy.display.Tilesheet","new",0x702cb873,"openfl._legacy.display.Tilesheet.new","openfl/_legacy/display/Tilesheet.hx",39,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_54_addTileRect,"openfl._legacy.display.Tilesheet","addTileRect",0x2df55dc6,"openfl._legacy.display.Tilesheet.addTileRect","openfl/_legacy/display/Tilesheet.hx",54,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_67_drawTiles,"openfl._legacy.display.Tilesheet","drawTiles",0x43ceeb34,"openfl._legacy.display.Tilesheet.drawTiles","openfl/_legacy/display/Tilesheet.hx",67,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_73_getTileCenter,"openfl._legacy.display.Tilesheet","getTileCenter",0x967135ac,"openfl._legacy.display.Tilesheet.getTileCenter","openfl/_legacy/display/Tilesheet.hx",73,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_77_getTileRect,"openfl._legacy.display.Tilesheet","getTileRect",0x228ce93b,"openfl._legacy.display.Tilesheet.getTileRect","openfl/_legacy/display/Tilesheet.hx",77,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_81_getTileUVs,"openfl._legacy.display.Tilesheet","getTileUVs",0x4630c6db,"openfl._legacy.display.Tilesheet.getTileUVs","openfl/_legacy/display/Tilesheet.hx",81,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_15_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",15,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_16_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",16,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_17_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",17,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_18_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",18,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_19_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",19,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_20_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",20,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_21_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",21,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_22_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",22,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_23_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",23,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_24_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",24,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_25_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",25,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_26_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",26,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_32_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",32,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_90_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",90,0x425689e0)
HX_LOCAL_STACK_FRAME(_hx_pos_4410a112331db337_91_boot,"openfl._legacy.display.Tilesheet","boot",0xaf0dacbf,"openfl._legacy.display.Tilesheet.boot","openfl/_legacy/display/Tilesheet.hx",91,0x425689e0)
namespace openfl{
namespace _legacy{
namespace display{

void Tilesheet_obj::__construct( ::openfl::_legacy::display::BitmapData image){
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_39_new)
HXLINE(  41)		this->_hx___bitmap = image;
HXLINE(  42)		this->_hx___handle = ::openfl::_legacy::display::Tilesheet_obj::lime_tilesheet_create(image->_hx___handle);
HXLINE(  44)		this->_bitmapWidth = this->_hx___bitmap->get_width();
HXLINE(  45)		this->_bitmapHeight = this->_hx___bitmap->get_height();
HXLINE(  47)		this->_tilePoints = ::Array_obj< ::Dynamic>::__new();
HXLINE(  48)		this->_tiles = ::Array_obj< ::Dynamic>::__new();
HXLINE(  49)		this->_tileUVs = ::Array_obj< ::Dynamic>::__new();
            	}

Dynamic Tilesheet_obj::__CreateEmpty() { return new Tilesheet_obj; }

void *Tilesheet_obj::_hx_vtable = 0;

Dynamic Tilesheet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Tilesheet_obj > _hx_result = new Tilesheet_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Tilesheet_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0a83df43;
}

int Tilesheet_obj::addTileRect( ::openfl::_legacy::geom::Rectangle rectangle, ::openfl::_legacy::geom::Point centerPoint){
            	HX_GC_STACKFRAME(&_hx_pos_4410a112331db337_54_addTileRect)
HXLINE(  56)		this->_tiles->push(rectangle);
HXLINE(  57)		if (hx::IsNull( centerPoint )) {
HXLINE(  57)			this->_tilePoints->push(::openfl::_legacy::display::Tilesheet_obj::defaultRatio);
            		}
            		else {
HXLINE(  58)			::Array< ::Dynamic> _hx_tmp = this->_tilePoints;
HXDLIN(  58)			Float _hx_tmp1 = ((Float)centerPoint->x / (Float)rectangle->width);
HXDLIN(  58)			_hx_tmp->push( ::openfl::_legacy::geom::Point_obj::__alloc( HX_CTX ,_hx_tmp1,((Float)centerPoint->y / (Float)rectangle->height)));
            		}
HXLINE(  59)		::Array< ::Dynamic> _hx_tmp2 = this->_tileUVs;
HXDLIN(  59)		Float _hx_tmp3 = rectangle->get_left();
HXDLIN(  59)		Float _hx_tmp4 = ((Float)_hx_tmp3 / (Float)this->_bitmapWidth);
HXDLIN(  59)		Float _hx_tmp5 = rectangle->get_top();
HXDLIN(  59)		Float _hx_tmp6 = ((Float)_hx_tmp5 / (Float)this->_bitmapHeight);
HXDLIN(  59)		Float _hx_tmp7 = rectangle->get_right();
HXDLIN(  59)		Float _hx_tmp8 = ((Float)_hx_tmp7 / (Float)this->_bitmapWidth);
HXDLIN(  59)		Float _hx_tmp9 = rectangle->get_bottom();
HXDLIN(  59)		_hx_tmp2->push( ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,_hx_tmp4,_hx_tmp6,_hx_tmp8,((Float)_hx_tmp9 / (Float)this->_bitmapHeight)));
HXLINE(  60)		return ( (int)(::openfl::_legacy::display::Tilesheet_obj::lime_tilesheet_add_rect(this->_hx___handle,rectangle,centerPoint)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(Tilesheet_obj,addTileRect,return )

void Tilesheet_obj::drawTiles( ::openfl::_legacy::display::Graphics graphics,::Array< Float > tileData,hx::Null< bool >  __o_smooth,hx::Null< int >  __o_flags,hx::Null< int >  __o_count){
bool smooth = __o_smooth.Default(false);
int flags = __o_flags.Default(0);
int count = __o_count.Default(-1);
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_67_drawTiles)
HXDLIN(  67)		graphics->drawTiles(hx::ObjectPtr<OBJ_>(this),tileData,smooth,flags,count);
            	}


HX_DEFINE_DYNAMIC_FUNC5(Tilesheet_obj,drawTiles,(void))

 ::openfl::_legacy::geom::Point Tilesheet_obj::getTileCenter(int index){
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_73_getTileCenter)
HXDLIN(  73)		return this->_tilePoints->__get(index).StaticCast<  ::openfl::_legacy::geom::Point >();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Tilesheet_obj,getTileCenter,return )

 ::openfl::_legacy::geom::Rectangle Tilesheet_obj::getTileRect(int index){
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_77_getTileRect)
HXDLIN(  77)		return this->_tiles->__get(index).StaticCast<  ::openfl::_legacy::geom::Rectangle >();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Tilesheet_obj,getTileRect,return )

 ::openfl::_legacy::geom::Rectangle Tilesheet_obj::getTileUVs(int index){
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_81_getTileUVs)
HXDLIN(  81)		return this->_tileUVs->__get(index).StaticCast<  ::openfl::_legacy::geom::Rectangle >();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Tilesheet_obj,getTileUVs,return )

int Tilesheet_obj::TILE_SCALE;

int Tilesheet_obj::TILE_ROTATION;

int Tilesheet_obj::TILE_RGB;

int Tilesheet_obj::TILE_ALPHA;

int Tilesheet_obj::TILE_TRANS_2x2;

int Tilesheet_obj::TILE_RECT;

int Tilesheet_obj::TILE_ORIGIN;

int Tilesheet_obj::TILE_BLEND_NORMAL;

int Tilesheet_obj::TILE_BLEND_ADD;

int Tilesheet_obj::TILE_BLEND_MULTIPLY;

int Tilesheet_obj::TILE_BLEND_SCREEN;

int Tilesheet_obj::TILE_BLEND_SUBTRACT;

 ::openfl::_legacy::geom::Point Tilesheet_obj::defaultRatio;

 ::Dynamic Tilesheet_obj::lime_tilesheet_create;

 ::Dynamic Tilesheet_obj::lime_tilesheet_add_rect;


hx::ObjectPtr< Tilesheet_obj > Tilesheet_obj::__new( ::openfl::_legacy::display::BitmapData image) {
	hx::ObjectPtr< Tilesheet_obj > __this = new Tilesheet_obj();
	__this->__construct(image);
	return __this;
}

hx::ObjectPtr< Tilesheet_obj > Tilesheet_obj::__alloc(hx::Ctx *_hx_ctx, ::openfl::_legacy::display::BitmapData image) {
	Tilesheet_obj *__this = (Tilesheet_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Tilesheet_obj), true, "openfl._legacy.display.Tilesheet"));
	*(void **)__this = Tilesheet_obj::_hx_vtable;
	__this->__construct(image);
	return __this;
}

Tilesheet_obj::Tilesheet_obj()
{
}

void Tilesheet_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Tilesheet);
	HX_MARK_MEMBER_NAME(_hx___bitmap,"__bitmap");
	HX_MARK_MEMBER_NAME(_hx___handle,"__handle");
	HX_MARK_MEMBER_NAME(_bitmapHeight,"_bitmapHeight");
	HX_MARK_MEMBER_NAME(_bitmapWidth,"_bitmapWidth");
	HX_MARK_MEMBER_NAME(_tilePoints,"_tilePoints");
	HX_MARK_MEMBER_NAME(_tiles,"_tiles");
	HX_MARK_MEMBER_NAME(_tileUVs,"_tileUVs");
	HX_MARK_END_CLASS();
}

void Tilesheet_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx___bitmap,"__bitmap");
	HX_VISIT_MEMBER_NAME(_hx___handle,"__handle");
	HX_VISIT_MEMBER_NAME(_bitmapHeight,"_bitmapHeight");
	HX_VISIT_MEMBER_NAME(_bitmapWidth,"_bitmapWidth");
	HX_VISIT_MEMBER_NAME(_tilePoints,"_tilePoints");
	HX_VISIT_MEMBER_NAME(_tiles,"_tiles");
	HX_VISIT_MEMBER_NAME(_tileUVs,"_tileUVs");
}

hx::Val Tilesheet_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_tiles") ) { return hx::Val( _tiles ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__bitmap") ) { return hx::Val( _hx___bitmap ); }
		if (HX_FIELD_EQ(inName,"__handle") ) { return hx::Val( _hx___handle ); }
		if (HX_FIELD_EQ(inName,"_tileUVs") ) { return hx::Val( _tileUVs ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"drawTiles") ) { return hx::Val( drawTiles_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getTileUVs") ) { return hx::Val( getTileUVs_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_tilePoints") ) { return hx::Val( _tilePoints ); }
		if (HX_FIELD_EQ(inName,"addTileRect") ) { return hx::Val( addTileRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTileRect") ) { return hx::Val( getTileRect_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_bitmapWidth") ) { return hx::Val( _bitmapWidth ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_bitmapHeight") ) { return hx::Val( _bitmapHeight ); }
		if (HX_FIELD_EQ(inName,"getTileCenter") ) { return hx::Val( getTileCenter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Tilesheet_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"defaultRatio") ) { outValue = ( defaultRatio ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_tilesheet_create") ) { outValue = ( lime_tilesheet_create ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_tilesheet_add_rect") ) { outValue = ( lime_tilesheet_add_rect ); return true; }
	}
	return false;
}

hx::Val Tilesheet_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_tiles") ) { _tiles=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__bitmap") ) { _hx___bitmap=inValue.Cast<  ::openfl::_legacy::display::BitmapData >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__handle") ) { _hx___handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_tileUVs") ) { _tileUVs=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_tilePoints") ) { _tilePoints=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_bitmapWidth") ) { _bitmapWidth=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_bitmapHeight") ) { _bitmapHeight=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Tilesheet_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"defaultRatio") ) { defaultRatio=ioValue.Cast<  ::openfl::_legacy::geom::Point >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_tilesheet_create") ) { lime_tilesheet_create=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_tilesheet_add_rect") ) { lime_tilesheet_add_rect=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void Tilesheet_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("__bitmap","\x0f","\x7b","\x3b","\x99"));
	outFields->push(HX_HCSTRING("__handle","\xc8","\xee","\x2c","\x60"));
	outFields->push(HX_HCSTRING("_bitmapHeight","\x15","\x3c","\xda","\xef"));
	outFields->push(HX_HCSTRING("_bitmapWidth","\x98","\xa1","\xc2","\x70"));
	outFields->push(HX_HCSTRING("_tilePoints","\x10","\xb5","\x4e","\x2e"));
	outFields->push(HX_HCSTRING("_tiles","\xc6","\x44","\x1c","\x0c"));
	outFields->push(HX_HCSTRING("_tileUVs","\x05","\x0a","\x35","\x7f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Tilesheet_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::openfl::_legacy::display::BitmapData*/ ,(int)offsetof(Tilesheet_obj,_hx___bitmap),HX_HCSTRING("__bitmap","\x0f","\x7b","\x3b","\x99")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Tilesheet_obj,_hx___handle),HX_HCSTRING("__handle","\xc8","\xee","\x2c","\x60")},
	{hx::fsInt,(int)offsetof(Tilesheet_obj,_bitmapHeight),HX_HCSTRING("_bitmapHeight","\x15","\x3c","\xda","\xef")},
	{hx::fsInt,(int)offsetof(Tilesheet_obj,_bitmapWidth),HX_HCSTRING("_bitmapWidth","\x98","\xa1","\xc2","\x70")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Tilesheet_obj,_tilePoints),HX_HCSTRING("_tilePoints","\x10","\xb5","\x4e","\x2e")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Tilesheet_obj,_tiles),HX_HCSTRING("_tiles","\xc6","\x44","\x1c","\x0c")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Tilesheet_obj,_tileUVs),HX_HCSTRING("_tileUVs","\x05","\x0a","\x35","\x7f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Tilesheet_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_SCALE,HX_HCSTRING("TILE_SCALE","\x59","\x77","\x2d","\x62")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_ROTATION,HX_HCSTRING("TILE_ROTATION","\xaf","\x5b","\x7b","\x62")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_RGB,HX_HCSTRING("TILE_RGB","\x1c","\x7e","\xfb","\xfc")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_ALPHA,HX_HCSTRING("TILE_ALPHA","\x2d","\x50","\xf5","\x0a")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_TRANS_2x2,HX_HCSTRING("TILE_TRANS_2x2","\xe4","\x26","\x89","\xb2")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_RECT,HX_HCSTRING("TILE_RECT","\x15","\x57","\x11","\x5f")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_ORIGIN,HX_HCSTRING("TILE_ORIGIN","\x17","\x26","\x76","\x94")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_BLEND_NORMAL,HX_HCSTRING("TILE_BLEND_NORMAL","\xa6","\x02","\x62","\x2c")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_BLEND_ADD,HX_HCSTRING("TILE_BLEND_ADD","\x22","\x74","\xbf","\x89")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_BLEND_MULTIPLY,HX_HCSTRING("TILE_BLEND_MULTIPLY","\x63","\xb4","\x29","\xf2")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_BLEND_SCREEN,HX_HCSTRING("TILE_BLEND_SCREEN","\xeb","\xcb","\x55","\x43")},
	{hx::fsInt,(void *) &Tilesheet_obj::TILE_BLEND_SUBTRACT,HX_HCSTRING("TILE_BLEND_SUBTRACT","\x53","\x47","\xae","\x4f")},
	{hx::fsObject /*::openfl::_legacy::geom::Point*/ ,(void *) &Tilesheet_obj::defaultRatio,HX_HCSTRING("defaultRatio","\x8a","\x70","\x7f","\x99")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Tilesheet_obj::lime_tilesheet_create,HX_HCSTRING("lime_tilesheet_create","\xb4","\x1f","\x84","\xc6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Tilesheet_obj::lime_tilesheet_add_rect,HX_HCSTRING("lime_tilesheet_add_rect","\xfa","\x75","\x86","\x40")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Tilesheet_obj_sMemberFields[] = {
	HX_HCSTRING("__bitmap","\x0f","\x7b","\x3b","\x99"),
	HX_HCSTRING("__handle","\xc8","\xee","\x2c","\x60"),
	HX_HCSTRING("_bitmapHeight","\x15","\x3c","\xda","\xef"),
	HX_HCSTRING("_bitmapWidth","\x98","\xa1","\xc2","\x70"),
	HX_HCSTRING("_tilePoints","\x10","\xb5","\x4e","\x2e"),
	HX_HCSTRING("_tiles","\xc6","\x44","\x1c","\x0c"),
	HX_HCSTRING("_tileUVs","\x05","\x0a","\x35","\x7f"),
	HX_HCSTRING("addTileRect","\xb3","\xaa","\x09","\xb7"),
	HX_HCSTRING("drawTiles","\xe1","\x32","\x40","\xd8"),
	HX_HCSTRING("getTileCenter","\xd9","\x57","\xe4","\xc6"),
	HX_HCSTRING("getTileRect","\x28","\x36","\xa1","\xab"),
	HX_HCSTRING("getTileUVs","\x8e","\x36","\xde","\x94"),
	::String(null()) };

static void Tilesheet_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Tilesheet_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_SCALE,"TILE_SCALE");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_ROTATION,"TILE_ROTATION");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_RGB,"TILE_RGB");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_ALPHA,"TILE_ALPHA");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_TRANS_2x2,"TILE_TRANS_2x2");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_RECT,"TILE_RECT");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_ORIGIN,"TILE_ORIGIN");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_NORMAL,"TILE_BLEND_NORMAL");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_ADD,"TILE_BLEND_ADD");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_MULTIPLY,"TILE_BLEND_MULTIPLY");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_SCREEN,"TILE_BLEND_SCREEN");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_SUBTRACT,"TILE_BLEND_SUBTRACT");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::defaultRatio,"defaultRatio");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::lime_tilesheet_create,"lime_tilesheet_create");
	HX_MARK_MEMBER_NAME(Tilesheet_obj::lime_tilesheet_add_rect,"lime_tilesheet_add_rect");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Tilesheet_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_SCALE,"TILE_SCALE");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_ROTATION,"TILE_ROTATION");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_RGB,"TILE_RGB");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_ALPHA,"TILE_ALPHA");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_TRANS_2x2,"TILE_TRANS_2x2");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_RECT,"TILE_RECT");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_ORIGIN,"TILE_ORIGIN");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_NORMAL,"TILE_BLEND_NORMAL");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_ADD,"TILE_BLEND_ADD");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_MULTIPLY,"TILE_BLEND_MULTIPLY");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_SCREEN,"TILE_BLEND_SCREEN");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::TILE_BLEND_SUBTRACT,"TILE_BLEND_SUBTRACT");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::defaultRatio,"defaultRatio");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::lime_tilesheet_create,"lime_tilesheet_create");
	HX_VISIT_MEMBER_NAME(Tilesheet_obj::lime_tilesheet_add_rect,"lime_tilesheet_add_rect");
};

#endif

hx::Class Tilesheet_obj::__mClass;

static ::String Tilesheet_obj_sStaticFields[] = {
	HX_HCSTRING("TILE_SCALE","\x59","\x77","\x2d","\x62"),
	HX_HCSTRING("TILE_ROTATION","\xaf","\x5b","\x7b","\x62"),
	HX_HCSTRING("TILE_RGB","\x1c","\x7e","\xfb","\xfc"),
	HX_HCSTRING("TILE_ALPHA","\x2d","\x50","\xf5","\x0a"),
	HX_HCSTRING("TILE_TRANS_2x2","\xe4","\x26","\x89","\xb2"),
	HX_HCSTRING("TILE_RECT","\x15","\x57","\x11","\x5f"),
	HX_HCSTRING("TILE_ORIGIN","\x17","\x26","\x76","\x94"),
	HX_HCSTRING("TILE_BLEND_NORMAL","\xa6","\x02","\x62","\x2c"),
	HX_HCSTRING("TILE_BLEND_ADD","\x22","\x74","\xbf","\x89"),
	HX_HCSTRING("TILE_BLEND_MULTIPLY","\x63","\xb4","\x29","\xf2"),
	HX_HCSTRING("TILE_BLEND_SCREEN","\xeb","\xcb","\x55","\x43"),
	HX_HCSTRING("TILE_BLEND_SUBTRACT","\x53","\x47","\xae","\x4f"),
	HX_HCSTRING("defaultRatio","\x8a","\x70","\x7f","\x99"),
	HX_HCSTRING("lime_tilesheet_create","\xb4","\x1f","\x84","\xc6"),
	HX_HCSTRING("lime_tilesheet_add_rect","\xfa","\x75","\x86","\x40"),
	::String(null())
};

void Tilesheet_obj::__register()
{
	hx::Object *dummy = new Tilesheet_obj;
	Tilesheet_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.display.Tilesheet","\x01","\x03","\xcd","\x1f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Tilesheet_obj::__GetStatic;
	__mClass->mSetStaticField = &Tilesheet_obj::__SetStatic;
	__mClass->mMarkFunc = Tilesheet_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Tilesheet_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Tilesheet_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Tilesheet_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Tilesheet_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Tilesheet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Tilesheet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Tilesheet_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_15_boot)
HXDLIN(  15)		TILE_SCALE = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_16_boot)
HXDLIN(  16)		TILE_ROTATION = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_17_boot)
HXDLIN(  17)		TILE_RGB = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_18_boot)
HXDLIN(  18)		TILE_ALPHA = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_19_boot)
HXDLIN(  19)		TILE_TRANS_2x2 = (int)16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_20_boot)
HXDLIN(  20)		TILE_RECT = (int)32;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_21_boot)
HXDLIN(  21)		TILE_ORIGIN = (int)64;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_22_boot)
HXDLIN(  22)		TILE_BLEND_NORMAL = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_23_boot)
HXDLIN(  23)		TILE_BLEND_ADD = (int)65536;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_24_boot)
HXDLIN(  24)		TILE_BLEND_MULTIPLY = (int)131072;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_25_boot)
HXDLIN(  25)		TILE_BLEND_SCREEN = (int)262144;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_26_boot)
HXDLIN(  26)		TILE_BLEND_SUBTRACT = (int)524288;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_4410a112331db337_32_boot)
HXDLIN(  32)		defaultRatio =  ::openfl::_legacy::geom::Point_obj::__alloc( HX_CTX ,(int)0,(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_90_boot)
HXDLIN(  90)		lime_tilesheet_create = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_tilesheet_create",96,fb,d0,b7),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_4410a112331db337_91_boot)
HXDLIN(  91)		lime_tilesheet_add_rect = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_tilesheet_add_rect",5c,8e,ab,c3),(int)3);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace display
