// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Stage
#include <openfl/_legacy/display/Stage.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_Event
#include <openfl/_legacy/events/Event.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Point
#include <openfl/_legacy/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_errors_ArgumentError
#include <openfl/errors/ArgumentError.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_RangeError
#include <openfl/errors/RangeError.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_99b047bdf7691dac_21_new,"openfl._legacy.display.DisplayObjectContainer","new",0x440fc302,"openfl._legacy.display.DisplayObjectContainer.new","openfl/_legacy/display/DisplayObjectContainer.hx",21,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_29_addChild,"openfl._legacy.display.DisplayObjectContainer","addChild",0x389e11d9,"openfl._legacy.display.DisplayObjectContainer.addChild","openfl/_legacy/display/DisplayObjectContainer.hx",29,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_37_addChildAt,"openfl._legacy.display.DisplayObjectContainer","addChildAt",0x29a9332c,"openfl._legacy.display.DisplayObjectContainer.addChildAt","openfl/_legacy/display/DisplayObjectContainer.hx",37,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_48_areInaccessibleObjectsUnderPoint,"openfl._legacy.display.DisplayObjectContainer","areInaccessibleObjectsUnderPoint",0xa1314e5b,"openfl._legacy.display.DisplayObjectContainer.areInaccessibleObjectsUnderPoint","openfl/_legacy/display/DisplayObjectContainer.hx",48,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_55_contains,"openfl._legacy.display.DisplayObjectContainer","contains",0xa6029c3d,"openfl._legacy.display.DisplayObjectContainer.contains","openfl/_legacy/display/DisplayObjectContainer.hx",55,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_60_getChildAt,"openfl._legacy.display.DisplayObjectContainer","getChildAt",0x11808d57,"openfl._legacy.display.DisplayObjectContainer.getChildAt","openfl/_legacy/display/DisplayObjectContainer.hx",60,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_74_getChildByName,"openfl._legacy.display.DisplayObjectContainer","getChildByName",0xe45c6626,"openfl._legacy.display.DisplayObjectContainer.getChildByName","openfl/_legacy/display/DisplayObjectContainer.hx",74,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_93_getChildIndex,"openfl._legacy.display.DisplayObjectContainer","getChildIndex",0xe2a0b92e,"openfl._legacy.display.DisplayObjectContainer.getChildIndex","openfl/_legacy/display/DisplayObjectContainer.hx",93,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_98_getObjectsUnderPoint,"openfl._legacy.display.DisplayObjectContainer","getObjectsUnderPoint",0x75c607b4,"openfl._legacy.display.DisplayObjectContainer.getObjectsUnderPoint","openfl/_legacy/display/DisplayObjectContainer.hx",98,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_126_removeChild,"openfl._legacy.display.DisplayObjectContainer","removeChild",0xecafeb5a,"openfl._legacy.display.DisplayObjectContainer.removeChild","openfl/_legacy/display/DisplayObjectContainer.hx",126,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_142_removeChildAt,"openfl._legacy.display.DisplayObjectContainer","removeChildAt",0x69052eed,"openfl._legacy.display.DisplayObjectContainer.removeChildAt","openfl/_legacy/display/DisplayObjectContainer.hx",142,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_157_removeChildren,"openfl._legacy.display.DisplayObjectContainer","removeChildren",0x7ba90241,"openfl._legacy.display.DisplayObjectContainer.removeChildren","openfl/_legacy/display/DisplayObjectContainer.hx",157,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_194_setChildIndex,"openfl._legacy.display.DisplayObjectContainer","setChildIndex",0x27a69b3a,"openfl._legacy.display.DisplayObjectContainer.setChildIndex","openfl/_legacy/display/DisplayObjectContainer.hx",194,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_199_swapChildren,"openfl._legacy.display.DisplayObjectContainer","swapChildren",0xe1a8f410,"openfl._legacy.display.DisplayObjectContainer.swapChildren","openfl/_legacy/display/DisplayObjectContainer.hx",199,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_217_swapChildrenAt,"openfl._legacy.display.DisplayObjectContainer","swapChildrenAt",0x54da5123,"openfl._legacy.display.DisplayObjectContainer.swapChildrenAt","openfl/_legacy/display/DisplayObjectContainer.hx",217,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_222___addChild,"openfl._legacy.display.DisplayObjectContainer","__addChild",0xbdc1c879,"openfl._legacy.display.DisplayObjectContainer.__addChild","openfl/_legacy/display/DisplayObjectContainer.hx",222,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_246___broadcast,"openfl._legacy.display.DisplayObjectContainer","__broadcast",0xb6085083,"openfl._legacy.display.DisplayObjectContainer.__broadcast","openfl/_legacy/display/DisplayObjectContainer.hx",246,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_291___contains,"openfl._legacy.display.DisplayObjectContainer","__contains",0x2b2652dd,"openfl._legacy.display.DisplayObjectContainer.__contains","openfl/_legacy/display/DisplayObjectContainer.hx",291,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_320___findByID,"openfl._legacy.display.DisplayObjectContainer","__findByID",0x9261ff09,"openfl._legacy.display.DisplayObjectContainer.__findByID","openfl/_legacy/display/DisplayObjectContainer.hx",320,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_347___getChildIndex,"openfl._legacy.display.DisplayObjectContainer","__getChildIndex",0xcb62fe8e,"openfl._legacy.display.DisplayObjectContainer.__getChildIndex","openfl/_legacy/display/DisplayObjectContainer.hx",347,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_364___getObjectsUnderPoint,"openfl._legacy.display.DisplayObjectContainer","__getObjectsUnderPoint",0x14f12e54,"openfl._legacy.display.DisplayObjectContainer.__getObjectsUnderPoint","openfl/_legacy/display/DisplayObjectContainer.hx",364,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_377___onAdded,"openfl._legacy.display.DisplayObjectContainer","__onAdded",0x10a25c23,"openfl._legacy.display.DisplayObjectContainer.__onAdded","openfl/_legacy/display/DisplayObjectContainer.hx",377,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_390___onRemoved,"openfl._legacy.display.DisplayObjectContainer","__onRemoved",0xa19985c3,"openfl._legacy.display.DisplayObjectContainer.__onRemoved","openfl/_legacy/display/DisplayObjectContainer.hx",390,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_403___removeChildFromArray,"openfl._legacy.display.DisplayObjectContainer","__removeChildFromArray",0x96bf37b5,"openfl._legacy.display.DisplayObjectContainer.__removeChildFromArray","openfl/_legacy/display/DisplayObjectContainer.hx",403,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_417___setChildIndex,"openfl._legacy.display.DisplayObjectContainer","__setChildIndex",0x1068e09a,"openfl._legacy.display.DisplayObjectContainer.__setChildIndex","openfl/_legacy/display/DisplayObjectContainer.hx",417,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_495___swapChildrenAt,"openfl._legacy.display.DisplayObjectContainer","__swapChildrenAt",0x1614bfc3,"openfl._legacy.display.DisplayObjectContainer.__swapChildrenAt","openfl/_legacy/display/DisplayObjectContainer.hx",495,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_522_get_mouseChildren,"openfl._legacy.display.DisplayObjectContainer","get_mouseChildren",0x5f15adfd,"openfl._legacy.display.DisplayObjectContainer.get_mouseChildren","openfl/_legacy/display/DisplayObjectContainer.hx",522,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_523_set_mouseChildren,"openfl._legacy.display.DisplayObjectContainer","set_mouseChildren",0x82838609,"openfl._legacy.display.DisplayObjectContainer.set_mouseChildren","openfl/_legacy/display/DisplayObjectContainer.hx",523,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_531_get_numChildren,"openfl._legacy.display.DisplayObjectContainer","get_numChildren",0xa8107ede,"openfl._legacy.display.DisplayObjectContainer.get_numChildren","openfl/_legacy/display/DisplayObjectContainer.hx",531,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_532_get_tabChildren,"openfl._legacy.display.DisplayObjectContainer","get_tabChildren",0x971621ed,"openfl._legacy.display.DisplayObjectContainer.get_tabChildren","openfl/_legacy/display/DisplayObjectContainer.hx",532,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_533_set_tabChildren,"openfl._legacy.display.DisplayObjectContainer","set_tabChildren",0x92e19ef9,"openfl._legacy.display.DisplayObjectContainer.set_tabChildren","openfl/_legacy/display/DisplayObjectContainer.hx",533,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_543_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",543,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_544_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",544,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_545_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",545,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_546_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",546,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_547_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",547,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_548_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",548,0xf33fa94b)
HX_LOCAL_STACK_FRAME(_hx_pos_99b047bdf7691dac_549_boot,"openfl._legacy.display.DisplayObjectContainer","boot",0x41d3df50,"openfl._legacy.display.DisplayObjectContainer.boot","openfl/_legacy/display/DisplayObjectContainer.hx",549,0xf33fa94b)
namespace openfl{
namespace _legacy{
namespace display{

void DisplayObjectContainer_obj::__construct( ::Dynamic handle,::String type){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_21_new)
HXLINE(  23)		super::__construct(handle,type);
HXLINE(  24)		this->_hx___children = ::Array_obj< ::Dynamic>::__new(0);
            	}

Dynamic DisplayObjectContainer_obj::__CreateEmpty() { return new DisplayObjectContainer_obj; }

void *DisplayObjectContainer_obj::_hx_vtable = 0;

Dynamic DisplayObjectContainer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DisplayObjectContainer_obj > _hx_result = new DisplayObjectContainer_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool DisplayObjectContainer_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x306ae42a) {
		if (inClassId<=(int)0x25b00754) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x25b00754;
		} else {
			return inClassId==(int)0x306ae42a;
		}
	} else {
		return inClassId==(int)0x3d2d7617 || inClassId==(int)0x5fcdb6d3;
	}
}

 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::addChild( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_29_addChild)
HXLINE(  31)		{
HXLINE(  31)			if (hx::IsEq( child,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE(  31)				HX_STACK_DO_THROW(HX_("Adding to self",b2,fe,1c,cf));
            			}
HXDLIN(  31)			if (hx::IsEq( child->_hx___parent,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE(  31)				this->setChildIndex(child,(this->_hx___children->length - (int)1));
            			}
            			else {
HXLINE(  31)				child->_hx___setParent(null());
HXDLIN(  31)				this->_hx___children->push(child);
HXDLIN(  31)				::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_add_child(this->_hx___handle,child->_hx___handle);
HXDLIN(  31)				child->_hx___setParent(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  32)		return child;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,addChild,return )

 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::addChildAt( ::openfl::_legacy::display::DisplayObject child,int index){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_37_addChildAt)
HXLINE(  39)		{
HXLINE(  39)			if (hx::IsEq( child,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE(  39)				HX_STACK_DO_THROW(HX_("Adding to self",b2,fe,1c,cf));
            			}
HXDLIN(  39)			if (hx::IsEq( child->_hx___parent,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE(  39)				this->setChildIndex(child,(this->_hx___children->length - (int)1));
            			}
            			else {
HXLINE(  39)				child->_hx___setParent(null());
HXDLIN(  39)				this->_hx___children->push(child);
HXDLIN(  39)				::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_add_child(this->_hx___handle,child->_hx___handle);
HXDLIN(  39)				child->_hx___setParent(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  40)		{
HXLINE(  40)			if ((index > this->_hx___children->length)) {
HXLINE(  40)				HX_STACK_DO_THROW((HX_("Invalid index position ",80,59,50,86) + index));
            			}
HXDLIN(  40)			int firstIndex = this->_hx___getChildIndex(child);
HXDLIN(  40)			if ((firstIndex < (int)0)) {
HXLINE(  40)				::String msg = ((HX_("setChildIndex : object ",93,4a,81,b4) + child->toString()) + HX_(" not found.",39,f7,8e,4f));
HXDLIN(  40)				if (hx::IsEq( child->_hx___parent,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE(  40)					int actualIndex = (int)-1;
HXDLIN(  40)					{
HXLINE(  40)						int _g1 = (int)0;
HXDLIN(  40)						int _g = this->_hx___children->length;
HXDLIN(  40)						while((_g1 < _g)){
HXLINE(  40)							_g1 = (_g1 + (int)1);
HXDLIN(  40)							int i = (_g1 - (int)1);
HXDLIN(  40)							if (hx::IsEq( this->_hx___children->__get(i).StaticCast<  ::openfl::_legacy::display::DisplayObject >(),child )) {
HXLINE(  40)								actualIndex = i;
HXDLIN(  40)								goto _hx_goto_2;
            							}
            						}
            						_hx_goto_2:;
            					}
HXDLIN(  40)					if ((actualIndex != (int)-1)) {
HXLINE(  40)						msg = (msg + (HX_("Internal error: Real child index was ",00,bf,50,8a) + ::Std_obj::string(actualIndex)));
            					}
            					else {
HXLINE(  40)						msg = (msg + HX_("Internal error: Child was not in __children array!",a1,b9,1b,be));
            					}
            				}
HXDLIN(  40)				HX_STACK_DO_THROW(msg);
            			}
HXDLIN(  40)			::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_set_child_index(this->_hx___handle,child->_hx___handle,index);
HXDLIN(  40)			if ((index < firstIndex)) {
HXLINE(  40)				int i1 = firstIndex;
HXDLIN(  40)				while((i1 > index)){
HXLINE(  40)					::Array< ::Dynamic> _hx_tmp = this->_hx___children;
HXDLIN(  40)					::Array< ::Dynamic> _hx_tmp1 = this->_hx___children;
HXDLIN(  40)					_hx_tmp[i1] = _hx_tmp1->__get((i1 - (int)1)).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN(  40)					i1 = (i1 - (int)1);
            				}
HXDLIN(  40)				this->_hx___children[index] = child;
            			}
            			else {
HXLINE(  40)				if ((firstIndex < index)) {
HXLINE(  40)					int i2 = firstIndex;
HXDLIN(  40)					while((i2 < index)){
HXLINE(  40)						::Array< ::Dynamic> _hx_tmp2 = this->_hx___children;
HXDLIN(  40)						::Array< ::Dynamic> _hx_tmp3 = this->_hx___children;
HXDLIN(  40)						_hx_tmp2[i2] = _hx_tmp3->__get((i2 + (int)1)).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN(  40)						i2 = (i2 + (int)1);
            					}
HXDLIN(  40)					this->_hx___children[index] = child;
            				}
            			}
            		}
HXLINE(  41)		return child;
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,addChildAt,return )

bool DisplayObjectContainer_obj::areInaccessibleObjectsUnderPoint( ::openfl::_legacy::geom::Point point){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_48_areInaccessibleObjectsUnderPoint)
HXDLIN(  48)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,areInaccessibleObjectsUnderPoint,return )

bool DisplayObjectContainer_obj::contains( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_55_contains)
HXDLIN(  55)		return this->_hx___contains(child);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,contains,return )

 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::getChildAt(int index){
            	HX_GC_STACKFRAME(&_hx_pos_99b047bdf7691dac_60_getChildAt)
HXLINE(  62)		bool _hx_tmp;
HXDLIN(  62)		if ((index >= (int)0)) {
HXLINE(  62)			_hx_tmp = (index < this->_hx___children->length);
            		}
            		else {
HXLINE(  62)			_hx_tmp = false;
            		}
HXDLIN(  62)		if (_hx_tmp) {
HXLINE(  64)			return this->_hx___children->__get(index).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
            		}
HXLINE(  68)		HX_STACK_DO_THROW( ::openfl::errors::RangeError_obj::__alloc( HX_CTX ,(((HX_("getChildAt : index out of bounds ",cf,fc,a7,dc) + index) + HX_("/",2f,00,00,00)) + this->_hx___children->length)));
HXDLIN(  68)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,getChildAt,return )

 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::getChildByName(::String name){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_74_getChildByName)
HXLINE(  76)		{
HXLINE(  76)			int _g = (int)0;
HXDLIN(  76)			::Array< ::Dynamic> _g1 = this->_hx___children;
HXDLIN(  76)			while((_g < _g1->length)){
HXLINE(  76)				 ::openfl::_legacy::display::DisplayObject child = _g1->__get(_g).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN(  76)				_g = (_g + (int)1);
HXLINE(  78)				if ((name == child->get_name())) {
HXLINE(  80)					return child;
            				}
            			}
            		}
HXLINE(  86)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,getChildByName,return )

int DisplayObjectContainer_obj::getChildIndex( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_93_getChildIndex)
HXDLIN(  93)		return this->_hx___getChildIndex(child);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,getChildIndex,return )

::Array< ::Dynamic> DisplayObjectContainer_obj::getObjectsUnderPoint( ::openfl::_legacy::geom::Point point){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_98_getObjectsUnderPoint)
HXLINE( 101)		bool onStage = hx::IsNotNull( this->get_stage() );
HXLINE( 102)		bool cacheVisible = this->get_visible();
HXLINE( 104)		if (!(onStage)) {
HXLINE( 106)			this->set_visible(false);
HXLINE( 107)			::openfl::_legacy::Lib_obj::get_stage()->addChild(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 111)		::Array< ::Dynamic> result = ::Array_obj< ::Dynamic>::__new();
HXLINE( 112)		this->_hx___getObjectsUnderPoint(point,result);
HXLINE( 114)		if (!(onStage)) {
HXLINE( 116)			::openfl::_legacy::Lib_obj::get_stage()->removeChild(hx::ObjectPtr<OBJ_>(this));
HXLINE( 117)			this->set_visible(cacheVisible);
            		}
HXLINE( 121)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,getObjectsUnderPoint,return )

 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::removeChild( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_126_removeChild)
HXLINE( 128)		int index = this->_hx___getChildIndex(child);
HXLINE( 130)		if ((index >= (int)0)) {
HXLINE( 132)			child->_hx___setParent(null());
HXLINE( 133)			return child;
            		}
HXLINE( 137)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,removeChild,return )

 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::removeChildAt(int index){
            	HX_GC_STACKFRAME(&_hx_pos_99b047bdf7691dac_142_removeChildAt)
HXLINE( 144)		bool _hx_tmp;
HXDLIN( 144)		if ((index >= (int)0)) {
HXLINE( 144)			_hx_tmp = (index < this->_hx___children->length);
            		}
            		else {
HXLINE( 144)			_hx_tmp = false;
            		}
HXDLIN( 144)		if (_hx_tmp) {
HXLINE( 146)			 ::openfl::_legacy::display::DisplayObject result = this->_hx___children->__get(index).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXLINE( 147)			result->_hx___setParent(null());
HXLINE( 148)			return result;
            		}
HXLINE( 152)		HX_STACK_DO_THROW( ::openfl::errors::ArgumentError_obj::__alloc( HX_CTX ,HX_("The supplied DisplayObject must be a child of the caller.",e6,f4,27,a5)));
HXDLIN( 152)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,removeChildAt,return )

void DisplayObjectContainer_obj::removeChildren(hx::Null< int >  __o_beginIndex,hx::Null< int >  __o_endIndex){
int beginIndex = __o_beginIndex.Default(0);
int endIndex = __o_endIndex.Default(2147483647);
            	HX_GC_STACKFRAME(&_hx_pos_99b047bdf7691dac_157_removeChildren)
HXLINE( 159)		if ((endIndex == (int)2147483647)) {
HXLINE( 161)			endIndex = (this->_hx___children->length - (int)1);
HXLINE( 163)			if ((endIndex < (int)0)) {
HXLINE( 165)				return;
            			}
            		}
HXLINE( 171)		if ((beginIndex > (this->_hx___children->length - (int)1))) {
HXLINE( 173)			return;
            		}
            		else {
HXLINE( 175)			bool _hx_tmp;
HXDLIN( 175)			bool _hx_tmp1;
HXDLIN( 175)			if ((endIndex >= beginIndex)) {
HXLINE( 175)				_hx_tmp1 = (beginIndex < (int)0);
            			}
            			else {
HXLINE( 175)				_hx_tmp1 = true;
            			}
HXDLIN( 175)			if (!(_hx_tmp1)) {
HXLINE( 175)				_hx_tmp = (endIndex > this->_hx___children->length);
            			}
            			else {
HXLINE( 175)				_hx_tmp = true;
            			}
HXDLIN( 175)			if (_hx_tmp) {
HXLINE( 177)				HX_STACK_DO_THROW( ::openfl::errors::RangeError_obj::__alloc( HX_CTX ,HX_("The supplied index is out of bounds.",17,96,1b,51)));
            			}
            		}
HXLINE( 181)		int numRemovals = (endIndex - beginIndex);
HXLINE( 182)		while((numRemovals >= (int)0)){
HXLINE( 184)			this->removeChildAt(beginIndex);
HXLINE( 185)			numRemovals = (numRemovals - (int)1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,removeChildren,(void))

void DisplayObjectContainer_obj::setChildIndex( ::openfl::_legacy::display::DisplayObject child,int index){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_194_setChildIndex)
HXDLIN( 194)		if ((index > this->_hx___children->length)) {
HXDLIN( 194)			HX_STACK_DO_THROW((HX_("Invalid index position ",80,59,50,86) + index));
            		}
HXDLIN( 194)		int firstIndex = this->_hx___getChildIndex(child);
HXDLIN( 194)		if ((firstIndex < (int)0)) {
HXDLIN( 194)			::String msg = ((HX_("setChildIndex : object ",93,4a,81,b4) + child->toString()) + HX_(" not found.",39,f7,8e,4f));
HXDLIN( 194)			if (hx::IsEq( child->_hx___parent,hx::ObjectPtr<OBJ_>(this) )) {
HXDLIN( 194)				int actualIndex = (int)-1;
HXDLIN( 194)				{
HXDLIN( 194)					int _g1 = (int)0;
HXDLIN( 194)					int _g = this->_hx___children->length;
HXDLIN( 194)					while((_g1 < _g)){
HXDLIN( 194)						_g1 = (_g1 + (int)1);
HXDLIN( 194)						int i = (_g1 - (int)1);
HXDLIN( 194)						if (hx::IsEq( this->_hx___children->__get(i).StaticCast<  ::openfl::_legacy::display::DisplayObject >(),child )) {
HXDLIN( 194)							actualIndex = i;
HXDLIN( 194)							goto _hx_goto_17;
            						}
            					}
            					_hx_goto_17:;
            				}
HXDLIN( 194)				if ((actualIndex != (int)-1)) {
HXDLIN( 194)					msg = (msg + (HX_("Internal error: Real child index was ",00,bf,50,8a) + ::Std_obj::string(actualIndex)));
            				}
            				else {
HXDLIN( 194)					msg = (msg + HX_("Internal error: Child was not in __children array!",a1,b9,1b,be));
            				}
            			}
HXDLIN( 194)			HX_STACK_DO_THROW(msg);
            		}
HXDLIN( 194)		::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_set_child_index(this->_hx___handle,child->_hx___handle,index);
HXDLIN( 194)		if ((index < firstIndex)) {
HXDLIN( 194)			int i1 = firstIndex;
HXDLIN( 194)			while((i1 > index)){
HXDLIN( 194)				::Array< ::Dynamic> _hx_tmp = this->_hx___children;
HXDLIN( 194)				::Array< ::Dynamic> _hx_tmp1 = this->_hx___children;
HXDLIN( 194)				_hx_tmp[i1] = _hx_tmp1->__get((i1 - (int)1)).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 194)				i1 = (i1 - (int)1);
            			}
HXDLIN( 194)			this->_hx___children[index] = child;
            		}
            		else {
HXDLIN( 194)			if ((firstIndex < index)) {
HXDLIN( 194)				int i2 = firstIndex;
HXDLIN( 194)				while((i2 < index)){
HXDLIN( 194)					::Array< ::Dynamic> _hx_tmp2 = this->_hx___children;
HXDLIN( 194)					::Array< ::Dynamic> _hx_tmp3 = this->_hx___children;
HXDLIN( 194)					_hx_tmp2[i2] = _hx_tmp3->__get((i2 + (int)1)).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 194)					i2 = (i2 + (int)1);
            				}
HXDLIN( 194)				this->_hx___children[index] = child;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,setChildIndex,(void))

void DisplayObjectContainer_obj::swapChildren( ::openfl::_legacy::display::DisplayObject child1, ::openfl::_legacy::display::DisplayObject child2){
            	HX_GC_STACKFRAME(&_hx_pos_99b047bdf7691dac_199_swapChildren)
HXLINE( 201)		int index1 = this->_hx___getChildIndex(child1);
HXLINE( 202)		int index2 = this->_hx___getChildIndex(child2);
HXLINE( 204)		bool _hx_tmp;
HXDLIN( 204)		if ((index1 >= (int)0)) {
HXLINE( 204)			_hx_tmp = (index2 < (int)0);
            		}
            		else {
HXLINE( 204)			_hx_tmp = true;
            		}
HXDLIN( 204)		if (_hx_tmp) {
HXLINE( 206)			HX_STACK_DO_THROW(HX_("swapChildren:Could not find children",32,ad,6e,85));
            		}
HXLINE( 210)		{
HXLINE( 210)			bool _hx_tmp1;
HXDLIN( 210)			bool _hx_tmp2;
HXDLIN( 210)			bool _hx_tmp3;
HXDLIN( 210)			if ((index1 >= (int)0)) {
HXLINE( 210)				_hx_tmp3 = (index2 < (int)0);
            			}
            			else {
HXLINE( 210)				_hx_tmp3 = true;
            			}
HXDLIN( 210)			if (!(_hx_tmp3)) {
HXLINE( 210)				_hx_tmp2 = (index1 > this->_hx___children->length);
            			}
            			else {
HXLINE( 210)				_hx_tmp2 = true;
            			}
HXDLIN( 210)			if (!(_hx_tmp2)) {
HXLINE( 210)				_hx_tmp1 = (index2 > this->_hx___children->length);
            			}
            			else {
HXLINE( 210)				_hx_tmp1 = true;
            			}
HXDLIN( 210)			if (_hx_tmp1) {
HXLINE( 210)				HX_STACK_DO_THROW( ::openfl::errors::RangeError_obj::__alloc( HX_CTX ,HX_("swapChildrenAt : index out of bounds",fd,03,a9,7f)));
            			}
HXDLIN( 210)			if ((index1 != index2)) {
HXLINE( 210)				 ::openfl::_legacy::display::DisplayObject temp = this->_hx___children->__get(index1).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 210)				::Array< ::Dynamic> _hx_tmp4 = this->_hx___children;
HXDLIN( 210)				_hx_tmp4[index1] = this->_hx___children->__get(index2).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 210)				this->_hx___children[index2] = temp;
HXDLIN( 210)				::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_swap_children(this->_hx___handle,index1,index2);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,swapChildren,(void))

void DisplayObjectContainer_obj::swapChildrenAt(int index1,int index2){
            	HX_GC_STACKFRAME(&_hx_pos_99b047bdf7691dac_217_swapChildrenAt)
HXDLIN( 217)		bool _hx_tmp;
HXDLIN( 217)		bool _hx_tmp1;
HXDLIN( 217)		bool _hx_tmp2;
HXDLIN( 217)		if ((index1 >= (int)0)) {
HXDLIN( 217)			_hx_tmp2 = (index2 < (int)0);
            		}
            		else {
HXDLIN( 217)			_hx_tmp2 = true;
            		}
HXDLIN( 217)		if (!(_hx_tmp2)) {
HXDLIN( 217)			_hx_tmp1 = (index1 > this->_hx___children->length);
            		}
            		else {
HXDLIN( 217)			_hx_tmp1 = true;
            		}
HXDLIN( 217)		if (!(_hx_tmp1)) {
HXDLIN( 217)			_hx_tmp = (index2 > this->_hx___children->length);
            		}
            		else {
HXDLIN( 217)			_hx_tmp = true;
            		}
HXDLIN( 217)		if (_hx_tmp) {
HXDLIN( 217)			HX_STACK_DO_THROW( ::openfl::errors::RangeError_obj::__alloc( HX_CTX ,HX_("swapChildrenAt : index out of bounds",fd,03,a9,7f)));
            		}
HXDLIN( 217)		if ((index1 != index2)) {
HXDLIN( 217)			 ::openfl::_legacy::display::DisplayObject temp = this->_hx___children->__get(index1).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 217)			::Array< ::Dynamic> _hx_tmp3 = this->_hx___children;
HXDLIN( 217)			_hx_tmp3[index1] = this->_hx___children->__get(index2).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 217)			this->_hx___children[index2] = temp;
HXDLIN( 217)			::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_swap_children(this->_hx___handle,index1,index2);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,swapChildrenAt,(void))

void DisplayObjectContainer_obj::_hx___addChild( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_222___addChild)
HXLINE( 224)		if (hx::IsEq( child,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE( 226)			HX_STACK_DO_THROW(HX_("Adding to self",b2,fe,1c,cf));
            		}
HXLINE( 230)		if (hx::IsEq( child->_hx___parent,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE( 232)			this->setChildIndex(child,(this->_hx___children->length - (int)1));
            		}
            		else {
HXLINE( 236)			child->_hx___setParent(null());
HXLINE( 237)			this->_hx___children->push(child);
HXLINE( 238)			::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_add_child(this->_hx___handle,child->_hx___handle);
HXLINE( 239)			child->_hx___setParent(hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,_hx___addChild,(void))

void DisplayObjectContainer_obj::_hx___broadcast( ::openfl::_legacy::events::Event event){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_246___broadcast)
HXLINE( 248)		int i = (int)0;
HXLINE( 250)		if ((this->_hx___children->length > (int)0)) {
HXLINE( 252)			 ::openfl::_legacy::display::DisplayObject child;
HXLINE( 254)			while(true){
HXLINE( 256)				child = this->_hx___children->__get(i).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXLINE( 258)				if (hx::IsNotNull( child )) {
HXLINE( 260)					child->_hx___broadcast(event);
            				}
HXLINE( 264)				if ((i >= this->_hx___children->length)) {
HXLINE( 266)					goto _hx_goto_24;
            				}
HXLINE( 270)				if (hx::IsEq( this->_hx___children->__get(i).StaticCast<  ::openfl::_legacy::display::DisplayObject >(),child )) {
HXLINE( 272)					i = (i + (int)1);
HXLINE( 274)					if ((i >= this->_hx___children->length)) {
HXLINE( 276)						goto _hx_goto_24;
            					}
            				}
            			}
            			_hx_goto_24:;
            		}
HXLINE( 286)		this->super::_hx___broadcast(event);
            	}


bool DisplayObjectContainer_obj::_hx___contains( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_291___contains)
HXLINE( 293)		if (hx::IsNull( child )) {
HXLINE( 295)			return false;
            		}
HXLINE( 299)		if (hx::IsEq( hx::ObjectPtr<OBJ_>(this),child )) {
HXLINE( 301)			return true;
            		}
HXLINE( 305)		{
HXLINE( 305)			int _g = (int)0;
HXDLIN( 305)			::Array< ::Dynamic> _g1 = this->_hx___children;
HXDLIN( 305)			while((_g < _g1->length)){
HXLINE( 305)				 ::openfl::_legacy::display::DisplayObject c = _g1->__get(_g).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 305)				_g = (_g + (int)1);
HXLINE( 307)				bool _hx_tmp;
HXDLIN( 307)				if (hx::IsNotEq( c,child )) {
HXLINE( 307)					_hx_tmp = c->_hx___contains(child);
            				}
            				else {
HXLINE( 307)					_hx_tmp = true;
            				}
HXDLIN( 307)				if (_hx_tmp) {
HXLINE( 309)					return true;
            				}
            			}
            		}
HXLINE( 315)		return false;
            	}


 ::openfl::_legacy::display::DisplayObject DisplayObjectContainer_obj::_hx___findByID(int id){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_320___findByID)
HXLINE( 322)		if ((this->_hx___id == id)) {
HXLINE( 324)			return hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 328)		 ::openfl::_legacy::display::DisplayObject found;
HXLINE( 330)		{
HXLINE( 330)			int _g = (int)0;
HXDLIN( 330)			::Array< ::Dynamic> _g1 = this->_hx___children;
HXDLIN( 330)			while((_g < _g1->length)){
HXLINE( 330)				 ::openfl::_legacy::display::DisplayObject child = _g1->__get(_g).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 330)				_g = (_g + (int)1);
HXLINE( 332)				found = child->_hx___findByID(id);
HXLINE( 334)				if (hx::IsNotNull( found )) {
HXLINE( 336)					return found;
            				}
            			}
            		}
HXLINE( 342)		return this->super::_hx___findByID(id);
            	}


int DisplayObjectContainer_obj::_hx___getChildIndex( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_347___getChildIndex)
HXLINE( 349)		{
HXLINE( 349)			int _g1 = (int)0;
HXDLIN( 349)			int _g = this->_hx___children->length;
HXDLIN( 349)			while((_g1 < _g)){
HXLINE( 349)				_g1 = (_g1 + (int)1);
HXDLIN( 349)				int i = (_g1 - (int)1);
HXLINE( 351)				if (hx::IsEq( this->_hx___children->__get(i).StaticCast<  ::openfl::_legacy::display::DisplayObject >(),child )) {
HXLINE( 353)					return i;
            				}
            			}
            		}
HXLINE( 359)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,_hx___getChildIndex,return )

void DisplayObjectContainer_obj::_hx___getObjectsUnderPoint( ::openfl::_legacy::geom::Point point,::Array< ::Dynamic> result){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_364___getObjectsUnderPoint)
HXLINE( 366)		this->super::_hx___getObjectsUnderPoint(point,result);
HXLINE( 368)		{
HXLINE( 368)			int _g = (int)0;
HXDLIN( 368)			::Array< ::Dynamic> _g1 = this->_hx___children;
HXDLIN( 368)			while((_g < _g1->length)){
HXLINE( 368)				 ::openfl::_legacy::display::DisplayObject child = _g1->__get(_g).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 368)				_g = (_g + (int)1);
HXLINE( 370)				child->_hx___getObjectsUnderPoint(point,result);
            			}
            		}
            	}


void DisplayObjectContainer_obj::_hx___onAdded( ::openfl::_legacy::display::DisplayObject object,bool isOnStage){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_377___onAdded)
HXLINE( 379)		this->super::_hx___onAdded(object,isOnStage);
HXLINE( 381)		{
HXLINE( 381)			int _g = (int)0;
HXDLIN( 381)			::Array< ::Dynamic> _g1 = this->_hx___children;
HXDLIN( 381)			while((_g < _g1->length)){
HXLINE( 381)				 ::openfl::_legacy::display::DisplayObject child = _g1->__get(_g).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 381)				_g = (_g + (int)1);
HXLINE( 383)				child->_hx___onAdded(object,isOnStage);
            			}
            		}
            	}


void DisplayObjectContainer_obj::_hx___onRemoved( ::openfl::_legacy::display::DisplayObject object,bool wasOnStage){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_390___onRemoved)
HXLINE( 392)		this->super::_hx___onRemoved(object,wasOnStage);
HXLINE( 394)		{
HXLINE( 394)			int _g = (int)0;
HXDLIN( 394)			::Array< ::Dynamic> _g1 = this->_hx___children;
HXDLIN( 394)			while((_g < _g1->length)){
HXLINE( 394)				 ::openfl::_legacy::display::DisplayObject child = _g1->__get(_g).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 394)				_g = (_g + (int)1);
HXLINE( 396)				child->_hx___onRemoved(object,wasOnStage);
            			}
            		}
            	}


void DisplayObjectContainer_obj::_hx___removeChildFromArray( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_403___removeChildFromArray)
HXLINE( 405)		int i = this->_hx___getChildIndex(child);
HXLINE( 407)		if ((i >= (int)0)) {
HXLINE( 409)			::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_remove_child(this->_hx___handle,i);
HXLINE( 410)			this->_hx___children->removeRange(i,(int)1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,_hx___removeChildFromArray,(void))

void DisplayObjectContainer_obj::_hx___setChildIndex( ::openfl::_legacy::display::DisplayObject child,int index){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_417___setChildIndex)
HXLINE( 419)		if ((index > this->_hx___children->length)) {
HXLINE( 421)			HX_STACK_DO_THROW((HX_("Invalid index position ",80,59,50,86) + index));
            		}
HXLINE( 425)		int firstIndex = this->_hx___getChildIndex(child);
HXLINE( 427)		if ((firstIndex < (int)0)) {
HXLINE( 429)			::String msg = ((HX_("setChildIndex : object ",93,4a,81,b4) + child->toString()) + HX_(" not found.",39,f7,8e,4f));
HXLINE( 431)			if (hx::IsEq( child->_hx___parent,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE( 433)				int actualIndex = (int)-1;
HXLINE( 435)				{
HXLINE( 435)					int _g1 = (int)0;
HXDLIN( 435)					int _g = this->_hx___children->length;
HXDLIN( 435)					while((_g1 < _g)){
HXLINE( 435)						_g1 = (_g1 + (int)1);
HXDLIN( 435)						int i = (_g1 - (int)1);
HXLINE( 437)						if (hx::IsEq( this->_hx___children->__get(i).StaticCast<  ::openfl::_legacy::display::DisplayObject >(),child )) {
HXLINE( 439)							actualIndex = i;
HXLINE( 440)							goto _hx_goto_39;
            						}
            					}
            					_hx_goto_39:;
            				}
HXLINE( 446)				if ((actualIndex != (int)-1)) {
HXLINE( 448)					msg = (msg + (HX_("Internal error: Real child index was ",00,bf,50,8a) + ::Std_obj::string(actualIndex)));
            				}
            				else {
HXLINE( 452)					msg = (msg + HX_("Internal error: Child was not in __children array!",a1,b9,1b,be));
            				}
            			}
HXLINE( 458)			HX_STACK_DO_THROW(msg);
            		}
HXLINE( 462)		::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_set_child_index(this->_hx___handle,child->_hx___handle,index);
HXLINE( 464)		if ((index < firstIndex)) {
HXLINE( 466)			int i1 = firstIndex;
HXLINE( 468)			while((i1 > index)){
HXLINE( 470)				::Array< ::Dynamic> _hx_tmp = this->_hx___children;
HXDLIN( 470)				::Array< ::Dynamic> _hx_tmp1 = this->_hx___children;
HXDLIN( 470)				_hx_tmp[i1] = _hx_tmp1->__get((i1 - (int)1)).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXLINE( 471)				i1 = (i1 - (int)1);
            			}
HXLINE( 475)			this->_hx___children[index] = child;
            		}
            		else {
HXLINE( 477)			if ((firstIndex < index)) {
HXLINE( 479)				int i2 = firstIndex;
HXLINE( 481)				while((i2 < index)){
HXLINE( 483)					::Array< ::Dynamic> _hx_tmp2 = this->_hx___children;
HXDLIN( 483)					::Array< ::Dynamic> _hx_tmp3 = this->_hx___children;
HXDLIN( 483)					_hx_tmp2[i2] = _hx_tmp3->__get((i2 + (int)1)).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXLINE( 484)					i2 = (i2 + (int)1);
            				}
HXLINE( 488)				this->_hx___children[index] = child;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,_hx___setChildIndex,(void))

void DisplayObjectContainer_obj::_hx___swapChildrenAt(int index1,int index2){
            	HX_GC_STACKFRAME(&_hx_pos_99b047bdf7691dac_495___swapChildrenAt)
HXLINE( 497)		bool _hx_tmp;
HXDLIN( 497)		bool _hx_tmp1;
HXDLIN( 497)		bool _hx_tmp2;
HXDLIN( 497)		if ((index1 >= (int)0)) {
HXLINE( 497)			_hx_tmp2 = (index2 < (int)0);
            		}
            		else {
HXLINE( 497)			_hx_tmp2 = true;
            		}
HXDLIN( 497)		if (!(_hx_tmp2)) {
HXLINE( 497)			_hx_tmp1 = (index1 > this->_hx___children->length);
            		}
            		else {
HXLINE( 497)			_hx_tmp1 = true;
            		}
HXDLIN( 497)		if (!(_hx_tmp1)) {
HXLINE( 497)			_hx_tmp = (index2 > this->_hx___children->length);
            		}
            		else {
HXLINE( 497)			_hx_tmp = true;
            		}
HXDLIN( 497)		if (_hx_tmp) {
HXLINE( 499)			HX_STACK_DO_THROW( ::openfl::errors::RangeError_obj::__alloc( HX_CTX ,HX_("swapChildrenAt : index out of bounds",fd,03,a9,7f)));
            		}
HXLINE( 503)		if ((index1 != index2)) {
HXLINE( 505)			 ::openfl::_legacy::display::DisplayObject temp = this->_hx___children->__get(index1).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXLINE( 506)			::Array< ::Dynamic> _hx_tmp3 = this->_hx___children;
HXDLIN( 506)			_hx_tmp3[index1] = this->_hx___children->__get(index2).StaticCast<  ::openfl::_legacy::display::DisplayObject >();
HXLINE( 507)			this->_hx___children[index2] = temp;
HXLINE( 508)			::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_swap_children(this->_hx___handle,index1,index2);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObjectContainer_obj,_hx___swapChildrenAt,(void))

bool DisplayObjectContainer_obj::get_mouseChildren(){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_522_get_mouseChildren)
HXDLIN( 522)		return ( (bool)(::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_get_mouse_children(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObjectContainer_obj,get_mouseChildren,return )

bool DisplayObjectContainer_obj::set_mouseChildren(bool value){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_523_set_mouseChildren)
HXLINE( 525)		::openfl::_legacy::display::DisplayObjectContainer_obj::lime_doc_set_mouse_children(this->_hx___handle,value);
HXLINE( 526)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,set_mouseChildren,return )

int DisplayObjectContainer_obj::get_numChildren(){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_531_get_numChildren)
HXDLIN( 531)		return this->_hx___children->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObjectContainer_obj,get_numChildren,return )

bool DisplayObjectContainer_obj::get_tabChildren(){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_532_get_tabChildren)
HXDLIN( 532)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObjectContainer_obj,get_tabChildren,return )

bool DisplayObjectContainer_obj::set_tabChildren(bool value){
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_533_set_tabChildren)
HXDLIN( 533)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObjectContainer_obj,set_tabChildren,return )

 ::Dynamic DisplayObjectContainer_obj::lime_create_display_object_container;

 ::Dynamic DisplayObjectContainer_obj::lime_doc_add_child;

 ::Dynamic DisplayObjectContainer_obj::lime_doc_remove_child;

 ::Dynamic DisplayObjectContainer_obj::lime_doc_set_child_index;

 ::Dynamic DisplayObjectContainer_obj::lime_doc_get_mouse_children;

 ::Dynamic DisplayObjectContainer_obj::lime_doc_set_mouse_children;

 ::Dynamic DisplayObjectContainer_obj::lime_doc_swap_children;


hx::ObjectPtr< DisplayObjectContainer_obj > DisplayObjectContainer_obj::__new( ::Dynamic handle,::String type) {
	hx::ObjectPtr< DisplayObjectContainer_obj > __this = new DisplayObjectContainer_obj();
	__this->__construct(handle,type);
	return __this;
}

hx::ObjectPtr< DisplayObjectContainer_obj > DisplayObjectContainer_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic handle,::String type) {
	DisplayObjectContainer_obj *__this = (DisplayObjectContainer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DisplayObjectContainer_obj), true, "openfl._legacy.display.DisplayObjectContainer"));
	*(void **)__this = DisplayObjectContainer_obj::_hx_vtable;
	__this->__construct(handle,type);
	return __this;
}

DisplayObjectContainer_obj::DisplayObjectContainer_obj()
{
}

void DisplayObjectContainer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DisplayObjectContainer);
	HX_MARK_MEMBER_NAME(numChildren,"numChildren");
	HX_MARK_MEMBER_NAME(_hx___children,"__children");
	 ::openfl::_legacy::display::DisplayObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DisplayObjectContainer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(numChildren,"numChildren");
	HX_VISIT_MEMBER_NAME(_hx___children,"__children");
	 ::openfl::_legacy::display::DisplayObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val DisplayObjectContainer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"addChild") ) { return hx::Val( addChild_dyn() ); }
		if (HX_FIELD_EQ(inName,"contains") ) { return hx::Val( contains_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"__onAdded") ) { return hx::Val( _hx___onAdded_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"__children") ) { return hx::Val( _hx___children ); }
		if (HX_FIELD_EQ(inName,"addChildAt") ) { return hx::Val( addChildAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"getChildAt") ) { return hx::Val( getChildAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"__addChild") ) { return hx::Val( _hx___addChild_dyn() ); }
		if (HX_FIELD_EQ(inName,"__contains") ) { return hx::Val( _hx___contains_dyn() ); }
		if (HX_FIELD_EQ(inName,"__findByID") ) { return hx::Val( _hx___findByID_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"numChildren") ) { return hx::Val( inCallProp == hx::paccAlways ? get_numChildren() : numChildren ); }
		if (HX_FIELD_EQ(inName,"tabChildren") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_tabChildren() ); }
		if (HX_FIELD_EQ(inName,"removeChild") ) { return hx::Val( removeChild_dyn() ); }
		if (HX_FIELD_EQ(inName,"__broadcast") ) { return hx::Val( _hx___broadcast_dyn() ); }
		if (HX_FIELD_EQ(inName,"__onRemoved") ) { return hx::Val( _hx___onRemoved_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"swapChildren") ) { return hx::Val( swapChildren_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mouseChildren") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_mouseChildren() ); }
		if (HX_FIELD_EQ(inName,"getChildIndex") ) { return hx::Val( getChildIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeChildAt") ) { return hx::Val( removeChildAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"setChildIndex") ) { return hx::Val( setChildIndex_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getChildByName") ) { return hx::Val( getChildByName_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeChildren") ) { return hx::Val( removeChildren_dyn() ); }
		if (HX_FIELD_EQ(inName,"swapChildrenAt") ) { return hx::Val( swapChildrenAt_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__getChildIndex") ) { return hx::Val( _hx___getChildIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"__setChildIndex") ) { return hx::Val( _hx___setChildIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_numChildren") ) { return hx::Val( get_numChildren_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_tabChildren") ) { return hx::Val( get_tabChildren_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_tabChildren") ) { return hx::Val( set_tabChildren_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__swapChildrenAt") ) { return hx::Val( _hx___swapChildrenAt_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_mouseChildren") ) { return hx::Val( get_mouseChildren_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_mouseChildren") ) { return hx::Val( set_mouseChildren_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"getObjectsUnderPoint") ) { return hx::Val( getObjectsUnderPoint_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"__getObjectsUnderPoint") ) { return hx::Val( _hx___getObjectsUnderPoint_dyn() ); }
		if (HX_FIELD_EQ(inName,"__removeChildFromArray") ) { return hx::Val( _hx___removeChildFromArray_dyn() ); }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"areInaccessibleObjectsUnderPoint") ) { return hx::Val( areInaccessibleObjectsUnderPoint_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool DisplayObjectContainer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 18:
		if (HX_FIELD_EQ(inName,"lime_doc_add_child") ) { outValue = ( lime_doc_add_child ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_doc_remove_child") ) { outValue = ( lime_doc_remove_child ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_doc_swap_children") ) { outValue = ( lime_doc_swap_children ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"lime_doc_set_child_index") ) { outValue = ( lime_doc_set_child_index ); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"lime_doc_get_mouse_children") ) { outValue = ( lime_doc_get_mouse_children ); return true; }
		if (HX_FIELD_EQ(inName,"lime_doc_set_mouse_children") ) { outValue = ( lime_doc_set_mouse_children ); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"lime_create_display_object_container") ) { outValue = ( lime_create_display_object_container ); return true; }
	}
	return false;
}

hx::Val DisplayObjectContainer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"__children") ) { _hx___children=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"numChildren") ) { numChildren=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tabChildren") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_tabChildren(inValue.Cast< bool >()) ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mouseChildren") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_mouseChildren(inValue.Cast< bool >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool DisplayObjectContainer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 18:
		if (HX_FIELD_EQ(inName,"lime_doc_add_child") ) { lime_doc_add_child=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_doc_remove_child") ) { lime_doc_remove_child=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_doc_swap_children") ) { lime_doc_swap_children=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"lime_doc_set_child_index") ) { lime_doc_set_child_index=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"lime_doc_get_mouse_children") ) { lime_doc_get_mouse_children=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_doc_set_mouse_children") ) { lime_doc_set_mouse_children=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"lime_create_display_object_container") ) { lime_create_display_object_container=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void DisplayObjectContainer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("mouseChildren","\x84","\x18","\x6b","\xff"));
	outFields->push(HX_HCSTRING("numChildren","\xa5","\x69","\x80","\x5c"));
	outFields->push(HX_HCSTRING("tabChildren","\xb4","\x0c","\x86","\x4b"));
	outFields->push(HX_HCSTRING("__children","\x5f","\x8c","\xa2","\x13"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DisplayObjectContainer_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(DisplayObjectContainer_obj,numChildren),HX_HCSTRING("numChildren","\xa5","\x69","\x80","\x5c")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DisplayObjectContainer_obj,_hx___children),HX_HCSTRING("__children","\x5f","\x8c","\xa2","\x13")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo DisplayObjectContainer_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_create_display_object_container,HX_HCSTRING("lime_create_display_object_container","\xd7","\xb4","\x24","\x09")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_doc_add_child,HX_HCSTRING("lime_doc_add_child","\x0d","\x98","\x4b","\x05")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_doc_remove_child,HX_HCSTRING("lime_doc_remove_child","\x32","\xcd","\xaa","\x03")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_doc_set_child_index,HX_HCSTRING("lime_doc_set_child_index","\x21","\xe9","\x06","\xbd")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_doc_get_mouse_children,HX_HCSTRING("lime_doc_get_mouse_children","\x73","\xc6","\xf8","\x6e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_doc_set_mouse_children,HX_HCSTRING("lime_doc_set_mouse_children","\xe7","\xf8","\xa7","\x4b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObjectContainer_obj::lime_doc_swap_children,HX_HCSTRING("lime_doc_swap_children","\x7a","\x35","\x7d","\x8d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String DisplayObjectContainer_obj_sMemberFields[] = {
	HX_HCSTRING("numChildren","\xa5","\x69","\x80","\x5c"),
	HX_HCSTRING("__children","\x5f","\x8c","\xa2","\x13"),
	HX_HCSTRING("addChild","\xbb","\xcf","\x16","\xbf"),
	HX_HCSTRING("addChildAt","\x8e","\xad","\x36","\xce"),
	HX_HCSTRING("areInaccessibleObjectsUnderPoint","\x3d","\x22","\x9b","\x1e"),
	HX_HCSTRING("contains","\x1f","\x5a","\x7b","\x2c"),
	HX_HCSTRING("getChildAt","\xb9","\x07","\x0e","\xb6"),
	HX_HCSTRING("getChildByName","\x88","\xb9","\x73","\xa3"),
	HX_HCSTRING("getChildIndex","\x0c","\x68","\x02","\xb9"),
	HX_HCSTRING("getObjectsUnderPoint","\x96","\x10","\xd5","\x80"),
	HX_HCSTRING("removeChild","\xb8","\x86","\xed","\x43"),
	HX_HCSTRING("removeChildAt","\xcb","\xdd","\x66","\x3f"),
	HX_HCSTRING("removeChildren","\xa3","\x55","\xc0","\x3a"),
	HX_HCSTRING("setChildIndex","\x18","\x4a","\x08","\xfe"),
	HX_HCSTRING("swapChildren","\xf2","\x4a","\x53","\xe0"),
	HX_HCSTRING("swapChildrenAt","\x85","\xa4","\xf1","\x13"),
	HX_HCSTRING("__addChild","\xdb","\x42","\x4f","\x62"),
	HX_HCSTRING("__broadcast","\xe1","\xeb","\x45","\x0d"),
	HX_HCSTRING("__contains","\x3f","\xcd","\xb3","\xcf"),
	HX_HCSTRING("__findByID","\x6b","\x79","\xef","\x36"),
	HX_HCSTRING("__getChildIndex","\xec","\xa0","\xb4","\x40"),
	HX_HCSTRING("__getObjectsUnderPoint","\xb6","\xb3","\x7d","\x48"),
	HX_HCSTRING("__onAdded","\x01","\xc4","\xcf","\x33"),
	HX_HCSTRING("__onRemoved","\x21","\x21","\xd7","\xf8"),
	HX_HCSTRING("__removeChildFromArray","\x17","\xbd","\x4b","\xca"),
	HX_HCSTRING("__setChildIndex","\xf8","\x82","\xba","\x85"),
	HX_HCSTRING("__swapChildrenAt","\xa5","\x2f","\x31","\x48"),
	HX_HCSTRING("get_mouseChildren","\xdb","\x23","\xdb","\x05"),
	HX_HCSTRING("set_mouseChildren","\xe7","\xfb","\x48","\x29"),
	HX_HCSTRING("get_numChildren","\x3c","\x21","\x62","\x1d"),
	HX_HCSTRING("get_tabChildren","\x4b","\xc4","\x67","\x0c"),
	HX_HCSTRING("set_tabChildren","\x57","\x41","\x33","\x08"),
	::String(null()) };

static void DisplayObjectContainer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_create_display_object_container,"lime_create_display_object_container");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_add_child,"lime_doc_add_child");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_remove_child,"lime_doc_remove_child");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_set_child_index,"lime_doc_set_child_index");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_get_mouse_children,"lime_doc_get_mouse_children");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_set_mouse_children,"lime_doc_set_mouse_children");
	HX_MARK_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_swap_children,"lime_doc_swap_children");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DisplayObjectContainer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_create_display_object_container,"lime_create_display_object_container");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_add_child,"lime_doc_add_child");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_remove_child,"lime_doc_remove_child");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_set_child_index,"lime_doc_set_child_index");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_get_mouse_children,"lime_doc_get_mouse_children");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_set_mouse_children,"lime_doc_set_mouse_children");
	HX_VISIT_MEMBER_NAME(DisplayObjectContainer_obj::lime_doc_swap_children,"lime_doc_swap_children");
};

#endif

hx::Class DisplayObjectContainer_obj::__mClass;

static ::String DisplayObjectContainer_obj_sStaticFields[] = {
	HX_HCSTRING("lime_create_display_object_container","\xd7","\xb4","\x24","\x09"),
	HX_HCSTRING("lime_doc_add_child","\x0d","\x98","\x4b","\x05"),
	HX_HCSTRING("lime_doc_remove_child","\x32","\xcd","\xaa","\x03"),
	HX_HCSTRING("lime_doc_set_child_index","\x21","\xe9","\x06","\xbd"),
	HX_HCSTRING("lime_doc_get_mouse_children","\x73","\xc6","\xf8","\x6e"),
	HX_HCSTRING("lime_doc_set_mouse_children","\xe7","\xf8","\xa7","\x4b"),
	HX_HCSTRING("lime_doc_swap_children","\x7a","\x35","\x7d","\x8d"),
	::String(null())
};

void DisplayObjectContainer_obj::__register()
{
	hx::Object *dummy = new DisplayObjectContainer_obj;
	DisplayObjectContainer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.display.DisplayObjectContainer","\x10","\xda","\xf5","\xf5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DisplayObjectContainer_obj::__GetStatic;
	__mClass->mSetStaticField = &DisplayObjectContainer_obj::__SetStatic;
	__mClass->mMarkFunc = DisplayObjectContainer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DisplayObjectContainer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DisplayObjectContainer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DisplayObjectContainer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DisplayObjectContainer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DisplayObjectContainer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DisplayObjectContainer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DisplayObjectContainer_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_543_boot)
HXDLIN( 543)		lime_create_display_object_container = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_create_display_object_container",35,87,0a,79),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_544_boot)
HXDLIN( 544)		lime_doc_add_child = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_doc_add_child",eb,5a,41,09),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_545_boot)
HXDLIN( 545)		lime_doc_remove_child = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_doc_remove_child",14,a9,f7,f4),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_546_boot)
HXDLIN( 546)		lime_doc_set_child_index = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_doc_set_child_index",7f,26,57,fa),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_547_boot)
HXDLIN( 547)		lime_doc_get_mouse_children = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_doc_get_mouse_children",d5,b7,ce,f3),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_548_boot)
HXDLIN( 548)		lime_doc_set_mouse_children = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_doc_set_mouse_children",49,ea,7d,d0),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_99b047bdf7691dac_549_boot)
HXDLIN( 549)		lime_doc_swap_children = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_doc_swap_children",58,bf,70,bf),(int)3);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace display
