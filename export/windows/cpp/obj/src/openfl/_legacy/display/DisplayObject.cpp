// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_BlendMode
#include <openfl/_legacy/display/BlendMode.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Graphics
#include <openfl/_legacy/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_LoaderInfo
#include <openfl/_legacy/display/LoaderInfo.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_MovieClip
#include <openfl/_legacy/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Stage
#include <openfl/_legacy/display/Stage.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_Event
#include <openfl/_legacy/events/Event.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_filters_BitmapFilter
#include <openfl/_legacy/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_ColorTransform
#include <openfl/_legacy/geom/ColorTransform.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Matrix
#include <openfl/_legacy/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Point
#include <openfl/_legacy/geom/Point.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Rectangle
#include <openfl/_legacy/geom/Rectangle.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Transform
#include <openfl/_legacy/geom/Transform.h>
#endif
#ifndef INCLUDED_openfl__legacy_net_URLLoader
#include <openfl/_legacy/net/URLLoader.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f94de761dfec798e_56_new,"openfl._legacy.display.DisplayObject","new",0xb3f84263,"openfl._legacy.display.DisplayObject.new","openfl/_legacy/display/DisplayObject.hx",56,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_68_dispatchEvent,"openfl._legacy.display.DisplayObject","dispatchEvent",0x7d66fac3,"openfl._legacy.display.DisplayObject.dispatchEvent","openfl/_legacy/display/DisplayObject.hx",68,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_86_getBounds,"openfl._legacy.display.DisplayObject","getBounds",0xf4ba65ee,"openfl._legacy.display.DisplayObject.getBounds","openfl/_legacy/display/DisplayObject.hx",86,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_95_getRect,"openfl._legacy.display.DisplayObject","getRect",0xdc232c5d,"openfl._legacy.display.DisplayObject.getRect","openfl/_legacy/display/DisplayObject.hx",95,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_104_globalToLocal,"openfl._legacy.display.DisplayObject","globalToLocal",0x22b08290,"openfl._legacy.display.DisplayObject.globalToLocal","openfl/_legacy/display/DisplayObject.hx",104,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_113_hitTestObject,"openfl._legacy.display.DisplayObject","hitTestObject",0x8e6688a7,"openfl._legacy.display.DisplayObject.hitTestObject","openfl/_legacy/display/DisplayObject.hx",113,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_131_hitTestPoint,"openfl._legacy.display.DisplayObject","hitTestPoint",0x063e5f68,"openfl._legacy.display.DisplayObject.hitTestPoint","openfl/_legacy/display/DisplayObject.hx",131,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_136_localToGlobal,"openfl._legacy.display.DisplayObject","localToGlobal",0xfeed758c,"openfl._legacy.display.DisplayObject.localToGlobal","openfl/_legacy/display/DisplayObject.hx",136,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_147_toString,"openfl._legacy.display.DisplayObject","toString",0xb47f33c9,"openfl._legacy.display.DisplayObject.toString","openfl/_legacy/display/DisplayObject.hx",147,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_154___asInteractiveObject,"openfl._legacy.display.DisplayObject","__asInteractiveObject",0xad4ed092,"openfl._legacy.display.DisplayObject.__asInteractiveObject","openfl/_legacy/display/DisplayObject.hx",154,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_161___broadcast,"openfl._legacy.display.DisplayObject","__broadcast",0xfe8098e4,"openfl._legacy.display.DisplayObject.__broadcast","openfl/_legacy/display/DisplayObject.hx",161,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_168___contains,"openfl._legacy.display.DisplayObject","__contains",0xbaf8f19c,"openfl._legacy.display.DisplayObject.__contains","openfl/_legacy/display/DisplayObject.hx",168,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_173___dispatchEvent,"openfl._legacy.display.DisplayObject","__dispatchEvent",0x70dfea63,"openfl._legacy.display.DisplayObject.__dispatchEvent","openfl/_legacy/display/DisplayObject.hx",173,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_189___drawToSurface,"openfl._legacy.display.DisplayObject","__drawToSurface",0x967fd4b1,"openfl._legacy.display.DisplayObject.__drawToSurface","openfl/_legacy/display/DisplayObject.hx",189,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_194___findByID,"openfl._legacy.display.DisplayObject","__findByID",0x22349dc8,"openfl._legacy.display.DisplayObject.__findByID","openfl/_legacy/display/DisplayObject.hx",194,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_209___fireEvent,"openfl._legacy.display.DisplayObject","__fireEvent",0x90d42667,"openfl._legacy.display.DisplayObject.__fireEvent","openfl/_legacy/display/DisplayObject.hx",209,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_273___getColorTransform,"openfl._legacy.display.DisplayObject","__getColorTransform",0x2aa797a2,"openfl._legacy.display.DisplayObject.__getColorTransform","openfl/_legacy/display/DisplayObject.hx",273,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_282___getConcatenatedColorTransform,"openfl._legacy.display.DisplayObject","__getConcatenatedColorTransform",0x212eea91,"openfl._legacy.display.DisplayObject.__getConcatenatedColorTransform","openfl/_legacy/display/DisplayObject.hx",282,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_291___getConcatenatedMatrix,"openfl._legacy.display.DisplayObject","__getConcatenatedMatrix",0x09e90149,"openfl._legacy.display.DisplayObject.__getConcatenatedMatrix","openfl/_legacy/display/DisplayObject.hx",291,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_300___getInteractiveObjectStack,"openfl._legacy.display.DisplayObject","__getInteractiveObjectStack",0x448cc660,"openfl._legacy.display.DisplayObject.__getInteractiveObjectStack","openfl/_legacy/display/DisplayObject.hx",300,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_319___getMatrix,"openfl._legacy.display.DisplayObject","__getMatrix",0x5785b55a,"openfl._legacy.display.DisplayObject.__getMatrix","openfl/_legacy/display/DisplayObject.hx",319,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_330___getObjectsUnderPoint,"openfl._legacy.display.DisplayObject","__getObjectsUnderPoint",0xefd66f93,"openfl._legacy.display.DisplayObject.__getObjectsUnderPoint","openfl/_legacy/display/DisplayObject.hx",330,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_339___getPixelBounds,"openfl._legacy.display.DisplayObject","__getPixelBounds",0xe08c8fe2,"openfl._legacy.display.DisplayObject.__getPixelBounds","openfl/_legacy/display/DisplayObject.hx",339,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_348___onAdded,"openfl._legacy.display.DisplayObject","__onAdded",0x46161a44,"openfl._legacy.display.DisplayObject.__onAdded","openfl/_legacy/display/DisplayObject.hx",348,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_369___onRemoved,"openfl._legacy.display.DisplayObject","__onRemoved",0xea11ce24,"openfl._legacy.display.DisplayObject.__onRemoved","openfl/_legacy/display/DisplayObject.hx",369,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_392___setColorTransform,"openfl._legacy.display.DisplayObject","__setColorTransform",0x4e156fae,"openfl._legacy.display.DisplayObject.__setColorTransform","openfl/_legacy/display/DisplayObject.hx",392,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_399___setMatrix,"openfl._legacy.display.DisplayObject","__setMatrix",0x3ad6a166,"openfl._legacy.display.DisplayObject.__setMatrix","openfl/_legacy/display/DisplayObject.hx",399,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_404___setParent,"openfl._legacy.display.DisplayObject","__setParent",0x6c8c704f,"openfl._legacy.display.DisplayObject.__setParent","openfl/_legacy/display/DisplayObject.hx",404,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_439_get_alpha,"openfl._legacy.display.DisplayObject","get_alpha",0x778659f8,"openfl._legacy.display.DisplayObject.get_alpha","openfl/_legacy/display/DisplayObject.hx",439,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_440_set_alpha,"openfl._legacy.display.DisplayObject","set_alpha",0x5ad74604,"openfl._legacy.display.DisplayObject.set_alpha","openfl/_legacy/display/DisplayObject.hx",440,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_448_get_opaqueBackground,"openfl._legacy.display.DisplayObject","get_opaqueBackground",0xe47937d5,"openfl._legacy.display.DisplayObject.get_opaqueBackground","openfl/_legacy/display/DisplayObject.hx",448,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_463_set_opaqueBackground,"openfl._legacy.display.DisplayObject","set_opaqueBackground",0xb130ef49,"openfl._legacy.display.DisplayObject.set_opaqueBackground","openfl/_legacy/display/DisplayObject.hx",463,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_480_get_blendMode,"openfl._legacy.display.DisplayObject","get_blendMode",0x849debee,"openfl._legacy.display.DisplayObject.get_blendMode","openfl/_legacy/display/DisplayObject.hx",480,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_488_set_blendMode,"openfl._legacy.display.DisplayObject","set_blendMode",0xc9a3cdfa,"openfl._legacy.display.DisplayObject.set_blendMode","openfl/_legacy/display/DisplayObject.hx",488,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_496_get_cacheAsBitmap,"openfl._legacy.display.DisplayObject","get_cacheAsBitmap",0x873a5f7d,"openfl._legacy.display.DisplayObject.get_cacheAsBitmap","openfl/_legacy/display/DisplayObject.hx",496,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_497_set_cacheAsBitmap,"openfl._legacy.display.DisplayObject","set_cacheAsBitmap",0xaaa83789,"openfl._legacy.display.DisplayObject.set_cacheAsBitmap","openfl/_legacy/display/DisplayObject.hx",497,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_505_get_pedanticBitmapCaching,"openfl._legacy.display.DisplayObject","get_pedanticBitmapCaching",0xcac04bb8,"openfl._legacy.display.DisplayObject.get_pedanticBitmapCaching","openfl/_legacy/display/DisplayObject.hx",505,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_506_set_pedanticBitmapCaching,"openfl._legacy.display.DisplayObject","set_pedanticBitmapCaching",0x37170fc4,"openfl._legacy.display.DisplayObject.set_pedanticBitmapCaching","openfl/_legacy/display/DisplayObject.hx",506,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_514_get_filters,"openfl._legacy.display.DisplayObject","get_filters",0x807baed5,"openfl._legacy.display.DisplayObject.get_filters","openfl/_legacy/display/DisplayObject.hx",514,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_530_set_filters,"openfl._legacy.display.DisplayObject","set_filters",0x8ae8b5e1,"openfl._legacy.display.DisplayObject.set_filters","openfl/_legacy/display/DisplayObject.hx",530,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_558_get_graphics,"openfl._legacy.display.DisplayObject","get_graphics",0xe99e6271,"openfl._legacy.display.DisplayObject.get_graphics","openfl/_legacy/display/DisplayObject.hx",558,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_571_get_height,"openfl._legacy.display.DisplayObject","get_height",0xde189c0d,"openfl._legacy.display.DisplayObject.get_height","openfl/_legacy/display/DisplayObject.hx",571,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_572_set_height,"openfl._legacy.display.DisplayObject","set_height",0xe1963a81,"openfl._legacy.display.DisplayObject.set_height","openfl/_legacy/display/DisplayObject.hx",572,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_580_set_mask,"openfl._legacy.display.DisplayObject","set_mask",0xf27eb906,"openfl._legacy.display.DisplayObject.set_mask","openfl/_legacy/display/DisplayObject.hx",580,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_589_get_mouseX,"openfl._legacy.display.DisplayObject","get_mouseX",0xa7dadeb9,"openfl._legacy.display.DisplayObject.get_mouseX","openfl/_legacy/display/DisplayObject.hx",589,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_590_get_mouseY,"openfl._legacy.display.DisplayObject","get_mouseY",0xa7dadeba,"openfl._legacy.display.DisplayObject.get_mouseY","openfl/_legacy/display/DisplayObject.hx",590,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_593_get_name,"openfl._legacy.display.DisplayObject","get_name",0x44ca90f1,"openfl._legacy.display.DisplayObject.get_name","openfl/_legacy/display/DisplayObject.hx",593,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_594_set_name,"openfl._legacy.display.DisplayObject","set_name",0xf327ea65,"openfl._legacy.display.DisplayObject.set_name","openfl/_legacy/display/DisplayObject.hx",594,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_602_get_parent,"openfl._legacy.display.DisplayObject","get_parent",0xc94a9950,"openfl._legacy.display.DisplayObject.get_parent","openfl/_legacy/display/DisplayObject.hx",602,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_605_get_root,"openfl._legacy.display.DisplayObject","get_root",0x477a0cc8,"openfl._legacy.display.DisplayObject.get_root","openfl/_legacy/display/DisplayObject.hx",605,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_618_get_rotation,"openfl._legacy.display.DisplayObject","get_rotation",0xdfbca6e4,"openfl._legacy.display.DisplayObject.get_rotation","openfl/_legacy/display/DisplayObject.hx",618,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_619_set_rotation,"openfl._legacy.display.DisplayObject","set_rotation",0xf4b5ca58,"openfl._legacy.display.DisplayObject.set_rotation","openfl/_legacy/display/DisplayObject.hx",619,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_627_get_scale9Grid,"openfl._legacy.display.DisplayObject","get_scale9Grid",0x7002effb,"openfl._legacy.display.DisplayObject.get_scale9Grid","openfl/_legacy/display/DisplayObject.hx",627,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_628_set_scale9Grid,"openfl._legacy.display.DisplayObject","set_scale9Grid",0x9022d86f,"openfl._legacy.display.DisplayObject.set_scale9Grid","openfl/_legacy/display/DisplayObject.hx",628,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_637_get_scaleX,"openfl._legacy.display.DisplayObject","get_scaleX",0x17f27eb4,"openfl._legacy.display.DisplayObject.get_scaleX","openfl/_legacy/display/DisplayObject.hx",637,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_638_set_scaleX,"openfl._legacy.display.DisplayObject","set_scaleX",0x1b701d28,"openfl._legacy.display.DisplayObject.set_scaleX","openfl/_legacy/display/DisplayObject.hx",638,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_646_get_scaleY,"openfl._legacy.display.DisplayObject","get_scaleY",0x17f27eb5,"openfl._legacy.display.DisplayObject.get_scaleY","openfl/_legacy/display/DisplayObject.hx",646,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_647_set_scaleY,"openfl._legacy.display.DisplayObject","set_scaleY",0x1b701d29,"openfl._legacy.display.DisplayObject.set_scaleY","openfl/_legacy/display/DisplayObject.hx",647,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_655_get_scrollRect,"openfl._legacy.display.DisplayObject","get_scrollRect",0xea477af7,"openfl._legacy.display.DisplayObject.get_scrollRect","openfl/_legacy/display/DisplayObject.hx",655,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_656_set_scrollRect,"openfl._legacy.display.DisplayObject","set_scrollRect",0x0a67636b,"openfl._legacy.display.DisplayObject.set_scrollRect","openfl/_legacy/display/DisplayObject.hx",656,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_665_get_stage,"openfl._legacy.display.DisplayObject","get_stage",0xd9fb1d58,"openfl._legacy.display.DisplayObject.get_stage","openfl/_legacy/display/DisplayObject.hx",665,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_678_get_transform,"openfl._legacy.display.DisplayObject","get_transform",0xbdf93506,"openfl._legacy.display.DisplayObject.get_transform","openfl/_legacy/display/DisplayObject.hx",678,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_679_set_transform,"openfl._legacy.display.DisplayObject","set_transform",0x02ff1712,"openfl._legacy.display.DisplayObject.set_transform","openfl/_legacy/display/DisplayObject.hx",679,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_688_get_visible,"openfl._legacy.display.DisplayObject","get_visible",0x1a59858c,"openfl._legacy.display.DisplayObject.get_visible","openfl/_legacy/display/DisplayObject.hx",688,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_689_set_visible,"openfl._legacy.display.DisplayObject","set_visible",0x24c68c98,"openfl._legacy.display.DisplayObject.set_visible","openfl/_legacy/display/DisplayObject.hx",689,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_697_get_width,"openfl._legacy.display.DisplayObject","get_width",0x205268a0,"openfl._legacy.display.DisplayObject.get_width","openfl/_legacy/display/DisplayObject.hx",697,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_698_set_width,"openfl._legacy.display.DisplayObject","set_width",0x03a354ac,"openfl._legacy.display.DisplayObject.set_width","openfl/_legacy/display/DisplayObject.hx",698,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_706_get_x,"openfl._legacy.display.DisplayObject","get_x",0xcc87de12,"openfl._legacy.display.DisplayObject.get_x","openfl/_legacy/display/DisplayObject.hx",706,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_707_set_x,"openfl._legacy.display.DisplayObject","set_x",0xb556d41e,"openfl._legacy.display.DisplayObject.set_x","openfl/_legacy/display/DisplayObject.hx",707,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_715_get_y,"openfl._legacy.display.DisplayObject","get_y",0xcc87de13,"openfl._legacy.display.DisplayObject.get_y","openfl/_legacy/display/DisplayObject.hx",715,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_716_set_y,"openfl._legacy.display.DisplayObject","set_y",0xb556d41f,"openfl._legacy.display.DisplayObject.set_y","openfl/_legacy/display/DisplayObject.hx",716,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_724_get_z,"openfl._legacy.display.DisplayObject","get_z",0xcc87de14,"openfl._legacy.display.DisplayObject.get_z","openfl/_legacy/display/DisplayObject.hx",724,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_725_set_z,"openfl._legacy.display.DisplayObject","set_z",0xb556d420,"openfl._legacy.display.DisplayObject.set_z","openfl/_legacy/display/DisplayObject.hx",725,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_740_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",740,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_741_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",741,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_742_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",742,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_743_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",743,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_744_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",744,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_745_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",745,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_746_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",746,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_747_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",747,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_748_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",748,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_749_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",749,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_750_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",750,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_751_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",751,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_752_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",752,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_753_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",753,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_754_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",754,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_755_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",755,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_756_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",756,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_757_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",757,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_758_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",758,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_759_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",759,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_760_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",760,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_761_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",761,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_762_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",762,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_763_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",763,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_764_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",764,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_765_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",765,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_766_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",766,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_767_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",767,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_768_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",768,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_769_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",769,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_770_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",770,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_771_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",771,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_772_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",772,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_773_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",773,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_774_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",774,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_775_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",775,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_776_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",776,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_777_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",777,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_778_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",778,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_779_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",779,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_780_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",780,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_781_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",781,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_782_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",782,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_783_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",783,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_784_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",784,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_785_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",785,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_786_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",786,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_787_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",787,0x32220b70)
HX_LOCAL_STACK_FRAME(_hx_pos_f94de761dfec798e_788_boot,"openfl._legacy.display.DisplayObject","boot",0xbd5ad4cf,"openfl._legacy.display.DisplayObject.boot","openfl/_legacy/display/DisplayObject.hx",788,0x32220b70)
namespace openfl{
namespace _legacy{
namespace display{

void DisplayObject_obj::__construct( ::Dynamic handle,::String type){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_56_new)
HXLINE(  58)		super::__construct(hx::ObjectPtr<OBJ_>(this));
HXLINE(  60)		this->_hx___parent = null();
HXLINE(  61)		this->_hx___handle = handle;
HXLINE(  62)		this->_hx___id = ( (int)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_id(this->_hx___handle)) );
HXLINE(  63)		this->set_name(((type + HX_(" ",20,00,00,00)) + this->_hx___id));
            	}

Dynamic DisplayObject_obj::__CreateEmpty() { return new DisplayObject_obj; }

void *DisplayObject_obj::_hx_vtable = 0;

Dynamic DisplayObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DisplayObject_obj > _hx_result = new DisplayObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool DisplayObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25b00754) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x25b00754;
	} else {
		return inClassId==(int)0x3d2d7617;
	}
}

static ::openfl::_legacy::display::IBitmapDrawable_obj _hx_openfl__legacy_display_DisplayObject__hx_openfl__legacy_display_IBitmapDrawable= {
	( void (hx::Object::*)( ::Dynamic, ::openfl::_legacy::geom::Matrix, ::openfl::_legacy::geom::ColorTransform,::String, ::openfl::_legacy::geom::Rectangle,bool))&::openfl::_legacy::display::DisplayObject_obj::_hx___drawToSurface,
};

void *DisplayObject_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x87325dec: return &_hx_openfl__legacy_display_DisplayObject__hx_openfl__legacy_display_IBitmapDrawable;
	}
	return super::_hx_getInterface(inHash);
}

bool DisplayObject_obj::dispatchEvent( ::openfl::_legacy::events::Event event){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_68_dispatchEvent)
HXLINE(  70)		bool result = this->_hx___dispatchEvent(event);
HXLINE(  72)		if (event->_hx___getIsCancelled()) {
HXLINE(  73)			return true;
            		}
HXLINE(  75)		bool _hx_tmp;
HXDLIN(  75)		bool _hx_tmp1;
HXDLIN(  75)		if (event->get_bubbles()) {
HXLINE(  75)			_hx_tmp1 = hx::IsNotNull( this->get_parent() );
            		}
            		else {
HXLINE(  75)			_hx_tmp1 = false;
            		}
HXDLIN(  75)		if (_hx_tmp1) {
HXLINE(  75)			_hx_tmp = hx::IsNotEq( this->get_parent(),hx::ObjectPtr<OBJ_>(this) );
            		}
            		else {
HXLINE(  75)			_hx_tmp = false;
            		}
HXDLIN(  75)		if (_hx_tmp) {
HXLINE(  77)			this->get_parent()->dispatchEvent(event);
            		}
HXLINE(  81)		return result;
            	}


 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::getBounds( ::openfl::_legacy::display::DisplayObject targetCoordinateSpace){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_86_getBounds)
HXLINE(  88)		 ::openfl::_legacy::geom::Rectangle result =  ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE(  89)		 ::Dynamic _hx_tmp;
HXDLIN(  89)		if (hx::IsNotNull( targetCoordinateSpace )) {
HXLINE(  89)			_hx_tmp = targetCoordinateSpace->_hx___handle;
            		}
            		else {
HXLINE(  89)			_hx_tmp = null();
            		}
HXDLIN(  89)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_bounds(this->_hx___handle,_hx_tmp,result,true);
HXLINE(  90)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,getBounds,return )

 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::getRect( ::openfl::_legacy::display::DisplayObject targetCoordinateSpace){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_95_getRect)
HXLINE(  97)		 ::openfl::_legacy::geom::Rectangle result =  ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE(  98)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_bounds(this->_hx___handle,targetCoordinateSpace->_hx___handle,result,false);
HXLINE(  99)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,getRect,return )

 ::openfl::_legacy::geom::Point DisplayObject_obj::globalToLocal( ::openfl::_legacy::geom::Point point){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_104_globalToLocal)
HXLINE( 106)		 ::openfl::_legacy::geom::Point result = point->clone();
HXLINE( 107)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_global_to_local(this->_hx___handle,result);
HXLINE( 108)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,globalToLocal,return )

bool DisplayObject_obj::hitTestObject( ::openfl::_legacy::display::DisplayObject obj){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_113_hitTestObject)
HXLINE( 115)		bool _hx_tmp;
HXDLIN( 115)		bool _hx_tmp1;
HXDLIN( 115)		if (hx::IsNotNull( obj )) {
HXLINE( 115)			_hx_tmp1 = hx::IsNotNull( obj->get_parent() );
            		}
            		else {
HXLINE( 115)			_hx_tmp1 = false;
            		}
HXDLIN( 115)		if (_hx_tmp1) {
HXLINE( 115)			_hx_tmp = hx::IsNotNull( this->get_parent() );
            		}
            		else {
HXLINE( 115)			_hx_tmp = false;
            		}
HXDLIN( 115)		if (_hx_tmp) {
HXLINE( 117)			 ::openfl::_legacy::geom::Rectangle currentBounds = this->getBounds(hx::ObjectPtr<OBJ_>(this));
HXLINE( 118)			 ::openfl::_legacy::geom::Rectangle targetBounds = obj->getBounds(hx::ObjectPtr<OBJ_>(this));
HXLINE( 120)			return currentBounds->intersects(targetBounds);
            		}
HXLINE( 124)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,hitTestObject,return )

bool DisplayObject_obj::hitTestPoint(Float x,Float y,hx::Null< bool >  __o_shapeFlag){
bool shapeFlag = __o_shapeFlag.Default(false);
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_131_hitTestPoint)
HXDLIN( 131)		return ( (bool)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_hit_test_point(this->_hx___handle,x,y,shapeFlag,true)) );
            	}


HX_DEFINE_DYNAMIC_FUNC3(DisplayObject_obj,hitTestPoint,return )

 ::openfl::_legacy::geom::Point DisplayObject_obj::localToGlobal( ::openfl::_legacy::geom::Point point){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_136_localToGlobal)
HXLINE( 138)		 ::openfl::_legacy::geom::Point result = point->clone();
HXLINE( 139)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_local_to_global(this->_hx___handle,result);
HXLINE( 140)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,localToGlobal,return )

::String DisplayObject_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_147_toString)
HXDLIN( 147)		return this->get_name();
            	}


 ::openfl::_legacy::display::InteractiveObject DisplayObject_obj::_hx___asInteractiveObject(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_154___asInteractiveObject)
HXDLIN( 154)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,_hx___asInteractiveObject,return )

void DisplayObject_obj::_hx___broadcast( ::openfl::_legacy::events::Event event){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_161___broadcast)
HXDLIN( 161)		this->_hx___dispatchEvent(event);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___broadcast,(void))

bool DisplayObject_obj::_hx___contains( ::openfl::_legacy::display::DisplayObject child){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_168___contains)
HXDLIN( 168)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___contains,return )

bool DisplayObject_obj::_hx___dispatchEvent( ::openfl::_legacy::events::Event event){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_173___dispatchEvent)
HXLINE( 175)		if (hx::IsNull( event->get_target() )) {
HXLINE( 177)			event->set_target(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 181)		event->set_currentTarget(hx::ObjectPtr<OBJ_>(this));
HXLINE( 182)		return this->super::dispatchEvent(event);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___dispatchEvent,return )

void DisplayObject_obj::_hx___drawToSurface( ::Dynamic surface, ::openfl::_legacy::geom::Matrix matrix, ::openfl::_legacy::geom::ColorTransform colorTransform,::String blendMode, ::openfl::_legacy::geom::Rectangle clipRect,bool smoothing){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_189___drawToSurface)
HXDLIN( 189)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_draw_to_surface(this->_hx___handle,surface,matrix,colorTransform,blendMode,clipRect);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DisplayObject_obj,_hx___drawToSurface,(void))

 ::openfl::_legacy::display::DisplayObject DisplayObject_obj::_hx___findByID(int id){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_194___findByID)
HXLINE( 198)		if ((this->_hx___id == id)) {
HXLINE( 200)			return hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 204)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___findByID,return )

void DisplayObject_obj::_hx___fireEvent( ::openfl::_legacy::events::Event event){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_209___fireEvent)
HXLINE( 211)		::Array< ::Dynamic> stack = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 213)		if (hx::IsNotNull( this->_hx___parent )) {
HXLINE( 215)			this->_hx___parent->_hx___getInteractiveObjectStack(stack);
            		}
HXLINE( 219)		int length = stack->length;
HXLINE( 221)		if ((stack->length > (int)0)) {
HXLINE( 223)			event->_hx___setPhase((int)1);
HXLINE( 224)			event->set_target(hx::ObjectPtr<OBJ_>(this));
HXLINE( 225)			int i = (length - (int)1);
HXLINE( 227)			while((i >= (int)0)){
HXLINE( 229)				stack->__get(i).StaticCast<  ::openfl::_legacy::display::InteractiveObject >()->_hx___dispatchEvent(event);
HXLINE( 231)				if (event->_hx___getIsCancelled()) {
HXLINE( 233)					return;
            				}
HXLINE( 237)				i = (i - (int)1);
            			}
            		}
HXLINE( 243)		event->_hx___setPhase((int)2);
HXLINE( 244)		this->_hx___dispatchEvent(event);
HXLINE( 246)		if (event->_hx___getIsCancelled()) {
HXLINE( 248)			return;
            		}
HXLINE( 252)		if (event->get_bubbles()) {
HXLINE( 254)			event->_hx___setPhase((int)3);
HXLINE( 256)			{
HXLINE( 256)				int _g1 = (int)0;
HXDLIN( 256)				int _g = length;
HXDLIN( 256)				while((_g1 < _g)){
HXLINE( 256)					_g1 = (_g1 + (int)1);
HXDLIN( 256)					int i1 = (_g1 - (int)1);
HXLINE( 258)					stack->__get(i1).StaticCast<  ::openfl::_legacy::display::InteractiveObject >()->_hx___dispatchEvent(event);
HXLINE( 260)					if (event->_hx___getIsCancelled()) {
HXLINE( 262)						return;
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___fireEvent,(void))

 ::openfl::_legacy::geom::ColorTransform DisplayObject_obj::_hx___getColorTransform(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_273___getColorTransform)
HXLINE( 275)		 ::openfl::_legacy::geom::ColorTransform colorTransform =  ::openfl::_legacy::geom::ColorTransform_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null());
HXLINE( 276)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_color_transform(this->_hx___handle,colorTransform,false);
HXLINE( 277)		return colorTransform;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,_hx___getColorTransform,return )

 ::openfl::_legacy::geom::ColorTransform DisplayObject_obj::_hx___getConcatenatedColorTransform(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_282___getConcatenatedColorTransform)
HXLINE( 284)		 ::openfl::_legacy::geom::ColorTransform colorTransform =  ::openfl::_legacy::geom::ColorTransform_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null());
HXLINE( 285)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_color_transform(this->_hx___handle,colorTransform,true);
HXLINE( 286)		return colorTransform;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,_hx___getConcatenatedColorTransform,return )

 ::openfl::_legacy::geom::Matrix DisplayObject_obj::_hx___getConcatenatedMatrix(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_291___getConcatenatedMatrix)
HXLINE( 293)		 ::openfl::_legacy::geom::Matrix matrix =  ::openfl::_legacy::geom::Matrix_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE( 294)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_matrix(this->_hx___handle,matrix,true);
HXLINE( 295)		return matrix;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,_hx___getConcatenatedMatrix,return )

void DisplayObject_obj::_hx___getInteractiveObjectStack(::Array< ::Dynamic> stack){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_300___getInteractiveObjectStack)
HXLINE( 302)		 ::openfl::_legacy::display::InteractiveObject interactive = this->_hx___asInteractiveObject();
HXLINE( 304)		if (hx::IsNotNull( interactive )) {
HXLINE( 306)			stack->push(interactive);
            		}
HXLINE( 310)		if (hx::IsNotNull( this->_hx___parent )) {
HXLINE( 312)			this->_hx___parent->_hx___getInteractiveObjectStack(stack);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___getInteractiveObjectStack,(void))

 ::openfl::_legacy::geom::Matrix DisplayObject_obj::_hx___getMatrix(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_319___getMatrix)
HXLINE( 321)		 ::openfl::_legacy::geom::Matrix matrix =  ::openfl::_legacy::geom::Matrix_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE( 322)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_matrix(this->_hx___handle,matrix,false);
HXLINE( 323)		return matrix;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,_hx___getMatrix,return )

void DisplayObject_obj::_hx___getObjectsUnderPoint( ::openfl::_legacy::geom::Point point,::Array< ::Dynamic> result){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_330___getObjectsUnderPoint)
HXDLIN( 330)		if (( (bool)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_hit_test_point(this->_hx___handle,point->x,point->y,true,false)) )) {
HXLINE( 332)			result->push(hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObject_obj,_hx___getObjectsUnderPoint,(void))

 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::_hx___getPixelBounds(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_339___getPixelBounds)
HXLINE( 341)		 ::openfl::_legacy::geom::Rectangle bounds =  ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE( 342)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_pixel_bounds(this->_hx___handle,bounds);
HXLINE( 343)		return bounds;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,_hx___getPixelBounds,return )

void DisplayObject_obj::_hx___onAdded( ::openfl::_legacy::display::DisplayObject object,bool isOnStage){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_348___onAdded)
HXLINE( 350)		if (hx::IsEq( object,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE( 352)			 ::openfl::_legacy::events::Event event =  ::openfl::_legacy::events::Event_obj::__alloc( HX_CTX ,::openfl::_legacy::events::Event_obj::ADDED,true,false);
HXLINE( 353)			event->set_target(hx::ObjectPtr<OBJ_>(this));
HXLINE( 354)			this->dispatchEvent(event);
            		}
HXLINE( 358)		if (isOnStage) {
HXLINE( 360)			 ::openfl::_legacy::events::Event event1 =  ::openfl::_legacy::events::Event_obj::__alloc( HX_CTX ,::openfl::_legacy::events::Event_obj::ADDED_TO_STAGE,false,false);
HXLINE( 361)			event1->set_target(hx::ObjectPtr<OBJ_>(this));
HXLINE( 362)			this->dispatchEvent(event1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObject_obj,_hx___onAdded,(void))

void DisplayObject_obj::_hx___onRemoved( ::openfl::_legacy::display::DisplayObject object,bool wasOnStage){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_369___onRemoved)
HXLINE( 371)		if (hx::IsEq( object,hx::ObjectPtr<OBJ_>(this) )) {
HXLINE( 373)			 ::openfl::_legacy::events::Event event =  ::openfl::_legacy::events::Event_obj::__alloc( HX_CTX ,::openfl::_legacy::events::Event_obj::REMOVED,true,false);
HXLINE( 374)			event->set_target(hx::ObjectPtr<OBJ_>(this));
HXLINE( 375)			this->dispatchEvent(event);
            		}
HXLINE( 379)		if (wasOnStage) {
HXLINE( 381)			 ::openfl::_legacy::events::Event event1 =  ::openfl::_legacy::events::Event_obj::__alloc( HX_CTX ,::openfl::_legacy::events::Event_obj::REMOVED_FROM_STAGE,false,false);
HXLINE( 382)			event1->set_target(hx::ObjectPtr<OBJ_>(this));
HXLINE( 383)			this->dispatchEvent(event1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(DisplayObject_obj,_hx___onRemoved,(void))

void DisplayObject_obj::_hx___setColorTransform( ::openfl::_legacy::geom::ColorTransform colorTransform){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_392___setColorTransform)
HXDLIN( 392)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_color_transform(this->_hx___handle,colorTransform);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___setColorTransform,(void))

void DisplayObject_obj::_hx___setMatrix( ::openfl::_legacy::geom::Matrix matrix){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_399___setMatrix)
HXDLIN( 399)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_matrix(this->_hx___handle,matrix);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___setMatrix,(void))

 ::openfl::_legacy::display::DisplayObjectContainer DisplayObject_obj::_hx___setParent( ::openfl::_legacy::display::DisplayObjectContainer parent){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_404___setParent)
HXLINE( 406)		if (hx::IsEq( parent,this->_hx___parent )) {
HXLINE( 408)			return parent;
            		}
HXLINE( 412)		if (hx::IsNotNull( this->_hx___parent )) {
HXLINE( 414)			this->_hx___parent->_hx___removeChildFromArray(hx::ObjectPtr<OBJ_>(this));
HXLINE( 415)			this->_hx___onRemoved(hx::ObjectPtr<OBJ_>(this),hx::IsNotNull( this->get_stage() ));
            		}
HXLINE( 419)		this->_hx___parent = parent;
HXLINE( 421)		if (hx::IsNotNull( parent )) {
HXLINE( 423)			this->_hx___onAdded(hx::ObjectPtr<OBJ_>(this),hx::IsNotNull( this->get_stage() ));
            		}
HXLINE( 427)		return parent;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,_hx___setParent,return )

Float DisplayObject_obj::get_alpha(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_439_get_alpha)
HXDLIN( 439)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_alpha(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_alpha,return )

Float DisplayObject_obj::set_alpha(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_440_set_alpha)
HXLINE( 442)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_alpha(this->_hx___handle,value);
HXLINE( 443)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_alpha,return )

 ::Dynamic DisplayObject_obj::get_opaqueBackground(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_448_get_opaqueBackground)
HXLINE( 450)		int i = ( (int)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_bg(this->_hx___handle)) );
HXLINE( 452)		if ((((int)i & (int)(int)16777216) == (int)0)) {
HXLINE( 454)			return null();
            		}
HXLINE( 458)		return ((int)i & (int)(int)16777215);
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_opaqueBackground,return )

 ::Dynamic DisplayObject_obj::set_opaqueBackground( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_463_set_opaqueBackground)
HXLINE( 465)		if (hx::IsNull( value )) {
HXLINE( 467)			::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_bg(this->_hx___handle,(int)0);
            		}
            		else {
HXLINE( 471)			::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_bg(this->_hx___handle,value);
            		}
HXLINE( 475)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_opaqueBackground,return )

 ::openfl::_legacy::display::BlendMode DisplayObject_obj::get_blendMode(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_480_get_blendMode)
HXLINE( 482)		int i = ( (int)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_blend_mode(this->_hx___handle)) );
HXLINE( 483)		return ::Type_obj::createEnumIndex(hx::ClassOf< ::openfl::_legacy::display::BlendMode >(),i,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_blendMode,return )

 ::openfl::_legacy::display::BlendMode DisplayObject_obj::set_blendMode( ::openfl::_legacy::display::BlendMode value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_488_set_blendMode)
HXLINE( 490)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::display::DisplayObject >();
HXDLIN( 490)		 ::Dynamic _hx_tmp1 = this->_hx___handle;
HXDLIN( 490)		int _hx_tmp2 = _hx_getEnumValueIndex(value);
HXDLIN( 490)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_blend_mode(_hx_tmp1,_hx_tmp2);
HXLINE( 491)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_blendMode,return )

bool DisplayObject_obj::get_cacheAsBitmap(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_496_get_cacheAsBitmap)
HXDLIN( 496)		return ( (bool)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_cache_as_bitmap(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_cacheAsBitmap,return )

bool DisplayObject_obj::set_cacheAsBitmap(bool value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_497_set_cacheAsBitmap)
HXLINE( 499)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_cache_as_bitmap(this->_hx___handle,value);
HXLINE( 500)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_cacheAsBitmap,return )

bool DisplayObject_obj::get_pedanticBitmapCaching(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_505_get_pedanticBitmapCaching)
HXDLIN( 505)		return ( (bool)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_pedantic_bitmap_caching(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_pedanticBitmapCaching,return )

bool DisplayObject_obj::set_pedanticBitmapCaching(bool value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_506_set_pedanticBitmapCaching)
HXLINE( 508)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_pedantic_bitmap_caching(this->_hx___handle,value);
HXLINE( 509)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_pedanticBitmapCaching,return )

::Array< ::Dynamic> DisplayObject_obj::get_filters(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_514_get_filters)
HXLINE( 516)		if (hx::IsNull( this->_hx___filters )) {
HXLINE( 516)			return ::Array_obj< ::Dynamic>::__new(0);
            		}
HXLINE( 517)		::Array< ::Dynamic> result = ::Array_obj< ::Dynamic>::__new();
HXLINE( 519)		{
HXLINE( 519)			int _g = (int)0;
HXDLIN( 519)			::cpp::VirtualArray _g1 = this->_hx___filters;
HXDLIN( 519)			while((_g < _g1->get_length())){
HXLINE( 519)				 ::Dynamic filter = _g1->__get(_g);
HXDLIN( 519)				_g = (_g + (int)1);
HXLINE( 521)				result->push(filter->__Field(HX_("clone",5d,13,63,48),hx::paccDynamic)());
            			}
            		}
HXLINE( 525)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_filters,return )

::Array< ::Dynamic> DisplayObject_obj::set_filters(::cpp::VirtualArray value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_530_set_filters)
HXLINE( 532)		bool _hx_tmp;
HXDLIN( 532)		if (hx::IsNotNull( this->get_filters() )) {
HXLINE( 532)			_hx_tmp = hx::IsNull( value );
            		}
            		else {
HXLINE( 532)			_hx_tmp = true;
            		}
HXDLIN( 532)		if (_hx_tmp) {
HXLINE( 534)			this->_hx___filters = null();
            		}
            		else {
HXLINE( 538)			this->_hx___filters = ::Array_obj< ::Dynamic>::__new();
HXLINE( 540)			{
HXLINE( 540)				int _g = (int)0;
HXDLIN( 540)				while((_g < value->get_length())){
HXLINE( 540)					 ::Dynamic filter = value->__get(_g);
HXDLIN( 540)					_g = (_g + (int)1);
HXLINE( 542)					if (hx::IsNotNull( filter )) {
HXLINE( 544)						::cpp::VirtualArray _hx_tmp1 = this->_hx___filters;
HXDLIN( 544)						_hx_tmp1->push(( ( ::openfl::_legacy::filters::BitmapFilter)(filter) )->clone());
            					}
            				}
            			}
            		}
HXLINE( 552)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_filters(this->_hx___handle,this->_hx___filters);
HXLINE( 553)		return this->get_filters();
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_filters,return )

 ::openfl::_legacy::display::Graphics DisplayObject_obj::get_graphics(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_558_get_graphics)
HXLINE( 560)		if (hx::IsNull( this->_hx___graphicsCache )) {
HXLINE( 562)			this->_hx___graphicsCache =  ::openfl::_legacy::display::Graphics_obj::__alloc( HX_CTX ,::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_graphics(this->_hx___handle));
            		}
HXLINE( 566)		return this->_hx___graphicsCache;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_graphics,return )

Float DisplayObject_obj::get_height(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_571_get_height)
HXDLIN( 571)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_height(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_height,return )

Float DisplayObject_obj::set_height(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_572_set_height)
HXLINE( 574)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_height(this->_hx___handle,value);
HXLINE( 575)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_height,return )

 ::openfl::_legacy::display::DisplayObject DisplayObject_obj::set_mask( ::openfl::_legacy::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_580_set_mask)
HXLINE( 582)		this->mask = value;
HXLINE( 583)		 ::Dynamic _hx_tmp;
HXDLIN( 583)		if (hx::IsNull( value )) {
HXLINE( 583)			_hx_tmp = null();
            		}
            		else {
HXLINE( 583)			_hx_tmp = value->_hx___handle;
            		}
HXDLIN( 583)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_mask(this->_hx___handle,_hx_tmp);
HXLINE( 584)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_mask,return )

Float DisplayObject_obj::get_mouseX(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_589_get_mouseX)
HXDLIN( 589)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_mouse_x(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_mouseX,return )

Float DisplayObject_obj::get_mouseY(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_590_get_mouseY)
HXDLIN( 590)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_mouse_y(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_mouseY,return )

::String DisplayObject_obj::get_name(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_593_get_name)
HXDLIN( 593)		return ( (::String)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_name(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_name,return )

::String DisplayObject_obj::set_name(::String value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_594_set_name)
HXLINE( 596)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_name(this->_hx___handle,value);
HXLINE( 597)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_name,return )

 ::openfl::_legacy::display::DisplayObjectContainer DisplayObject_obj::get_parent(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_602_get_parent)
HXDLIN( 602)		return this->_hx___parent;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_parent,return )

 ::openfl::_legacy::display::DisplayObject DisplayObject_obj::get_root(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_605_get_root)
HXLINE( 607)		if (hx::IsNotNull( this->get_stage() )) {
HXLINE( 609)			return ::openfl::_legacy::Lib_obj::get_current();
            		}
HXLINE( 613)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_root,return )

Float DisplayObject_obj::get_rotation(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_618_get_rotation)
HXDLIN( 618)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_rotation(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_rotation,return )

Float DisplayObject_obj::set_rotation(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_619_set_rotation)
HXLINE( 621)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_rotation(this->_hx___handle,value);
HXLINE( 622)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_rotation,return )

 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::get_scale9Grid(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_627_get_scale9Grid)
HXDLIN( 627)		if (hx::IsNull( this->_hx___scale9Grid )) {
HXDLIN( 627)			return null();
            		}
            		else {
HXDLIN( 627)			return this->_hx___scale9Grid->clone();
            		}
HXDLIN( 627)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_scale9Grid,return )

 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::set_scale9Grid( ::openfl::_legacy::geom::Rectangle value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_628_set_scale9Grid)
HXLINE( 630)		 ::openfl::_legacy::geom::Rectangle _hx_tmp;
HXDLIN( 630)		if (hx::IsNull( value )) {
HXLINE( 630)			_hx_tmp = null();
            		}
            		else {
HXLINE( 630)			_hx_tmp = value->clone();
            		}
HXDLIN( 630)		this->_hx___scale9Grid = _hx_tmp;
HXLINE( 631)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_scale9_grid(this->_hx___handle,this->_hx___scale9Grid);
HXLINE( 632)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_scale9Grid,return )

Float DisplayObject_obj::get_scaleX(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_637_get_scaleX)
HXDLIN( 637)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_scale_x(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_scaleX,return )

Float DisplayObject_obj::set_scaleX(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_638_set_scaleX)
HXLINE( 640)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_scale_x(this->_hx___handle,value);
HXLINE( 641)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_scaleX,return )

Float DisplayObject_obj::get_scaleY(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_646_get_scaleY)
HXDLIN( 646)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_scale_y(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_scaleY,return )

Float DisplayObject_obj::set_scaleY(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_647_set_scaleY)
HXLINE( 649)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_scale_y(this->_hx___handle,value);
HXLINE( 650)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_scaleY,return )

 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::get_scrollRect(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_655_get_scrollRect)
HXDLIN( 655)		if (hx::IsNull( this->_hx___scrollRect )) {
HXDLIN( 655)			return null();
            		}
            		else {
HXDLIN( 655)			return this->_hx___scrollRect->clone();
            		}
HXDLIN( 655)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_scrollRect,return )

 ::openfl::_legacy::geom::Rectangle DisplayObject_obj::set_scrollRect( ::openfl::_legacy::geom::Rectangle value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_656_set_scrollRect)
HXLINE( 658)		 ::openfl::_legacy::geom::Rectangle _hx_tmp;
HXDLIN( 658)		if (hx::IsNull( value )) {
HXLINE( 658)			_hx_tmp = null();
            		}
            		else {
HXLINE( 658)			_hx_tmp = value->clone();
            		}
HXDLIN( 658)		this->_hx___scrollRect = _hx_tmp;
HXLINE( 659)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_scroll_rect(this->_hx___handle,this->_hx___scrollRect);
HXLINE( 660)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_scrollRect,return )

 ::openfl::_legacy::display::Stage DisplayObject_obj::get_stage(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_665_get_stage)
HXLINE( 667)		if (hx::IsNotNull( this->_hx___parent )) {
HXLINE( 669)			return this->_hx___parent->get_stage();
            		}
HXLINE( 673)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_stage,return )

 ::openfl::_legacy::geom::Transform DisplayObject_obj::get_transform(){
            	HX_GC_STACKFRAME(&_hx_pos_f94de761dfec798e_678_get_transform)
HXDLIN( 678)		return  ::openfl::_legacy::geom::Transform_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_transform,return )

 ::openfl::_legacy::geom::Transform DisplayObject_obj::set_transform( ::openfl::_legacy::geom::Transform value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_679_set_transform)
HXLINE( 681)		this->_hx___setMatrix(value->get_matrix());
HXLINE( 682)		this->_hx___setColorTransform(value->get_colorTransform());
HXLINE( 683)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_transform,return )

bool DisplayObject_obj::get_visible(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_688_get_visible)
HXDLIN( 688)		return ( (bool)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_visible(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_visible,return )

bool DisplayObject_obj::set_visible(bool value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_689_set_visible)
HXLINE( 691)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_visible(this->_hx___handle,value);
HXLINE( 692)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_visible,return )

Float DisplayObject_obj::get_width(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_697_get_width)
HXDLIN( 697)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_width(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_width,return )

Float DisplayObject_obj::set_width(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_698_set_width)
HXLINE( 700)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_width(this->_hx___handle,value);
HXLINE( 701)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_width,return )

Float DisplayObject_obj::get_x(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_706_get_x)
HXDLIN( 706)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_x(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_x,return )

Float DisplayObject_obj::set_x(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_707_set_x)
HXLINE( 709)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_x(this->_hx___handle,value);
HXLINE( 710)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_x,return )

Float DisplayObject_obj::get_y(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_715_get_y)
HXDLIN( 715)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_y(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_y,return )

Float DisplayObject_obj::set_y(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_716_set_y)
HXLINE( 718)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_y(this->_hx___handle,value);
HXLINE( 719)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_y,return )

Float DisplayObject_obj::get_z(){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_724_get_z)
HXDLIN( 724)		return ( (Float)(::openfl::_legacy::display::DisplayObject_obj::lime_display_object_get_z(this->_hx___handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(DisplayObject_obj,get_z,return )

Float DisplayObject_obj::set_z(Float value){
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_725_set_z)
HXLINE( 727)		::openfl::_legacy::display::DisplayObject_obj::lime_display_object_set_z(this->_hx___handle,value);
HXLINE( 728)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DisplayObject_obj,set_z,return )

 ::Dynamic DisplayObject_obj::lime_create_display_object;

 ::Dynamic DisplayObject_obj::lime_display_object_get_graphics;

 ::Dynamic DisplayObject_obj::lime_display_object_draw_to_surface;

 ::Dynamic DisplayObject_obj::lime_display_object_get_id;

 ::Dynamic DisplayObject_obj::lime_display_object_get_x;

 ::Dynamic DisplayObject_obj::lime_display_object_set_x;

 ::Dynamic DisplayObject_obj::lime_display_object_get_y;

 ::Dynamic DisplayObject_obj::lime_display_object_set_y;

 ::Dynamic DisplayObject_obj::lime_display_object_get_z;

 ::Dynamic DisplayObject_obj::lime_display_object_set_z;

 ::Dynamic DisplayObject_obj::lime_display_object_get_scale_x;

 ::Dynamic DisplayObject_obj::lime_display_object_set_scale_x;

 ::Dynamic DisplayObject_obj::lime_display_object_get_scale_y;

 ::Dynamic DisplayObject_obj::lime_display_object_set_scale_y;

 ::Dynamic DisplayObject_obj::lime_display_object_get_mouse_x;

 ::Dynamic DisplayObject_obj::lime_display_object_get_mouse_y;

 ::Dynamic DisplayObject_obj::lime_display_object_get_rotation;

 ::Dynamic DisplayObject_obj::lime_display_object_set_rotation;

 ::Dynamic DisplayObject_obj::lime_display_object_get_bg;

 ::Dynamic DisplayObject_obj::lime_display_object_set_bg;

 ::Dynamic DisplayObject_obj::lime_display_object_get_name;

 ::Dynamic DisplayObject_obj::lime_display_object_set_name;

 ::Dynamic DisplayObject_obj::lime_display_object_get_width;

 ::Dynamic DisplayObject_obj::lime_display_object_set_width;

 ::Dynamic DisplayObject_obj::lime_display_object_get_height;

 ::Dynamic DisplayObject_obj::lime_display_object_set_height;

 ::Dynamic DisplayObject_obj::lime_display_object_get_alpha;

 ::Dynamic DisplayObject_obj::lime_display_object_set_alpha;

 ::Dynamic DisplayObject_obj::lime_display_object_get_blend_mode;

 ::Dynamic DisplayObject_obj::lime_display_object_set_blend_mode;

 ::Dynamic DisplayObject_obj::lime_display_object_get_cache_as_bitmap;

 ::Dynamic DisplayObject_obj::lime_display_object_set_cache_as_bitmap;

 ::Dynamic DisplayObject_obj::lime_display_object_get_pedantic_bitmap_caching;

 ::Dynamic DisplayObject_obj::lime_display_object_set_pedantic_bitmap_caching;

 ::Dynamic DisplayObject_obj::lime_display_object_get_visible;

 ::Dynamic DisplayObject_obj::lime_display_object_set_visible;

 ::Dynamic DisplayObject_obj::lime_display_object_set_filters;

 ::Dynamic DisplayObject_obj::lime_display_object_global_to_local;

 ::Dynamic DisplayObject_obj::lime_display_object_local_to_global;

 ::Dynamic DisplayObject_obj::lime_display_object_set_scale9_grid;

 ::Dynamic DisplayObject_obj::lime_display_object_set_scroll_rect;

 ::Dynamic DisplayObject_obj::lime_display_object_set_mask;

 ::Dynamic DisplayObject_obj::lime_display_object_set_matrix;

 ::Dynamic DisplayObject_obj::lime_display_object_get_matrix;

 ::Dynamic DisplayObject_obj::lime_display_object_get_color_transform;

 ::Dynamic DisplayObject_obj::lime_display_object_set_color_transform;

 ::Dynamic DisplayObject_obj::lime_display_object_get_pixel_bounds;

 ::Dynamic DisplayObject_obj::lime_display_object_get_bounds;

 ::Dynamic DisplayObject_obj::lime_display_object_hit_test_point;


hx::ObjectPtr< DisplayObject_obj > DisplayObject_obj::__new( ::Dynamic handle,::String type) {
	hx::ObjectPtr< DisplayObject_obj > __this = new DisplayObject_obj();
	__this->__construct(handle,type);
	return __this;
}

hx::ObjectPtr< DisplayObject_obj > DisplayObject_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic handle,::String type) {
	DisplayObject_obj *__this = (DisplayObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DisplayObject_obj), true, "openfl._legacy.display.DisplayObject"));
	*(void **)__this = DisplayObject_obj::_hx_vtable;
	__this->__construct(handle,type);
	return __this;
}

DisplayObject_obj::DisplayObject_obj()
{
}

void DisplayObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DisplayObject);
	HX_MARK_MEMBER_NAME(graphics,"graphics");
	HX_MARK_MEMBER_NAME(loaderInfo,"loaderInfo");
	HX_MARK_MEMBER_NAME(mask,"mask");
	HX_MARK_MEMBER_NAME(mouseX,"mouseX");
	HX_MARK_MEMBER_NAME(mouseY,"mouseY");
	HX_MARK_MEMBER_NAME(parent,"parent");
	HX_MARK_MEMBER_NAME(root,"root");
	HX_MARK_MEMBER_NAME(stage,"stage");
	HX_MARK_MEMBER_NAME(_hx___handle,"__handle");
	HX_MARK_MEMBER_NAME(_hx___filters,"__filters");
	HX_MARK_MEMBER_NAME(_hx___graphicsCache,"__graphicsCache");
	HX_MARK_MEMBER_NAME(_hx___id,"__id");
	HX_MARK_MEMBER_NAME(_hx___parent,"__parent");
	HX_MARK_MEMBER_NAME(_hx___scale9Grid,"__scale9Grid");
	HX_MARK_MEMBER_NAME(_hx___scrollRect,"__scrollRect");
	 ::openfl::_legacy::events::EventDispatcher_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DisplayObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(graphics,"graphics");
	HX_VISIT_MEMBER_NAME(loaderInfo,"loaderInfo");
	HX_VISIT_MEMBER_NAME(mask,"mask");
	HX_VISIT_MEMBER_NAME(mouseX,"mouseX");
	HX_VISIT_MEMBER_NAME(mouseY,"mouseY");
	HX_VISIT_MEMBER_NAME(parent,"parent");
	HX_VISIT_MEMBER_NAME(root,"root");
	HX_VISIT_MEMBER_NAME(stage,"stage");
	HX_VISIT_MEMBER_NAME(_hx___handle,"__handle");
	HX_VISIT_MEMBER_NAME(_hx___filters,"__filters");
	HX_VISIT_MEMBER_NAME(_hx___graphicsCache,"__graphicsCache");
	HX_VISIT_MEMBER_NAME(_hx___id,"__id");
	HX_VISIT_MEMBER_NAME(_hx___parent,"__parent");
	HX_VISIT_MEMBER_NAME(_hx___scale9Grid,"__scale9Grid");
	HX_VISIT_MEMBER_NAME(_hx___scrollRect,"__scrollRect");
	 ::openfl::_legacy::events::EventDispatcher_obj::__Visit(HX_VISIT_ARG);
}

hx::Val DisplayObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_x() ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_y() ); }
		if (HX_FIELD_EQ(inName,"z") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_z() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"mask") ) { return hx::Val( mask ); }
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_name() ); }
		if (HX_FIELD_EQ(inName,"root") ) { return hx::Val( inCallProp == hx::paccAlways ? get_root() : root ); }
		if (HX_FIELD_EQ(inName,"__id") ) { return hx::Val( _hx___id ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alpha") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_alpha() ); }
		if (HX_FIELD_EQ(inName,"stage") ) { return hx::Val( inCallProp == hx::paccAlways ? get_stage() : stage ); }
		if (HX_FIELD_EQ(inName,"width") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_width() ); }
		if (HX_FIELD_EQ(inName,"get_x") ) { return hx::Val( get_x_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_x") ) { return hx::Val( set_x_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_y") ) { return hx::Val( get_y_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_y") ) { return hx::Val( set_y_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_z") ) { return hx::Val( get_z_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_z") ) { return hx::Val( set_z_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_height() ); }
		if (HX_FIELD_EQ(inName,"mouseX") ) { return hx::Val( inCallProp == hx::paccAlways ? get_mouseX() : mouseX ); }
		if (HX_FIELD_EQ(inName,"mouseY") ) { return hx::Val( inCallProp == hx::paccAlways ? get_mouseY() : mouseY ); }
		if (HX_FIELD_EQ(inName,"parent") ) { return hx::Val( inCallProp == hx::paccAlways ? get_parent() : parent ); }
		if (HX_FIELD_EQ(inName,"scaleX") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_scaleX() ); }
		if (HX_FIELD_EQ(inName,"scaleY") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_scaleY() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"filters") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_filters() ); }
		if (HX_FIELD_EQ(inName,"visible") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_visible() ); }
		if (HX_FIELD_EQ(inName,"getRect") ) { return hx::Val( getRect_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { return hx::Val( inCallProp == hx::paccAlways ? get_graphics() : graphics ); }
		if (HX_FIELD_EQ(inName,"rotation") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_rotation() ); }
		if (HX_FIELD_EQ(inName,"__handle") ) { return hx::Val( _hx___handle ); }
		if (HX_FIELD_EQ(inName,"__parent") ) { return hx::Val( _hx___parent ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_mask") ) { return hx::Val( set_mask_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_name") ) { return hx::Val( get_name_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_name") ) { return hx::Val( set_name_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_root") ) { return hx::Val( get_root_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"blendMode") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_blendMode() ); }
		if (HX_FIELD_EQ(inName,"transform") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_transform() ); }
		if (HX_FIELD_EQ(inName,"__filters") ) { return hx::Val( _hx___filters ); }
		if (HX_FIELD_EQ(inName,"getBounds") ) { return hx::Val( getBounds_dyn() ); }
		if (HX_FIELD_EQ(inName,"__onAdded") ) { return hx::Val( _hx___onAdded_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_alpha") ) { return hx::Val( get_alpha_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_alpha") ) { return hx::Val( set_alpha_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_stage") ) { return hx::Val( get_stage_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_width") ) { return hx::Val( get_width_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_width") ) { return hx::Val( set_width_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"loaderInfo") ) { return hx::Val( loaderInfo ); }
		if (HX_FIELD_EQ(inName,"scale9Grid") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_scale9Grid() ); }
		if (HX_FIELD_EQ(inName,"scrollRect") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_scrollRect() ); }
		if (HX_FIELD_EQ(inName,"__contains") ) { return hx::Val( _hx___contains_dyn() ); }
		if (HX_FIELD_EQ(inName,"__findByID") ) { return hx::Val( _hx___findByID_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_height") ) { return hx::Val( get_height_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_height") ) { return hx::Val( set_height_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_mouseX") ) { return hx::Val( get_mouseX_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_mouseY") ) { return hx::Val( get_mouseY_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_parent") ) { return hx::Val( get_parent_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_scaleX") ) { return hx::Val( get_scaleX_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_scaleX") ) { return hx::Val( set_scaleX_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_scaleY") ) { return hx::Val( get_scaleY_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_scaleY") ) { return hx::Val( set_scaleY_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"__broadcast") ) { return hx::Val( _hx___broadcast_dyn() ); }
		if (HX_FIELD_EQ(inName,"__fireEvent") ) { return hx::Val( _hx___fireEvent_dyn() ); }
		if (HX_FIELD_EQ(inName,"__getMatrix") ) { return hx::Val( _hx___getMatrix_dyn() ); }
		if (HX_FIELD_EQ(inName,"__onRemoved") ) { return hx::Val( _hx___onRemoved_dyn() ); }
		if (HX_FIELD_EQ(inName,"__setMatrix") ) { return hx::Val( _hx___setMatrix_dyn() ); }
		if (HX_FIELD_EQ(inName,"__setParent") ) { return hx::Val( _hx___setParent_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_filters") ) { return hx::Val( get_filters_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_filters") ) { return hx::Val( set_filters_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_visible") ) { return hx::Val( get_visible_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_visible") ) { return hx::Val( set_visible_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__scale9Grid") ) { return hx::Val( _hx___scale9Grid ); }
		if (HX_FIELD_EQ(inName,"__scrollRect") ) { return hx::Val( _hx___scrollRect ); }
		if (HX_FIELD_EQ(inName,"hitTestPoint") ) { return hx::Val( hitTestPoint_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_graphics") ) { return hx::Val( get_graphics_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_rotation") ) { return hx::Val( get_rotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_rotation") ) { return hx::Val( set_rotation_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"cacheAsBitmap") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_cacheAsBitmap() ); }
		if (HX_FIELD_EQ(inName,"dispatchEvent") ) { return hx::Val( dispatchEvent_dyn() ); }
		if (HX_FIELD_EQ(inName,"globalToLocal") ) { return hx::Val( globalToLocal_dyn() ); }
		if (HX_FIELD_EQ(inName,"hitTestObject") ) { return hx::Val( hitTestObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"localToGlobal") ) { return hx::Val( localToGlobal_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_blendMode") ) { return hx::Val( get_blendMode_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_blendMode") ) { return hx::Val( set_blendMode_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_transform") ) { return hx::Val( get_transform_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_transform") ) { return hx::Val( set_transform_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_scale9Grid") ) { return hx::Val( get_scale9Grid_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_scale9Grid") ) { return hx::Val( set_scale9Grid_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_scrollRect") ) { return hx::Val( get_scrollRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_scrollRect") ) { return hx::Val( set_scrollRect_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__graphicsCache") ) { return hx::Val( _hx___graphicsCache ); }
		if (HX_FIELD_EQ(inName,"__dispatchEvent") ) { return hx::Val( _hx___dispatchEvent_dyn() ); }
		if (HX_FIELD_EQ(inName,"__drawToSurface") ) { return hx::Val( _hx___drawToSurface_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"opaqueBackground") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_opaqueBackground() ); }
		if (HX_FIELD_EQ(inName,"__getPixelBounds") ) { return hx::Val( _hx___getPixelBounds_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_cacheAsBitmap") ) { return hx::Val( get_cacheAsBitmap_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_cacheAsBitmap") ) { return hx::Val( set_cacheAsBitmap_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"__getColorTransform") ) { return hx::Val( _hx___getColorTransform_dyn() ); }
		if (HX_FIELD_EQ(inName,"__setColorTransform") ) { return hx::Val( _hx___setColorTransform_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"get_opaqueBackground") ) { return hx::Val( get_opaqueBackground_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_opaqueBackground") ) { return hx::Val( set_opaqueBackground_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"pedanticBitmapCaching") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_pedanticBitmapCaching() ); }
		if (HX_FIELD_EQ(inName,"__asInteractiveObject") ) { return hx::Val( _hx___asInteractiveObject_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"__getObjectsUnderPoint") ) { return hx::Val( _hx___getObjectsUnderPoint_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"__getConcatenatedMatrix") ) { return hx::Val( _hx___getConcatenatedMatrix_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"get_pedanticBitmapCaching") ) { return hx::Val( get_pedanticBitmapCaching_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pedanticBitmapCaching") ) { return hx::Val( set_pedanticBitmapCaching_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"__getInteractiveObjectStack") ) { return hx::Val( _hx___getInteractiveObjectStack_dyn() ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"__getConcatenatedColorTransform") ) { return hx::Val( _hx___getConcatenatedColorTransform_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool DisplayObject_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 25:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_x") ) { outValue = ( lime_display_object_get_x ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_x") ) { outValue = ( lime_display_object_set_x ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_y") ) { outValue = ( lime_display_object_get_y ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_y") ) { outValue = ( lime_display_object_set_y ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_z") ) { outValue = ( lime_display_object_get_z ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_z") ) { outValue = ( lime_display_object_set_z ); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_create_display_object") ) { outValue = ( lime_create_display_object ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_id") ) { outValue = ( lime_display_object_get_id ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_bg") ) { outValue = ( lime_display_object_get_bg ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_bg") ) { outValue = ( lime_display_object_set_bg ); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_name") ) { outValue = ( lime_display_object_get_name ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_name") ) { outValue = ( lime_display_object_set_name ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_mask") ) { outValue = ( lime_display_object_set_mask ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_width") ) { outValue = ( lime_display_object_get_width ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_width") ) { outValue = ( lime_display_object_set_width ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_alpha") ) { outValue = ( lime_display_object_get_alpha ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_alpha") ) { outValue = ( lime_display_object_set_alpha ); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_height") ) { outValue = ( lime_display_object_get_height ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_height") ) { outValue = ( lime_display_object_set_height ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_matrix") ) { outValue = ( lime_display_object_set_matrix ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_matrix") ) { outValue = ( lime_display_object_get_matrix ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_bounds") ) { outValue = ( lime_display_object_get_bounds ); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_scale_x") ) { outValue = ( lime_display_object_get_scale_x ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scale_x") ) { outValue = ( lime_display_object_set_scale_x ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_scale_y") ) { outValue = ( lime_display_object_get_scale_y ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scale_y") ) { outValue = ( lime_display_object_set_scale_y ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_mouse_x") ) { outValue = ( lime_display_object_get_mouse_x ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_mouse_y") ) { outValue = ( lime_display_object_get_mouse_y ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_visible") ) { outValue = ( lime_display_object_get_visible ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_visible") ) { outValue = ( lime_display_object_set_visible ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_filters") ) { outValue = ( lime_display_object_set_filters ); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_graphics") ) { outValue = ( lime_display_object_get_graphics ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_rotation") ) { outValue = ( lime_display_object_get_rotation ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_rotation") ) { outValue = ( lime_display_object_set_rotation ); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_blend_mode") ) { outValue = ( lime_display_object_get_blend_mode ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_blend_mode") ) { outValue = ( lime_display_object_set_blend_mode ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_hit_test_point") ) { outValue = ( lime_display_object_hit_test_point ); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_display_object_draw_to_surface") ) { outValue = ( lime_display_object_draw_to_surface ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_global_to_local") ) { outValue = ( lime_display_object_global_to_local ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_local_to_global") ) { outValue = ( lime_display_object_local_to_global ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scale9_grid") ) { outValue = ( lime_display_object_set_scale9_grid ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scroll_rect") ) { outValue = ( lime_display_object_set_scroll_rect ); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_pixel_bounds") ) { outValue = ( lime_display_object_get_pixel_bounds ); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_cache_as_bitmap") ) { outValue = ( lime_display_object_get_cache_as_bitmap ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_cache_as_bitmap") ) { outValue = ( lime_display_object_set_cache_as_bitmap ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_color_transform") ) { outValue = ( lime_display_object_get_color_transform ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_color_transform") ) { outValue = ( lime_display_object_set_color_transform ); return true; }
		break;
	case 47:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_pedantic_bitmap_caching") ) { outValue = ( lime_display_object_get_pedantic_bitmap_caching ); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_pedantic_bitmap_caching") ) { outValue = ( lime_display_object_set_pedantic_bitmap_caching ); return true; }
	}
	return false;
}

hx::Val DisplayObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_x(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_y(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"z") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_z(inValue.Cast< Float >()) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"mask") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_mask(inValue.Cast<  ::openfl::_legacy::display::DisplayObject >()) );mask=inValue.Cast<  ::openfl::_legacy::display::DisplayObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_name(inValue.Cast< ::String >()) ); }
		if (HX_FIELD_EQ(inName,"root") ) { root=inValue.Cast<  ::openfl::_legacy::display::DisplayObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__id") ) { _hx___id=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alpha") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_alpha(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"stage") ) { stage=inValue.Cast<  ::openfl::_legacy::display::Stage >(); return inValue; }
		if (HX_FIELD_EQ(inName,"width") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_width(inValue.Cast< Float >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_height(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"mouseX") ) { mouseX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"mouseY") ) { mouseY=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parent") ) { parent=inValue.Cast<  ::openfl::_legacy::display::DisplayObjectContainer >(); return inValue; }
		if (HX_FIELD_EQ(inName,"scaleX") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_scaleX(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"scaleY") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_scaleY(inValue.Cast< Float >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"filters") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_filters(inValue.Cast< ::Array< ::Dynamic> >()) ); }
		if (HX_FIELD_EQ(inName,"visible") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_visible(inValue.Cast< bool >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=inValue.Cast<  ::openfl::_legacy::display::Graphics >(); return inValue; }
		if (HX_FIELD_EQ(inName,"rotation") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_rotation(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"__handle") ) { _hx___handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__parent") ) { _hx___parent=inValue.Cast<  ::openfl::_legacy::display::DisplayObjectContainer >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"blendMode") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_blendMode(inValue.Cast<  ::openfl::_legacy::display::BlendMode >()) ); }
		if (HX_FIELD_EQ(inName,"transform") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_transform(inValue.Cast<  ::openfl::_legacy::geom::Transform >()) ); }
		if (HX_FIELD_EQ(inName,"__filters") ) { _hx___filters=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"loaderInfo") ) { loaderInfo=inValue.Cast<  ::openfl::_legacy::display::LoaderInfo >(); return inValue; }
		if (HX_FIELD_EQ(inName,"scale9Grid") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_scale9Grid(inValue.Cast<  ::openfl::_legacy::geom::Rectangle >()) ); }
		if (HX_FIELD_EQ(inName,"scrollRect") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_scrollRect(inValue.Cast<  ::openfl::_legacy::geom::Rectangle >()) ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__scale9Grid") ) { _hx___scale9Grid=inValue.Cast<  ::openfl::_legacy::geom::Rectangle >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__scrollRect") ) { _hx___scrollRect=inValue.Cast<  ::openfl::_legacy::geom::Rectangle >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"cacheAsBitmap") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_cacheAsBitmap(inValue.Cast< bool >()) ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__graphicsCache") ) { _hx___graphicsCache=inValue.Cast<  ::openfl::_legacy::display::Graphics >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"opaqueBackground") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_opaqueBackground(inValue.Cast<  ::Dynamic >()) ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"pedanticBitmapCaching") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pedanticBitmapCaching(inValue.Cast< bool >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool DisplayObject_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 25:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_x") ) { lime_display_object_get_x=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_x") ) { lime_display_object_set_x=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_y") ) { lime_display_object_get_y=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_y") ) { lime_display_object_set_y=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_z") ) { lime_display_object_get_z=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_z") ) { lime_display_object_set_z=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_create_display_object") ) { lime_create_display_object=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_id") ) { lime_display_object_get_id=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_bg") ) { lime_display_object_get_bg=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_bg") ) { lime_display_object_set_bg=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_name") ) { lime_display_object_get_name=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_name") ) { lime_display_object_set_name=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_mask") ) { lime_display_object_set_mask=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_width") ) { lime_display_object_get_width=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_width") ) { lime_display_object_set_width=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_alpha") ) { lime_display_object_get_alpha=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_alpha") ) { lime_display_object_set_alpha=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_height") ) { lime_display_object_get_height=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_height") ) { lime_display_object_set_height=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_matrix") ) { lime_display_object_set_matrix=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_matrix") ) { lime_display_object_get_matrix=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_bounds") ) { lime_display_object_get_bounds=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_scale_x") ) { lime_display_object_get_scale_x=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scale_x") ) { lime_display_object_set_scale_x=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_scale_y") ) { lime_display_object_get_scale_y=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scale_y") ) { lime_display_object_set_scale_y=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_mouse_x") ) { lime_display_object_get_mouse_x=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_mouse_y") ) { lime_display_object_get_mouse_y=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_visible") ) { lime_display_object_get_visible=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_visible") ) { lime_display_object_set_visible=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_filters") ) { lime_display_object_set_filters=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_graphics") ) { lime_display_object_get_graphics=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_rotation") ) { lime_display_object_get_rotation=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_rotation") ) { lime_display_object_set_rotation=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_blend_mode") ) { lime_display_object_get_blend_mode=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_blend_mode") ) { lime_display_object_set_blend_mode=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_hit_test_point") ) { lime_display_object_hit_test_point=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_display_object_draw_to_surface") ) { lime_display_object_draw_to_surface=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_global_to_local") ) { lime_display_object_global_to_local=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_local_to_global") ) { lime_display_object_local_to_global=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scale9_grid") ) { lime_display_object_set_scale9_grid=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_scroll_rect") ) { lime_display_object_set_scroll_rect=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_pixel_bounds") ) { lime_display_object_get_pixel_bounds=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_cache_as_bitmap") ) { lime_display_object_get_cache_as_bitmap=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_cache_as_bitmap") ) { lime_display_object_set_cache_as_bitmap=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_get_color_transform") ) { lime_display_object_get_color_transform=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_color_transform") ) { lime_display_object_set_color_transform=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 47:
		if (HX_FIELD_EQ(inName,"lime_display_object_get_pedantic_bitmap_caching") ) { lime_display_object_get_pedantic_bitmap_caching=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_display_object_set_pedantic_bitmap_caching") ) { lime_display_object_set_pedantic_bitmap_caching=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void DisplayObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("alpha","\x5e","\xa7","\x96","\x21"));
	outFields->push(HX_HCSTRING("blendMode","\x54","\xe4","\x37","\x0c"));
	outFields->push(HX_HCSTRING("cacheAsBitmap","\xe3","\x82","\x0f","\x6a"));
	outFields->push(HX_HCSTRING("filters","\xbb","\xa1","\x46","\x09"));
	outFields->push(HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"));
	outFields->push(HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"));
	outFields->push(HX_HCSTRING("loaderInfo","\x21","\xb2","\xe4","\xb6"));
	outFields->push(HX_HCSTRING("mask","\xec","\x40","\x56","\x48"));
	outFields->push(HX_HCSTRING("mouseX","\x93","\x4a","\x0e","\xcc"));
	outFields->push(HX_HCSTRING("mouseY","\x94","\x4a","\x0e","\xcc"));
	outFields->push(HX_HCSTRING("name","\x4b","\x72","\xff","\x48"));
	outFields->push(HX_HCSTRING("opaqueBackground","\x2f","\xb8","\xa7","\x1a"));
	outFields->push(HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"));
	outFields->push(HX_HCSTRING("pedanticBitmapCaching","\x1e","\x45","\x20","\x18"));
	outFields->push(HX_HCSTRING("root","\x22","\xee","\xae","\x4b"));
	outFields->push(HX_HCSTRING("rotation","\x3e","\x3d","\x86","\x08"));
	outFields->push(HX_HCSTRING("scale9Grid","\xd5","\x50","\x22","\x8f"));
	outFields->push(HX_HCSTRING("scaleX","\x8e","\xea","\x25","\x3c"));
	outFields->push(HX_HCSTRING("scaleY","\x8f","\xea","\x25","\x3c"));
	outFields->push(HX_HCSTRING("scrollRect","\xd1","\xdb","\x66","\x09"));
	outFields->push(HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84"));
	outFields->push(HX_HCSTRING("transform","\x6c","\x2d","\x93","\x45"));
	outFields->push(HX_HCSTRING("visible","\x72","\x78","\x24","\xa3"));
	outFields->push(HX_HCSTRING("width","\x06","\xb6","\x62","\xca"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("z","\x7a","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("__handle","\xc8","\xee","\x2c","\x60"));
	outFields->push(HX_HCSTRING("__filters","\x9b","\xf2","\x94","\x8a"));
	outFields->push(HX_HCSTRING("__graphicsCache","\x57","\x8a","\x1b","\xe0"));
	outFields->push(HX_HCSTRING("__id","\xfb","\xb6","\x13","\x3f"));
	outFields->push(HX_HCSTRING("__parent","\x4a","\x70","\xad","\x95"));
	outFields->push(HX_HCSTRING("__scale9Grid","\xf5","\xcb","\xb5","\xc7"));
	outFields->push(HX_HCSTRING("__scrollRect","\xf1","\x56","\xfa","\x41"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DisplayObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::openfl::_legacy::display::Graphics*/ ,(int)offsetof(DisplayObject_obj,graphics),HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12")},
	{hx::fsObject /*::openfl::_legacy::display::LoaderInfo*/ ,(int)offsetof(DisplayObject_obj,loaderInfo),HX_HCSTRING("loaderInfo","\x21","\xb2","\xe4","\xb6")},
	{hx::fsObject /*::openfl::_legacy::display::DisplayObject*/ ,(int)offsetof(DisplayObject_obj,mask),HX_HCSTRING("mask","\xec","\x40","\x56","\x48")},
	{hx::fsFloat,(int)offsetof(DisplayObject_obj,mouseX),HX_HCSTRING("mouseX","\x93","\x4a","\x0e","\xcc")},
	{hx::fsFloat,(int)offsetof(DisplayObject_obj,mouseY),HX_HCSTRING("mouseY","\x94","\x4a","\x0e","\xcc")},
	{hx::fsObject /*::openfl::_legacy::display::DisplayObjectContainer*/ ,(int)offsetof(DisplayObject_obj,parent),HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed")},
	{hx::fsObject /*::openfl::_legacy::display::DisplayObject*/ ,(int)offsetof(DisplayObject_obj,root),HX_HCSTRING("root","\x22","\xee","\xae","\x4b")},
	{hx::fsObject /*::openfl::_legacy::display::Stage*/ ,(int)offsetof(DisplayObject_obj,stage),HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(DisplayObject_obj,_hx___handle),HX_HCSTRING("__handle","\xc8","\xee","\x2c","\x60")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(DisplayObject_obj,_hx___filters),HX_HCSTRING("__filters","\x9b","\xf2","\x94","\x8a")},
	{hx::fsObject /*::openfl::_legacy::display::Graphics*/ ,(int)offsetof(DisplayObject_obj,_hx___graphicsCache),HX_HCSTRING("__graphicsCache","\x57","\x8a","\x1b","\xe0")},
	{hx::fsInt,(int)offsetof(DisplayObject_obj,_hx___id),HX_HCSTRING("__id","\xfb","\xb6","\x13","\x3f")},
	{hx::fsObject /*::openfl::_legacy::display::DisplayObjectContainer*/ ,(int)offsetof(DisplayObject_obj,_hx___parent),HX_HCSTRING("__parent","\x4a","\x70","\xad","\x95")},
	{hx::fsObject /*::openfl::_legacy::geom::Rectangle*/ ,(int)offsetof(DisplayObject_obj,_hx___scale9Grid),HX_HCSTRING("__scale9Grid","\xf5","\xcb","\xb5","\xc7")},
	{hx::fsObject /*::openfl::_legacy::geom::Rectangle*/ ,(int)offsetof(DisplayObject_obj,_hx___scrollRect),HX_HCSTRING("__scrollRect","\xf1","\x56","\xfa","\x41")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo DisplayObject_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_create_display_object,HX_HCSTRING("lime_create_display_object","\x95","\x97","\x97","\x78")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_graphics,HX_HCSTRING("lime_display_object_get_graphics","\x6d","\x80","\x9a","\x4d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_draw_to_surface,HX_HCSTRING("lime_display_object_draw_to_surface","\xcb","\x21","\x6a","\x19")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_id,HX_HCSTRING("lime_display_object_get_id","\xfd","\x9d","\x7b","\x9e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_x,HX_HCSTRING("lime_display_object_get_x","\x96","\xd8","\x21","\x9f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_x,HX_HCSTRING("lime_display_object_set_x","\xa2","\xce","\xf0","\x87")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_y,HX_HCSTRING("lime_display_object_get_y","\x97","\xd8","\x21","\x9f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_y,HX_HCSTRING("lime_display_object_set_y","\xa3","\xce","\xf0","\x87")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_z,HX_HCSTRING("lime_display_object_get_z","\x98","\xd8","\x21","\x9f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_z,HX_HCSTRING("lime_display_object_set_z","\xa4","\xce","\xf0","\x87")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_scale_x,HX_HCSTRING("lime_display_object_get_scale_x","\xe1","\x1a","\x9f","\x8e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_scale_x,HX_HCSTRING("lime_display_object_set_scale_x","\xed","\x21","\x0c","\x99")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_scale_y,HX_HCSTRING("lime_display_object_get_scale_y","\xe2","\x1a","\x9f","\x8e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_scale_y,HX_HCSTRING("lime_display_object_set_scale_y","\xee","\x21","\x0c","\x99")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_mouse_x,HX_HCSTRING("lime_display_object_get_mouse_x","\x3c","\xbf","\x0a","\xea")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_mouse_y,HX_HCSTRING("lime_display_object_get_mouse_y","\x3d","\xbf","\x0a","\xea")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_rotation,HX_HCSTRING("lime_display_object_get_rotation","\xe0","\xc4","\xb8","\x43")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_rotation,HX_HCSTRING("lime_display_object_set_rotation","\x54","\xe8","\xb1","\x58")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_bg,HX_HCSTRING("lime_display_object_get_bg","\xe7","\x97","\x7b","\x9e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_bg,HX_HCSTRING("lime_display_object_set_bg","\x5b","\xec","\xc3","\x6a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_name,HX_HCSTRING("lime_display_object_get_name","\xed","\x00","\x69","\xee")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_name,HX_HCSTRING("lime_display_object_set_name","\x61","\x5a","\xc6","\x9c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_width,HX_HCSTRING("lime_display_object_get_width","\x24","\xf5","\x55","\xe1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_width,HX_HCSTRING("lime_display_object_set_width","\x30","\xe1","\xa6","\xc4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_height,HX_HCSTRING("lime_display_object_get_height","\x09","\x03","\x30","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_height,HX_HCSTRING("lime_display_object_set_height","\x7d","\xa1","\xad","\x03")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_alpha,HX_HCSTRING("lime_display_object_get_alpha","\x7c","\xe6","\x89","\x38")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_alpha,HX_HCSTRING("lime_display_object_set_alpha","\x88","\xd2","\xda","\x1b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_blend_mode,HX_HCSTRING("lime_display_object_get_blend_mode","\x73","\x75","\x39","\x53")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_blend_mode,HX_HCSTRING("lime_display_object_set_blend_mode","\xe7","\x5d","\x59","\x73")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_cache_as_bitmap,HX_HCSTRING("lime_display_object_get_cache_as_bitmap","\xfd","\xfb","\x60","\x7d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_cache_as_bitmap,HX_HCSTRING("lime_display_object_set_cache_as_bitmap","\x09","\xef","\xfd","\xb9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_pedantic_bitmap_caching,HX_HCSTRING("lime_display_object_get_pedantic_bitmap_caching","\x9a","\x40","\xc2","\xb1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_pedantic_bitmap_caching,HX_HCSTRING("lime_display_object_set_pedantic_bitmap_caching","\xa6","\x1f","\x5b","\xf4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_visible,HX_HCSTRING("lime_display_object_get_visible","\x10","\x3b","\xbc","\xcc")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_visible,HX_HCSTRING("lime_display_object_set_visible","\x1c","\x42","\x29","\xd7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_filters,HX_HCSTRING("lime_display_object_set_filters","\x65","\x6b","\x4b","\x3d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_global_to_local,HX_HCSTRING("lime_display_object_global_to_local","\x0a","\xf8","\xf2","\x54")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_local_to_global,HX_HCSTRING("lime_display_object_local_to_global","\xda","\x5d","\x3a","\x8e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_scale9_grid,HX_HCSTRING("lime_display_object_set_scale9_grid","\x80","\xbc","\xff","\x6b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_scroll_rect,HX_HCSTRING("lime_display_object_set_scroll_rect","\x80","\x28","\x24","\xa8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_mask,HX_HCSTRING("lime_display_object_set_mask","\x02","\x29","\x1d","\x9c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_matrix,HX_HCSTRING("lime_display_object_set_matrix","\xd7","\xcf","\x29","\xbd")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_matrix,HX_HCSTRING("lime_display_object_get_matrix","\x63","\x31","\xac","\xb9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_color_transform,HX_HCSTRING("lime_display_object_get_color_transform","\xee","\x64","\x15","\x35")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_set_color_transform,HX_HCSTRING("lime_display_object_set_color_transform","\xfa","\x57","\xb2","\x71")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_pixel_bounds,HX_HCSTRING("lime_display_object_get_pixel_bounds","\xf0","\x4e","\x69","\x0c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_get_bounds,HX_HCSTRING("lime_display_object_get_bounds","\x97","\x81","\x01","\x64")},
	{hx::fsObject /*Dynamic*/ ,(void *) &DisplayObject_obj::lime_display_object_hit_test_point,HX_HCSTRING("lime_display_object_hit_test_point","\xe8","\x4a","\x23","\xd3")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String DisplayObject_obj_sMemberFields[] = {
	HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"),
	HX_HCSTRING("loaderInfo","\x21","\xb2","\xe4","\xb6"),
	HX_HCSTRING("mask","\xec","\x40","\x56","\x48"),
	HX_HCSTRING("mouseX","\x93","\x4a","\x0e","\xcc"),
	HX_HCSTRING("mouseY","\x94","\x4a","\x0e","\xcc"),
	HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"),
	HX_HCSTRING("root","\x22","\xee","\xae","\x4b"),
	HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84"),
	HX_HCSTRING("__handle","\xc8","\xee","\x2c","\x60"),
	HX_HCSTRING("__filters","\x9b","\xf2","\x94","\x8a"),
	HX_HCSTRING("__graphicsCache","\x57","\x8a","\x1b","\xe0"),
	HX_HCSTRING("__id","\xfb","\xb6","\x13","\x3f"),
	HX_HCSTRING("__parent","\x4a","\x70","\xad","\x95"),
	HX_HCSTRING("__scale9Grid","\xf5","\xcb","\xb5","\xc7"),
	HX_HCSTRING("__scrollRect","\xf1","\x56","\xfa","\x41"),
	HX_HCSTRING("dispatchEvent","\x00","\xc7","\x64","\xc6"),
	HX_HCSTRING("getBounds","\xab","\x0f","\x74","\xe2"),
	HX_HCSTRING("getRect","\xda","\xfc","\x29","\x1e"),
	HX_HCSTRING("globalToLocal","\xcd","\x4e","\xae","\x6b"),
	HX_HCSTRING("hitTestObject","\xe4","\x54","\x64","\xd7"),
	HX_HCSTRING("hitTestPoint","\xcb","\xa9","\x21","\xe4"),
	HX_HCSTRING("localToGlobal","\xc9","\x41","\xeb","\x47"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("__asInteractiveObject","\xcf","\xa1","\x7e","\x5e"),
	HX_HCSTRING("__broadcast","\xe1","\xeb","\x45","\x0d"),
	HX_HCSTRING("__contains","\x3f","\xcd","\xb3","\xcf"),
	HX_HCSTRING("__dispatchEvent","\xe0","\xff","\x16","\x4e"),
	HX_HCSTRING("__drawToSurface","\x2e","\xea","\xb6","\x73"),
	HX_HCSTRING("__findByID","\x6b","\x79","\xef","\x36"),
	HX_HCSTRING("__fireEvent","\x64","\x79","\x99","\x9f"),
	HX_HCSTRING("__getColorTransform","\x9f","\xaf","\xa3","\xd2"),
	HX_HCSTRING("__getConcatenatedColorTransform","\x0e","\x8a","\xad","\x0d"),
	HX_HCSTRING("__getConcatenatedMatrix","\xc6","\x5b","\x9d","\x43"),
	HX_HCSTRING("__getInteractiveObjectStack","\x5d","\xa3","\x8c","\x71"),
	HX_HCSTRING("__getMatrix","\x57","\x08","\x4b","\x66"),
	HX_HCSTRING("__getObjectsUnderPoint","\xb6","\xb3","\x7d","\x48"),
	HX_HCSTRING("__getPixelBounds","\xc5","\x47","\x88","\x93"),
	HX_HCSTRING("__onAdded","\x01","\xc4","\xcf","\x33"),
	HX_HCSTRING("__onRemoved","\x21","\x21","\xd7","\xf8"),
	HX_HCSTRING("__setColorTransform","\xab","\x87","\x11","\xf6"),
	HX_HCSTRING("__setMatrix","\x63","\xf4","\x9b","\x49"),
	HX_HCSTRING("__setParent","\x4c","\xc3","\x51","\x7b"),
	HX_HCSTRING("get_alpha","\xb5","\x03","\x40","\x65"),
	HX_HCSTRING("set_alpha","\xc1","\xef","\x90","\x48"),
	HX_HCSTRING("get_opaqueBackground","\x38","\x1d","\x12","\x39"),
	HX_HCSTRING("set_opaqueBackground","\xac","\xd4","\xc9","\x05"),
	HX_HCSTRING("get_blendMode","\x2b","\xb8","\x9b","\xcd"),
	HX_HCSTRING("set_blendMode","\x37","\x9a","\xa1","\x12"),
	HX_HCSTRING("get_cacheAsBitmap","\x3a","\x8e","\x7f","\x70"),
	HX_HCSTRING("set_cacheAsBitmap","\x46","\x66","\xed","\x93"),
	HX_HCSTRING("get_pedanticBitmapCaching","\x75","\xff","\x1d","\x1e"),
	HX_HCSTRING("set_pedanticBitmapCaching","\x81","\xc3","\x74","\x8a"),
	HX_HCSTRING("get_filters","\xd2","\x01","\x41","\x8f"),
	HX_HCSTRING("set_filters","\xde","\x08","\xae","\x99"),
	HX_HCSTRING("get_graphics","\xd4","\xac","\x81","\xc7"),
	HX_HCSTRING("get_height","\xb0","\x77","\xd3","\xf2"),
	HX_HCSTRING("set_height","\x24","\x16","\x51","\xf6"),
	HX_HCSTRING("set_mask","\xe9","\x55","\x6e","\x76"),
	HX_HCSTRING("get_mouseX","\x5c","\xba","\x95","\xbc"),
	HX_HCSTRING("get_mouseY","\x5d","\xba","\x95","\xbc"),
	HX_HCSTRING("get_name","\xd4","\x2d","\xba","\xc8"),
	HX_HCSTRING("set_name","\x48","\x87","\x17","\x77"),
	HX_HCSTRING("get_parent","\xf3","\x74","\x05","\xde"),
	HX_HCSTRING("get_root","\xab","\xa9","\x69","\xcb"),
	HX_HCSTRING("get_rotation","\x47","\xf1","\x9f","\xbd"),
	HX_HCSTRING("set_rotation","\xbb","\x14","\x99","\xd2"),
	HX_HCSTRING("get_scale9Grid","\x1e","\xd9","\x17","\x05"),
	HX_HCSTRING("set_scale9Grid","\x92","\xc1","\x37","\x25"),
	HX_HCSTRING("get_scaleX","\x57","\x5a","\xad","\x2c"),
	HX_HCSTRING("set_scaleX","\xcb","\xf8","\x2a","\x30"),
	HX_HCSTRING("get_scaleY","\x58","\x5a","\xad","\x2c"),
	HX_HCSTRING("set_scaleY","\xcc","\xf8","\x2a","\x30"),
	HX_HCSTRING("get_scrollRect","\x1a","\x64","\x5c","\x7f"),
	HX_HCSTRING("set_scrollRect","\x8e","\x4c","\x7c","\x9f"),
	HX_HCSTRING("get_stage","\x15","\xc7","\xb4","\xc7"),
	HX_HCSTRING("get_transform","\x43","\x01","\xf7","\x06"),
	HX_HCSTRING("set_transform","\x4f","\xe3","\xfc","\x4b"),
	HX_HCSTRING("get_visible","\x89","\xd8","\x1e","\x29"),
	HX_HCSTRING("set_visible","\x95","\xdf","\x8b","\x33"),
	HX_HCSTRING("get_width","\x5d","\x12","\x0c","\x0e"),
	HX_HCSTRING("set_width","\x69","\xfe","\x5c","\xf1"),
	HX_HCSTRING("get_x","\x4f","\xa5","\x60","\x91"),
	HX_HCSTRING("set_x","\x5b","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_y","\x50","\xa5","\x60","\x91"),
	HX_HCSTRING("set_y","\x5c","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_z","\x51","\xa5","\x60","\x91"),
	HX_HCSTRING("set_z","\x5d","\x9b","\x2f","\x7a"),
	::String(null()) };

static void DisplayObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DisplayObject_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_create_display_object,"lime_create_display_object");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_graphics,"lime_display_object_get_graphics");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_draw_to_surface,"lime_display_object_draw_to_surface");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_id,"lime_display_object_get_id");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_x,"lime_display_object_get_x");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_x,"lime_display_object_set_x");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_y,"lime_display_object_get_y");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_y,"lime_display_object_set_y");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_z,"lime_display_object_get_z");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_z,"lime_display_object_set_z");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_scale_x,"lime_display_object_get_scale_x");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scale_x,"lime_display_object_set_scale_x");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_scale_y,"lime_display_object_get_scale_y");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scale_y,"lime_display_object_set_scale_y");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_mouse_x,"lime_display_object_get_mouse_x");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_mouse_y,"lime_display_object_get_mouse_y");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_rotation,"lime_display_object_get_rotation");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_rotation,"lime_display_object_set_rotation");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_bg,"lime_display_object_get_bg");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_bg,"lime_display_object_set_bg");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_name,"lime_display_object_get_name");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_name,"lime_display_object_set_name");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_width,"lime_display_object_get_width");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_width,"lime_display_object_set_width");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_height,"lime_display_object_get_height");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_height,"lime_display_object_set_height");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_alpha,"lime_display_object_get_alpha");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_alpha,"lime_display_object_set_alpha");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_blend_mode,"lime_display_object_get_blend_mode");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_blend_mode,"lime_display_object_set_blend_mode");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_cache_as_bitmap,"lime_display_object_get_cache_as_bitmap");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_cache_as_bitmap,"lime_display_object_set_cache_as_bitmap");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_pedantic_bitmap_caching,"lime_display_object_get_pedantic_bitmap_caching");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_pedantic_bitmap_caching,"lime_display_object_set_pedantic_bitmap_caching");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_visible,"lime_display_object_get_visible");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_visible,"lime_display_object_set_visible");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_filters,"lime_display_object_set_filters");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_global_to_local,"lime_display_object_global_to_local");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_local_to_global,"lime_display_object_local_to_global");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scale9_grid,"lime_display_object_set_scale9_grid");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scroll_rect,"lime_display_object_set_scroll_rect");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_mask,"lime_display_object_set_mask");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_matrix,"lime_display_object_set_matrix");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_matrix,"lime_display_object_get_matrix");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_color_transform,"lime_display_object_get_color_transform");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_color_transform,"lime_display_object_set_color_transform");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_pixel_bounds,"lime_display_object_get_pixel_bounds");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_bounds,"lime_display_object_get_bounds");
	HX_MARK_MEMBER_NAME(DisplayObject_obj::lime_display_object_hit_test_point,"lime_display_object_hit_test_point");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DisplayObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_create_display_object,"lime_create_display_object");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_graphics,"lime_display_object_get_graphics");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_draw_to_surface,"lime_display_object_draw_to_surface");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_id,"lime_display_object_get_id");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_x,"lime_display_object_get_x");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_x,"lime_display_object_set_x");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_y,"lime_display_object_get_y");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_y,"lime_display_object_set_y");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_z,"lime_display_object_get_z");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_z,"lime_display_object_set_z");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_scale_x,"lime_display_object_get_scale_x");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scale_x,"lime_display_object_set_scale_x");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_scale_y,"lime_display_object_get_scale_y");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scale_y,"lime_display_object_set_scale_y");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_mouse_x,"lime_display_object_get_mouse_x");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_mouse_y,"lime_display_object_get_mouse_y");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_rotation,"lime_display_object_get_rotation");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_rotation,"lime_display_object_set_rotation");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_bg,"lime_display_object_get_bg");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_bg,"lime_display_object_set_bg");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_name,"lime_display_object_get_name");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_name,"lime_display_object_set_name");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_width,"lime_display_object_get_width");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_width,"lime_display_object_set_width");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_height,"lime_display_object_get_height");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_height,"lime_display_object_set_height");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_alpha,"lime_display_object_get_alpha");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_alpha,"lime_display_object_set_alpha");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_blend_mode,"lime_display_object_get_blend_mode");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_blend_mode,"lime_display_object_set_blend_mode");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_cache_as_bitmap,"lime_display_object_get_cache_as_bitmap");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_cache_as_bitmap,"lime_display_object_set_cache_as_bitmap");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_pedantic_bitmap_caching,"lime_display_object_get_pedantic_bitmap_caching");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_pedantic_bitmap_caching,"lime_display_object_set_pedantic_bitmap_caching");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_visible,"lime_display_object_get_visible");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_visible,"lime_display_object_set_visible");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_filters,"lime_display_object_set_filters");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_global_to_local,"lime_display_object_global_to_local");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_local_to_global,"lime_display_object_local_to_global");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scale9_grid,"lime_display_object_set_scale9_grid");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_scroll_rect,"lime_display_object_set_scroll_rect");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_mask,"lime_display_object_set_mask");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_matrix,"lime_display_object_set_matrix");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_matrix,"lime_display_object_get_matrix");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_color_transform,"lime_display_object_get_color_transform");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_set_color_transform,"lime_display_object_set_color_transform");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_pixel_bounds,"lime_display_object_get_pixel_bounds");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_get_bounds,"lime_display_object_get_bounds");
	HX_VISIT_MEMBER_NAME(DisplayObject_obj::lime_display_object_hit_test_point,"lime_display_object_hit_test_point");
};

#endif

hx::Class DisplayObject_obj::__mClass;

static ::String DisplayObject_obj_sStaticFields[] = {
	HX_HCSTRING("lime_create_display_object","\x95","\x97","\x97","\x78"),
	HX_HCSTRING("lime_display_object_get_graphics","\x6d","\x80","\x9a","\x4d"),
	HX_HCSTRING("lime_display_object_draw_to_surface","\xcb","\x21","\x6a","\x19"),
	HX_HCSTRING("lime_display_object_get_id","\xfd","\x9d","\x7b","\x9e"),
	HX_HCSTRING("lime_display_object_get_x","\x96","\xd8","\x21","\x9f"),
	HX_HCSTRING("lime_display_object_set_x","\xa2","\xce","\xf0","\x87"),
	HX_HCSTRING("lime_display_object_get_y","\x97","\xd8","\x21","\x9f"),
	HX_HCSTRING("lime_display_object_set_y","\xa3","\xce","\xf0","\x87"),
	HX_HCSTRING("lime_display_object_get_z","\x98","\xd8","\x21","\x9f"),
	HX_HCSTRING("lime_display_object_set_z","\xa4","\xce","\xf0","\x87"),
	HX_HCSTRING("lime_display_object_get_scale_x","\xe1","\x1a","\x9f","\x8e"),
	HX_HCSTRING("lime_display_object_set_scale_x","\xed","\x21","\x0c","\x99"),
	HX_HCSTRING("lime_display_object_get_scale_y","\xe2","\x1a","\x9f","\x8e"),
	HX_HCSTRING("lime_display_object_set_scale_y","\xee","\x21","\x0c","\x99"),
	HX_HCSTRING("lime_display_object_get_mouse_x","\x3c","\xbf","\x0a","\xea"),
	HX_HCSTRING("lime_display_object_get_mouse_y","\x3d","\xbf","\x0a","\xea"),
	HX_HCSTRING("lime_display_object_get_rotation","\xe0","\xc4","\xb8","\x43"),
	HX_HCSTRING("lime_display_object_set_rotation","\x54","\xe8","\xb1","\x58"),
	HX_HCSTRING("lime_display_object_get_bg","\xe7","\x97","\x7b","\x9e"),
	HX_HCSTRING("lime_display_object_set_bg","\x5b","\xec","\xc3","\x6a"),
	HX_HCSTRING("lime_display_object_get_name","\xed","\x00","\x69","\xee"),
	HX_HCSTRING("lime_display_object_set_name","\x61","\x5a","\xc6","\x9c"),
	HX_HCSTRING("lime_display_object_get_width","\x24","\xf5","\x55","\xe1"),
	HX_HCSTRING("lime_display_object_set_width","\x30","\xe1","\xa6","\xc4"),
	HX_HCSTRING("lime_display_object_get_height","\x09","\x03","\x30","\x00"),
	HX_HCSTRING("lime_display_object_set_height","\x7d","\xa1","\xad","\x03"),
	HX_HCSTRING("lime_display_object_get_alpha","\x7c","\xe6","\x89","\x38"),
	HX_HCSTRING("lime_display_object_set_alpha","\x88","\xd2","\xda","\x1b"),
	HX_HCSTRING("lime_display_object_get_blend_mode","\x73","\x75","\x39","\x53"),
	HX_HCSTRING("lime_display_object_set_blend_mode","\xe7","\x5d","\x59","\x73"),
	HX_HCSTRING("lime_display_object_get_cache_as_bitmap","\xfd","\xfb","\x60","\x7d"),
	HX_HCSTRING("lime_display_object_set_cache_as_bitmap","\x09","\xef","\xfd","\xb9"),
	HX_HCSTRING("lime_display_object_get_pedantic_bitmap_caching","\x9a","\x40","\xc2","\xb1"),
	HX_HCSTRING("lime_display_object_set_pedantic_bitmap_caching","\xa6","\x1f","\x5b","\xf4"),
	HX_HCSTRING("lime_display_object_get_visible","\x10","\x3b","\xbc","\xcc"),
	HX_HCSTRING("lime_display_object_set_visible","\x1c","\x42","\x29","\xd7"),
	HX_HCSTRING("lime_display_object_set_filters","\x65","\x6b","\x4b","\x3d"),
	HX_HCSTRING("lime_display_object_global_to_local","\x0a","\xf8","\xf2","\x54"),
	HX_HCSTRING("lime_display_object_local_to_global","\xda","\x5d","\x3a","\x8e"),
	HX_HCSTRING("lime_display_object_set_scale9_grid","\x80","\xbc","\xff","\x6b"),
	HX_HCSTRING("lime_display_object_set_scroll_rect","\x80","\x28","\x24","\xa8"),
	HX_HCSTRING("lime_display_object_set_mask","\x02","\x29","\x1d","\x9c"),
	HX_HCSTRING("lime_display_object_set_matrix","\xd7","\xcf","\x29","\xbd"),
	HX_HCSTRING("lime_display_object_get_matrix","\x63","\x31","\xac","\xb9"),
	HX_HCSTRING("lime_display_object_get_color_transform","\xee","\x64","\x15","\x35"),
	HX_HCSTRING("lime_display_object_set_color_transform","\xfa","\x57","\xb2","\x71"),
	HX_HCSTRING("lime_display_object_get_pixel_bounds","\xf0","\x4e","\x69","\x0c"),
	HX_HCSTRING("lime_display_object_get_bounds","\x97","\x81","\x01","\x64"),
	HX_HCSTRING("lime_display_object_hit_test_point","\xe8","\x4a","\x23","\xd3"),
	::String(null())
};

void DisplayObject_obj::__register()
{
	hx::Object *dummy = new DisplayObject_obj;
	DisplayObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.display.DisplayObject","\xf1","\xd4","\xb0","\xc6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DisplayObject_obj::__GetStatic;
	__mClass->mSetStaticField = &DisplayObject_obj::__SetStatic;
	__mClass->mMarkFunc = DisplayObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DisplayObject_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DisplayObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DisplayObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DisplayObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DisplayObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DisplayObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DisplayObject_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_740_boot)
HXDLIN( 740)		lime_create_display_object = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_create_display_object",73,68,78,d8),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_741_boot)
HXDLIN( 741)		lime_display_object_get_graphics = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_graphics",cb,4b,94,55),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_742_boot)
HXDLIN( 742)		lime_display_object_draw_to_surface = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_draw_to_surface",2d,45,83,ff),(int)-1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_743_boot)
HXDLIN( 743)		lime_display_object_get_id = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_id",db,6e,5c,fe),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_744_boot)
HXDLIN( 744)		lime_display_object_get_x = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_x",78,4d,07,08),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_745_boot)
HXDLIN( 745)		lime_display_object_set_x = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_x",84,43,d6,f0),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_746_boot)
HXDLIN( 746)		lime_display_object_get_y = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_y",79,4d,07,08),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_747_boot)
HXDLIN( 747)		lime_display_object_set_y = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_y",85,43,d6,f0),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_748_boot)
HXDLIN( 748)		lime_display_object_get_z = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_z",7a,4d,07,08),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_749_boot)
HXDLIN( 749)		lime_display_object_set_z = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_z",86,43,d6,f0),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_750_boot)
HXDLIN( 750)		lime_display_object_get_scale_x = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_scale_x",43,65,06,a1),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_751_boot)
HXDLIN( 751)		lime_display_object_set_scale_x = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_scale_x",4f,6c,73,ab),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_752_boot)
HXDLIN( 752)		lime_display_object_get_scale_y = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_scale_y",44,65,06,a1),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_753_boot)
HXDLIN( 753)		lime_display_object_set_scale_y = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_scale_y",50,6c,73,ab),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_754_boot)
HXDLIN( 754)		lime_display_object_get_mouse_x = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_mouse_x",9e,09,72,fc),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_755_boot)
HXDLIN( 755)		lime_display_object_get_mouse_y = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_mouse_y",9f,09,72,fc),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_756_boot)
HXDLIN( 756)		lime_display_object_get_rotation = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_rotation",3e,90,b2,4b),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_757_boot)
HXDLIN( 757)		lime_display_object_set_rotation = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_rotation",b2,b3,ab,60),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_758_boot)
HXDLIN( 758)		lime_display_object_get_bg = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_bg",c5,68,5c,fe),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_759_boot)
HXDLIN( 759)		lime_display_object_set_bg = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_bg",39,bd,a4,ca),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_760_boot)
HXDLIN( 760)		lime_display_object_get_name = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_name",4b,45,c6,a4),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_761_boot)
HXDLIN( 761)		lime_display_object_set_name = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_name",bf,9e,23,53),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_762_boot)
HXDLIN( 762)		lime_display_object_get_width = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_width",06,83,94,bc),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_763_boot)
HXDLIN( 763)		lime_display_object_set_width = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_width",12,6f,e5,9f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_764_boot)
HXDLIN( 764)		lime_display_object_get_height = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_height",e7,9a,ad,fb),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_765_boot)
HXDLIN( 765)		lime_display_object_set_height = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_height",5b,39,2b,ff),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_766_boot)
HXDLIN( 766)		lime_display_object_get_alpha = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_alpha",5e,74,c8,13),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_767_boot)
HXDLIN( 767)		lime_display_object_set_alpha = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_alpha",6a,60,19,f7),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_768_boot)
HXDLIN( 768)		lime_display_object_get_blend_mode = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_blend_mode",51,54,c3,a5),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_769_boot)
HXDLIN( 769)		lime_display_object_set_blend_mode = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_blend_mode",c5,3c,e3,c5),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_770_boot)
HXDLIN( 770)		lime_display_object_get_cache_as_bitmap = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_cache_as_bitmap",5f,78,8c,57),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_771_boot)
HXDLIN( 771)		lime_display_object_set_cache_as_bitmap = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_cache_as_bitmap",6b,6b,29,94),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_772_boot)
HXDLIN( 772)		lime_display_object_get_pedantic_bitmap_caching = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_pedantic_bitmap_caching",fc,ee,33,de),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_773_boot)
HXDLIN( 773)		lime_display_object_set_pedantic_bitmap_caching = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_pedantic_bitmap_caching",08,ce,cc,20),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_774_boot)
HXDLIN( 774)		lime_display_object_get_visible = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_visible",72,85,23,df),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_775_boot)
HXDLIN( 775)		lime_display_object_set_visible = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_visible",7e,8c,90,e9),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_776_boot)
HXDLIN( 776)		lime_display_object_set_filters = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_filters",c7,b5,b2,4f),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_777_boot)
HXDLIN( 777)		lime_display_object_global_to_local = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_global_to_local",6c,1b,0c,3b),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_778_boot)
HXDLIN( 778)		lime_display_object_local_to_global = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_local_to_global",3c,81,53,74),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_779_boot)
HXDLIN( 779)		lime_display_object_set_scale9_grid = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_scale9_grid",e2,df,18,52),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_780_boot)
HXDLIN( 780)		lime_display_object_set_scroll_rect = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_scroll_rect",e2,4b,3d,8e),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_781_boot)
HXDLIN( 781)		lime_display_object_set_mask = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_mask",60,6d,7a,52),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_782_boot)
HXDLIN( 782)		lime_display_object_set_matrix = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_matrix",b5,67,a7,b8),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_783_boot)
HXDLIN( 783)		lime_display_object_get_matrix = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_matrix",41,c9,29,b5),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_784_boot)
HXDLIN( 784)		lime_display_object_get_color_transform = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_color_transform",50,e1,40,0f),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_785_boot)
HXDLIN( 785)		lime_display_object_set_color_transform = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_set_color_transform",5c,d4,dd,4b),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_786_boot)
HXDLIN( 786)		lime_display_object_get_pixel_bounds = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_pixel_bounds",4e,21,4f,7c),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_787_boot)
HXDLIN( 787)		lime_display_object_get_bounds = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_get_bounds",75,19,7f,5f),(int)4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f94de761dfec798e_788_boot)
HXDLIN( 788)		lime_display_object_hit_test_point = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_display_object_hit_test_point",c6,29,ad,25),(int)5);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace display
