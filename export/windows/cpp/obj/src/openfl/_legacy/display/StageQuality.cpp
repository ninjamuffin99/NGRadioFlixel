// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_openfl__legacy_display_StageQuality
#include <openfl/_legacy/display/StageQuality.h>
#endif
namespace openfl{
namespace _legacy{
namespace display{

::openfl::_legacy::display::StageQuality StageQuality_obj::BEST;

::openfl::_legacy::display::StageQuality StageQuality_obj::HIGH;

::openfl::_legacy::display::StageQuality StageQuality_obj::LOW;

::openfl::_legacy::display::StageQuality StageQuality_obj::MEDIUM;

bool StageQuality_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BEST",24,b9,d4,2b)) { outValue = StageQuality_obj::BEST; return true; }
	if (inName==HX_("HIGH",62,ff,ce,2f)) { outValue = StageQuality_obj::HIGH; return true; }
	if (inName==HX_("LOW",74,f0,39,00)) { outValue = StageQuality_obj::LOW; return true; }
	if (inName==HX_("MEDIUM",75,00,4b,b1)) { outValue = StageQuality_obj::MEDIUM; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(StageQuality_obj)

int StageQuality_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BEST",24,b9,d4,2b)) return 3;
	if (inName==HX_("HIGH",62,ff,ce,2f)) return 2;
	if (inName==HX_("LOW",74,f0,39,00)) return 0;
	if (inName==HX_("MEDIUM",75,00,4b,b1)) return 1;
	return super::__FindIndex(inName);
}

int StageQuality_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BEST",24,b9,d4,2b)) return 0;
	if (inName==HX_("HIGH",62,ff,ce,2f)) return 0;
	if (inName==HX_("LOW",74,f0,39,00)) return 0;
	if (inName==HX_("MEDIUM",75,00,4b,b1)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val StageQuality_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BEST",24,b9,d4,2b)) return BEST;
	if (inName==HX_("HIGH",62,ff,ce,2f)) return HIGH;
	if (inName==HX_("LOW",74,f0,39,00)) return LOW;
	if (inName==HX_("MEDIUM",75,00,4b,b1)) return MEDIUM;
	return super::__Field(inName,inCallProp);
}

static ::String StageQuality_obj_sStaticFields[] = {
	HX_("LOW",74,f0,39,00),
	HX_("MEDIUM",75,00,4b,b1),
	HX_("HIGH",62,ff,ce,2f),
	HX_("BEST",24,b9,d4,2b),
	::String(null())
};

static void StageQuality_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StageQuality_obj::BEST,"BEST");
	HX_MARK_MEMBER_NAME(StageQuality_obj::HIGH,"HIGH");
	HX_MARK_MEMBER_NAME(StageQuality_obj::LOW,"LOW");
	HX_MARK_MEMBER_NAME(StageQuality_obj::MEDIUM,"MEDIUM");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StageQuality_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StageQuality_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(StageQuality_obj::BEST,"BEST");
	HX_VISIT_MEMBER_NAME(StageQuality_obj::HIGH,"HIGH");
	HX_VISIT_MEMBER_NAME(StageQuality_obj::LOW,"LOW");
	HX_VISIT_MEMBER_NAME(StageQuality_obj::MEDIUM,"MEDIUM");
};
#endif

hx::Class StageQuality_obj::__mClass;

Dynamic __Create_StageQuality_obj() { return new StageQuality_obj; }

void StageQuality_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("openfl._legacy.display.StageQuality","\x51","\xd5","\x10","\xdb"), hx::TCanCast< StageQuality_obj >,StageQuality_obj_sStaticFields,0,
	&__Create_StageQuality_obj, &__Create,
	&super::__SGetClass(), &CreateStageQuality_obj, StageQuality_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , StageQuality_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &StageQuality_obj::__GetStatic;
}

void StageQuality_obj::__boot()
{
BEST = hx::CreateEnum< StageQuality_obj >(HX_HCSTRING("BEST","\x24","\xb9","\xd4","\x2b"),3,0);
HIGH = hx::CreateEnum< StageQuality_obj >(HX_HCSTRING("HIGH","\x62","\xff","\xce","\x2f"),2,0);
LOW = hx::CreateEnum< StageQuality_obj >(HX_HCSTRING("LOW","\x74","\xf0","\x39","\x00"),0,0);
MEDIUM = hx::CreateEnum< StageQuality_obj >(HX_HCSTRING("MEDIUM","\x75","\x00","\x4b","\xb1"),1,0);
}


} // end namespace openfl
} // end namespace _legacy
} // end namespace display
