// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_openfl__legacy_media_InternalAudioType
#include <openfl/_legacy/media/InternalAudioType.h>
#endif
namespace openfl{
namespace _legacy{
namespace media{

::openfl::_legacy::media::InternalAudioType InternalAudioType_obj::MUSIC;

::openfl::_legacy::media::InternalAudioType InternalAudioType_obj::SOUND;

::openfl::_legacy::media::InternalAudioType InternalAudioType_obj::UNKNOWN;

bool InternalAudioType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("MUSIC",85,08,49,8e)) { outValue = InternalAudioType_obj::MUSIC; return true; }
	if (inName==HX_("SOUND",af,c4,ba,fe)) { outValue = InternalAudioType_obj::SOUND; return true; }
	if (inName==HX_("UNKNOWN",6a,f7,4e,61)) { outValue = InternalAudioType_obj::UNKNOWN; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(InternalAudioType_obj)

int InternalAudioType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("MUSIC",85,08,49,8e)) return 0;
	if (inName==HX_("SOUND",af,c4,ba,fe)) return 1;
	if (inName==HX_("UNKNOWN",6a,f7,4e,61)) return 2;
	return super::__FindIndex(inName);
}

int InternalAudioType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("MUSIC",85,08,49,8e)) return 0;
	if (inName==HX_("SOUND",af,c4,ba,fe)) return 0;
	if (inName==HX_("UNKNOWN",6a,f7,4e,61)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val InternalAudioType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("MUSIC",85,08,49,8e)) return MUSIC;
	if (inName==HX_("SOUND",af,c4,ba,fe)) return SOUND;
	if (inName==HX_("UNKNOWN",6a,f7,4e,61)) return UNKNOWN;
	return super::__Field(inName,inCallProp);
}

static ::String InternalAudioType_obj_sStaticFields[] = {
	HX_("MUSIC",85,08,49,8e),
	HX_("SOUND",af,c4,ba,fe),
	HX_("UNKNOWN",6a,f7,4e,61),
	::String(null())
};

static void InternalAudioType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InternalAudioType_obj::MUSIC,"MUSIC");
	HX_MARK_MEMBER_NAME(InternalAudioType_obj::SOUND,"SOUND");
	HX_MARK_MEMBER_NAME(InternalAudioType_obj::UNKNOWN,"UNKNOWN");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InternalAudioType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InternalAudioType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(InternalAudioType_obj::MUSIC,"MUSIC");
	HX_VISIT_MEMBER_NAME(InternalAudioType_obj::SOUND,"SOUND");
	HX_VISIT_MEMBER_NAME(InternalAudioType_obj::UNKNOWN,"UNKNOWN");
};
#endif

hx::Class InternalAudioType_obj::__mClass;

Dynamic __Create_InternalAudioType_obj() { return new InternalAudioType_obj; }

void InternalAudioType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("openfl._legacy.media.InternalAudioType","\x25","\xb2","\x5a","\x5e"), hx::TCanCast< InternalAudioType_obj >,InternalAudioType_obj_sStaticFields,0,
	&__Create_InternalAudioType_obj, &__Create,
	&super::__SGetClass(), &CreateInternalAudioType_obj, InternalAudioType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , InternalAudioType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &InternalAudioType_obj::__GetStatic;
}

void InternalAudioType_obj::__boot()
{
MUSIC = hx::CreateEnum< InternalAudioType_obj >(HX_HCSTRING("MUSIC","\x85","\x08","\x49","\x8e"),0,0);
SOUND = hx::CreateEnum< InternalAudioType_obj >(HX_HCSTRING("SOUND","\xaf","\xc4","\xba","\xfe"),1,0);
UNKNOWN = hx::CreateEnum< InternalAudioType_obj >(HX_HCSTRING("UNKNOWN","\x6a","\xf7","\x4e","\x61"),2,0);
}


} // end namespace openfl
} // end namespace _legacy
} // end namespace media
