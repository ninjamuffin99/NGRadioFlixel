// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_openfl__Vector_Vector_Impl_
#define INCLUDED_openfl__Vector_Vector_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(openfl,_Vector,Vector_Impl_)

namespace openfl{
namespace _Vector{


class HXCPP_CLASS_ATTRIBUTES Vector_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Vector_Impl__obj OBJ_;
		Vector_Impl__obj();

	public:
		enum { _hx_ClassId = 0x0620c351 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl._Vector.Vector_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"openfl._Vector.Vector_Impl_"); }

		hx::ObjectPtr< Vector_Impl__obj > __new() {
			hx::ObjectPtr< Vector_Impl__obj > __this = new Vector_Impl__obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Vector_Impl__obj > __alloc(hx::Ctx *_hx_ctx) {
			Vector_Impl__obj *__this = (Vector_Impl__obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Vector_Impl__obj), false, "openfl._Vector.Vector_Impl_"));
			*(void **)__this = Vector_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Vector_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Vector_Impl_","\xc3","\xad","\x36","\x7e"); }

		static ::cpp::VirtualArray _new( ::Dynamic length, ::Dynamic fixed);
		static ::Dynamic _new_dyn();

		static ::cpp::VirtualArray concat(::cpp::VirtualArray this1,::cpp::VirtualArray a);
		static ::Dynamic concat_dyn();

		static ::cpp::VirtualArray copy(::cpp::VirtualArray this1);
		static ::Dynamic copy_dyn();

		static  ::Dynamic iterator(::cpp::VirtualArray this1);
		static ::Dynamic iterator_dyn();

		static ::String join(::cpp::VirtualArray this1,::String sep);
		static ::Dynamic join_dyn();

		static  ::Dynamic pop(::cpp::VirtualArray this1);
		static ::Dynamic pop_dyn();

		static int push(::cpp::VirtualArray this1, ::Dynamic x);
		static ::Dynamic push_dyn();

		static void reverse(::cpp::VirtualArray this1);
		static ::Dynamic reverse_dyn();

		static  ::Dynamic shift(::cpp::VirtualArray this1);
		static ::Dynamic shift_dyn();

		static void unshift(::cpp::VirtualArray this1, ::Dynamic x);
		static ::Dynamic unshift_dyn();

		static ::cpp::VirtualArray slice(::cpp::VirtualArray this1, ::Dynamic pos, ::Dynamic end);
		static ::Dynamic slice_dyn();

		static void sort(::cpp::VirtualArray this1, ::Dynamic f);
		static ::Dynamic sort_dyn();

		static ::cpp::VirtualArray splice(::cpp::VirtualArray this1,int pos,int len);
		static ::Dynamic splice_dyn();

		static ::String toString(::cpp::VirtualArray this1);
		static ::Dynamic toString_dyn();

		static int indexOf(::cpp::VirtualArray this1, ::Dynamic x, ::Dynamic from);
		static ::Dynamic indexOf_dyn();

		static int lastIndexOf(::cpp::VirtualArray this1, ::Dynamic x, ::Dynamic from);
		static ::Dynamic lastIndexOf_dyn();

		static  ::Dynamic get(::cpp::VirtualArray this1,int index);
		static ::Dynamic get_dyn();

		static  ::Dynamic set(::cpp::VirtualArray this1,int index, ::Dynamic value);
		static ::Dynamic set_dyn();

		static ::cpp::VirtualArray ofArray(::cpp::VirtualArray a);
		static ::Dynamic ofArray_dyn();

		static ::cpp::VirtualArray convert(::cpp::VirtualArray v);
		static ::Dynamic convert_dyn();

		static ::cpp::VirtualArray fromHaxeVector(::cpp::VirtualArray value);
		static ::Dynamic fromHaxeVector_dyn();

		static ::cpp::VirtualArray toHaxeVector(::cpp::VirtualArray this1);
		static ::Dynamic toHaxeVector_dyn();

		static int get_length(::cpp::VirtualArray this1);
		static ::Dynamic get_length_dyn();

		static int set_length(::cpp::VirtualArray this1,int value);
		static ::Dynamic set_length_dyn();

		static bool get_fixed(::cpp::VirtualArray this1);
		static ::Dynamic get_fixed_dyn();

		static bool set_fixed(::cpp::VirtualArray this1,bool value);
		static ::Dynamic set_fixed_dyn();

};

} // end namespace openfl
} // end namespace _Vector

#endif /* INCLUDED_openfl__Vector_Vector_Impl_ */ 
