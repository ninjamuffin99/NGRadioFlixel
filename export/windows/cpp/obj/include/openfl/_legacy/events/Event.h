// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_openfl__legacy_events_Event
#define INCLUDED_openfl__legacy_events_Event

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(openfl,_legacy,events,Event)

namespace openfl{
namespace _legacy{
namespace events{


class HXCPP_CLASS_ATTRIBUTES Event_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Event_obj OBJ_;
		Event_obj();

	public:
		enum { _hx_ClassId = 0x0dd3a6b1 };

		void __construct(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl._legacy.events.Event")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl._legacy.events.Event"); }
		static hx::ObjectPtr< Event_obj > __new(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable);
		static hx::ObjectPtr< Event_obj > __alloc(hx::Ctx *_hx_ctx,::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Event_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Event","\xfa","\x37","\xf2","\x08"); }

		static void __boot();
		static ::String ACTIVATE;
		static ::String ADDED;
		static ::String ADDED_TO_STAGE;
		static ::String CANCEL;
		static ::String CHANGE;
		static ::String CLOSE;
		static ::String COMPLETE;
		static ::String CONNECT;
		static ::String CONTEXT3D_CREATE;
		static ::String DEACTIVATE;
		static ::String ENTER_FRAME;
		static ::String ID3;
		static ::String INIT;
		static ::String MOUSE_LEAVE;
		static ::String OPEN;
		static ::String REMOVED;
		static ::String REMOVED_FROM_STAGE;
		static ::String RENDER;
		static ::String RESIZE;
		static ::String SCROLL;
		static ::String SELECT;
		static ::String SOUND_COMPLETE;
		static ::String TAB_CHILDREN_CHANGE;
		static ::String TAB_ENABLED_CHANGE;
		static ::String TAB_INDEX_CHANGE;
		static ::String UNLOAD;
		bool _hx___bubbles;
		bool _hx___cancelable;
		 ::Dynamic _hx___currentTarget;
		int _hx___eventPhase;
		bool _hx___isCancelled;
		bool _hx___isCancelledNow;
		 ::Dynamic _hx___target;
		::String _hx___type;
		virtual  ::openfl::_legacy::events::Event clone();
		::Dynamic clone_dyn();

		bool isDefaultPrevented();
		::Dynamic isDefaultPrevented_dyn();

		void stopImmediatePropagation();
		::Dynamic stopImmediatePropagation_dyn();

		void stopPropagation();
		::Dynamic stopPropagation_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

		::String _hx___formatToString(::String className,::Array< ::String > parameters);
		::Dynamic _hx___formatToString_dyn();

		bool _hx___getIsCancelled();
		::Dynamic _hx___getIsCancelled_dyn();

		bool _hx___getIsCancelledNow();
		::Dynamic _hx___getIsCancelledNow_dyn();

		void _hx___setPhase(int value);
		::Dynamic _hx___setPhase_dyn();

		bool get_bubbles();
		::Dynamic get_bubbles_dyn();

		bool get_cancelable();
		::Dynamic get_cancelable_dyn();

		 ::Dynamic get_currentTarget();
		::Dynamic get_currentTarget_dyn();

		 ::Dynamic set_currentTarget( ::Dynamic value);
		::Dynamic set_currentTarget_dyn();

		int get_eventPhase();
		::Dynamic get_eventPhase_dyn();

		 ::Dynamic get_target();
		::Dynamic get_target_dyn();

		 ::Dynamic set_target( ::Dynamic value);
		::Dynamic set_target_dyn();

		::String get_type();
		::Dynamic get_type_dyn();

};

} // end namespace openfl
} // end namespace _legacy
} // end namespace events

#endif /* INCLUDED_openfl__legacy_events_Event */ 
