// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_openfl__legacy_gl__GL_Float32Data_Impl_
#define INCLUDED_openfl__legacy_gl__GL_Float32Data_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(openfl,_legacy,gl,_GL,Float32Data_Impl_)
HX_DECLARE_CLASS3(openfl,_legacy,utils,ArrayBufferView)
HX_DECLARE_CLASS3(openfl,_legacy,utils,Float32Array)
HX_DECLARE_CLASS3(openfl,_legacy,utils,IMemoryRange)

namespace openfl{
namespace _legacy{
namespace gl{
namespace _GL{


class HXCPP_CLASS_ATTRIBUTES Float32Data_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Float32Data_Impl__obj OBJ_;
		Float32Data_Impl__obj();

	public:
		enum { _hx_ClassId = 0x75978f1a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl._legacy.gl._GL.Float32Data_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"openfl._legacy.gl._GL.Float32Data_Impl_"); }

		hx::ObjectPtr< Float32Data_Impl__obj > __new() {
			hx::ObjectPtr< Float32Data_Impl__obj > __this = new Float32Data_Impl__obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Float32Data_Impl__obj > __alloc(hx::Ctx *_hx_ctx) {
			Float32Data_Impl__obj *__this = (Float32Data_Impl__obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Float32Data_Impl__obj), false, "openfl._legacy.gl._GL.Float32Data_Impl_"));
			*(void **)__this = Float32Data_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Float32Data_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Float32Data_Impl_","\x45","\xdb","\xd7","\x0d"); }

		static  ::Dynamic _new( ::Dynamic data);
		static ::Dynamic _new_dyn();

		static  ::Dynamic toDynamic( ::Dynamic this1);
		static ::Dynamic toDynamic_dyn();

		static  ::Dynamic fromFloat32Array( ::openfl::_legacy::utils::Float32Array f);
		static ::Dynamic fromFloat32Array_dyn();

		static  ::Dynamic fromArrayFloat(::Array< Float > f);
		static ::Dynamic fromArrayFloat_dyn();

};

} // end namespace openfl
} // end namespace _legacy
} // end namespace gl
} // end namespace _GL

#endif /* INCLUDED_openfl__legacy_gl__GL_Float32Data_Impl_ */ 
