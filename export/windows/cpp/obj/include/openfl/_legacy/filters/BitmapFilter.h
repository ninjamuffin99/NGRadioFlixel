// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_openfl__legacy_filters_BitmapFilter
#define INCLUDED_openfl__legacy_filters_BitmapFilter

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_ee8120f3a30d9c30_12_new)
HX_DECLARE_CLASS3(openfl,_legacy,filters,BitmapFilter)

namespace openfl{
namespace _legacy{
namespace filters{


class HXCPP_CLASS_ATTRIBUTES BitmapFilter_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BitmapFilter_obj OBJ_;
		BitmapFilter_obj();

	public:
		enum { _hx_ClassId = 0x42644652 };

		void __construct(::String __o_type);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl._legacy.filters.BitmapFilter")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl._legacy.filters.BitmapFilter"); }

		hx::ObjectPtr< BitmapFilter_obj > __new(::String __o_type) {
			hx::ObjectPtr< BitmapFilter_obj > __this = new BitmapFilter_obj();
			__this->__construct(__o_type);
			return __this;
		}

		static hx::ObjectPtr< BitmapFilter_obj > __alloc(hx::Ctx *_hx_ctx,::String __o_type) {
			BitmapFilter_obj *__this = (BitmapFilter_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BitmapFilter_obj), true, "openfl._legacy.filters.BitmapFilter"));
			*(void **)__this = BitmapFilter_obj::_hx_vtable;
{
::String type = __o_type.Default(HX_HCSTRING("","\x00","\x00","\x00","\x00"));
            	HX_STACKFRAME(&_hx_pos_ee8120f3a30d9c30_12_new)
HXDLIN(  12)		( ( ::openfl::_legacy::filters::BitmapFilter)(__this) )->type = type;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BitmapFilter_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BitmapFilter","\x27","\x0d","\x67","\x58"); }

		::String type;
		 ::openfl::_legacy::filters::BitmapFilter clone();
		::Dynamic clone_dyn();

};

} // end namespace openfl
} // end namespace _legacy
} // end namespace filters

#endif /* INCLUDED_openfl__legacy_filters_BitmapFilter */ 
